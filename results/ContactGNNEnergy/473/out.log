#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16896, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy11', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=60, save_mod=5, print_mod=2, lr=1e-06, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[30], gamma=0.1, patience=10, loss='mse_log', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=473, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=True, input_L_to_D_mode='meandist', use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/473', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/473/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/473/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/473/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_log at 0x7f83bc19d5e0>, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 24.061 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 1e-06
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f8394371fd0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.9806
Mean test/val loss: 0.9844
[25, 50, 75] percentiles test/val loss: [0.5267 0.7774 1.1773]

Epoch 4, loss = 0.8723
Mean test/val loss: 0.8521
[25, 50, 75] percentiles test/val loss: [0.391  0.7196 1.0769]

Epoch 6, loss = 0.8394
Mean test/val loss: 0.8374
[25, 50, 75] percentiles test/val loss: [0.4025 0.6982 1.0631]

Epoch 8, loss = 0.8203
Mean test/val loss: 0.8373
[25, 50, 75] percentiles test/val loss: [0.3943 0.6998 1.0673]

Epoch 10, loss = 0.8010
Mean test/val loss: 0.8024
[25, 50, 75] percentiles test/val loss: [0.3726 0.6563 1.0157]

Epoch 12, loss = 0.7709
Mean test/val loss: 0.7822
[25, 50, 75] percentiles test/val loss: [0.3709 0.6411 1.0058]

Epoch 14, loss = 0.7825
Mean test/val loss: 0.7831
[25, 50, 75] percentiles test/val loss: [0.3742 0.6447 0.9878]

Epoch 16, loss = 0.7549
Mean test/val loss: 0.7660
[25, 50, 75] percentiles test/val loss: [0.3603 0.6278 0.9985]

Epoch 18, loss = 0.7651
Mean test/val loss: 0.7775
[25, 50, 75] percentiles test/val loss: [0.3637 0.6306 0.9788]

Epoch 20, loss = 0.7550
Mean test/val loss: 0.7664
[25, 50, 75] percentiles test/val loss: [0.3544 0.6234 0.9828]

Epoch 22, loss = 0.7474
Mean test/val loss: 0.7601
[25, 50, 75] percentiles test/val loss: [0.35   0.6078 0.9707]

Epoch 24, loss = 0.7396
Mean test/val loss: 0.7505
[25, 50, 75] percentiles test/val loss: [0.3451 0.5994 0.9663]

Epoch 26, loss = 0.7340
Mean test/val loss: 0.7484
[25, 50, 75] percentiles test/val loss: [0.3475 0.5987 0.9642]

Epoch 28, loss = 0.7291
Mean test/val loss: 0.7509
[25, 50, 75] percentiles test/val loss: [0.3529 0.6087 0.9733]

Epoch 30, loss = 0.7248
Mean test/val loss: 0.7375
[25, 50, 75] percentiles test/val loss: [0.3438 0.5896 0.9612]

New lr: 1e-07
Converged

Total parameters: 26974000
Total training + validation time: 6.0 hours, 22.0 mins, and 4.0 secs
Final val loss: 0.7375106578990817

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 1.4762661457061768
dataset_04_28_23 sample324: 1.0915298461914062
dataset_04_28_23 sample3464: 0.9641759395599365
dataset_04_28_23 sample2834: 0.9693876504898071
dataset_04_28_23 sample1936: 0.7586842775344849
MSE_log: 1.052 +- 0.238

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 18.668350219726562
dataset_04_28_23 sample2834-downsampling: 10.12741756439209
dataset_04_28_23 sample324-downsampling: 17.216760635375977
dataset_04_28_23 sample3464-downsampling: 13.502666473388672
dataset_04_28_23 sample981-downsampling: 15.503764152526855
Loss: 15.004 +- 2.987

Removing /scratch/midway3/erschultz/ContactGNNEnergy11downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 17.136125564575195
dataset_04_28_23 sample2834-regular: 10.364082336425781
dataset_04_28_23 sample324-regular: 15.754742622375488
dataset_04_28_23 sample3464-regular: 13.296967506408691
dataset_04_28_23 sample981-regular: 15.21945571899414
Loss: 14.354 +- 2.345

Removing /scratch/midway3/erschultz/ContactGNNEnergy11regsample
