#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 Sequential(
  (0): ConvBlock(
    (model): Sequential(
      (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
  (1): ConvBlock(
    (model): Sequential(
      (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
  (2): ConvBlock(
    (model): Sequential(
      (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
  (3): ConvBlock(
    (model): Sequential(
      (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
  (4): ConvBlock(
    (model): Sequential(
      (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(16,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
) 
 Bilinear 

Head D:
 Sequential(
  (0): ConvBlock(
    (model): Sequential(
      (0): Conv1d(64, 32, kernel_size=(3,), stride=(1,), padding=(1,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
  (1): ConvBlock(
    (model): Sequential(
      (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(2,), dilation=(2,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
  (2): ConvBlock(
    (model): Sequential(
      (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(4,), dilation=(4,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
  (3): ConvBlock(
    (model): Sequential(
      (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(8,), dilation=(8,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
  (4): ConvBlock(
    (model): Sequential(
      (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(16,), dilation=(16,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
) 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=8192, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy3', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=428, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='dconv-bilinear', head_architecture_2='dconv-fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/428', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/428/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/428/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/428/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7fa17d7cf430>, channels=1, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'GeneticDistance(norm=True)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=4, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 14.18 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7fa1440fb400>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.5837
Mean test/val loss: 0.4989
[25, 50, 75] percentiles test/val loss: [0.2209 0.37   0.6298]

Epoch 4, loss = 0.4610
Mean test/val loss: 0.5005
[25, 50, 75] percentiles test/val loss: [0.2044 0.3544 0.635 ]

Epoch 6, loss = 0.4258
Mean test/val loss: 0.4331
[25, 50, 75] percentiles test/val loss: [0.2039 0.3265 0.5247]

Epoch 8, loss = 0.4010
Mean test/val loss: 0.4448
[25, 50, 75] percentiles test/val loss: [0.212  0.3522 0.5555]

Epoch 10, loss = 0.3829
Mean test/val loss: 0.3944
[25, 50, 75] percentiles test/val loss: [0.1799 0.2988 0.4834]

Epoch 12, loss = 0.3648
Mean test/val loss: 0.3735
[25, 50, 75] percentiles test/val loss: [0.178  0.2872 0.4514]

Epoch 14, loss = 0.3468
Mean test/val loss: 0.3526
[25, 50, 75] percentiles test/val loss: [0.164  0.2719 0.4318]

Epoch 16, loss = 0.3352
Mean test/val loss: 0.3409
[25, 50, 75] percentiles test/val loss: [0.1553 0.2596 0.4222]

Epoch 18, loss = 0.3226
Mean test/val loss: 0.3411
[25, 50, 75] percentiles test/val loss: [0.1607 0.2649 0.4114]

Epoch 20, loss = 0.3127
Mean test/val loss: 0.3320
[25, 50, 75] percentiles test/val loss: [0.1523 0.2569 0.4009]

Epoch 22, loss = 0.3052
Mean test/val loss: 0.3393
[25, 50, 75] percentiles test/val loss: [0.1718 0.2658 0.4107]

Epoch 24, loss = 0.2989
Mean test/val loss: 0.3236
[25, 50, 75] percentiles test/val loss: [0.1467 0.2474 0.3925]

Epoch 26, loss = 0.2905
Mean test/val loss: 0.3207
[25, 50, 75] percentiles test/val loss: [0.149  0.2427 0.3888]

Epoch 28, loss = 0.2842
Mean test/val loss: 0.3149
[25, 50, 75] percentiles test/val loss: [0.1496 0.2419 0.3785]

Epoch 30, loss = 0.2783
Mean test/val loss: 0.3070
[25, 50, 75] percentiles test/val loss: [0.14   0.2348 0.3738]

Epoch 32, loss = 0.2738
Mean test/val loss: 0.3024
[25, 50, 75] percentiles test/val loss: [0.1395 0.2351 0.366 ]

Epoch 34, loss = 0.2696
Mean test/val loss: 0.3151
[25, 50, 75] percentiles test/val loss: [0.1525 0.2446 0.3829]

Epoch 36, loss = 0.2644
Mean test/val loss: 0.3180
[25, 50, 75] percentiles test/val loss: [0.1481 0.2428 0.3854]

Epoch 38, loss = 0.2614
Mean test/val loss: 0.3052
[25, 50, 75] percentiles test/val loss: [0.1402 0.2301 0.363 ]

Epoch 40, loss = 0.2559
Mean test/val loss: 0.2950
[25, 50, 75] percentiles test/val loss: [0.1365 0.2249 0.3604]

New lr: 1e-05
Epoch 42, loss = 0.2362
Mean test/val loss: 0.2861
[25, 50, 75] percentiles test/val loss: [0.1302 0.2195 0.3512]

Epoch 44, loss = 0.2331
Mean test/val loss: 0.2859
[25, 50, 75] percentiles test/val loss: [0.1299 0.2184 0.3494]

Epoch 46, loss = 0.2310
Mean test/val loss: 0.2849
[25, 50, 75] percentiles test/val loss: [0.13   0.216  0.3493]

Epoch 48, loss = 0.2294
Mean test/val loss: 0.2852
[25, 50, 75] percentiles test/val loss: [0.1298 0.2169 0.3469]

Epoch 50, loss = 0.2279
Mean test/val loss: 0.2850
[25, 50, 75] percentiles test/val loss: [0.1286 0.2166 0.3442]

Epoch 52, loss = 0.2266
Mean test/val loss: 0.2844
[25, 50, 75] percentiles test/val loss: [0.1296 0.2144 0.3449]

Epoch 54, loss = 0.2253
Mean test/val loss: 0.2847
[25, 50, 75] percentiles test/val loss: [0.1288 0.2141 0.3437]

Epoch 56, loss = 0.2242
Mean test/val loss: 0.2839
[25, 50, 75] percentiles test/val loss: [0.1299 0.2146 0.3464]

Epoch 58, loss = 0.2231
Mean test/val loss: 0.2843
[25, 50, 75] percentiles test/val loss: [0.1285 0.2137 0.3452]

Epoch 60, loss = 0.2220
Mean test/val loss: 0.2836
[25, 50, 75] percentiles test/val loss: [0.1281 0.2143 0.3437]

Epoch 62, loss = 0.2210
Mean test/val loss: 0.2836
[25, 50, 75] percentiles test/val loss: [0.1283 0.2123 0.3412]

Epoch 64, loss = 0.2201
Mean test/val loss: 0.2839
[25, 50, 75] percentiles test/val loss: [0.1289 0.2119 0.343 ]

Epoch 66, loss = 0.2192
Mean test/val loss: 0.2841
[25, 50, 75] percentiles test/val loss: [0.1282 0.2117 0.3415]

Epoch 68, loss = 0.2183
Mean test/val loss: 0.2837
[25, 50, 75] percentiles test/val loss: [0.1279 0.2107 0.3397]

Epoch 70, loss = 0.2175
Mean test/val loss: 0.2832
[25, 50, 75] percentiles test/val loss: [0.1276 0.2115 0.341 ]

Epoch 72, loss = 0.2167
Mean test/val loss: 0.2835
[25, 50, 75] percentiles test/val loss: [0.1275 0.2107 0.3424]

Epoch 74, loss = 0.2159
Mean test/val loss: 0.2837
[25, 50, 75] percentiles test/val loss: [0.1281 0.211  0.3444]

Epoch 76, loss = 0.2151
Mean test/val loss: 0.2836
[25, 50, 75] percentiles test/val loss: [0.1283 0.2106 0.3408]

Epoch 78, loss = 0.2144
Mean test/val loss: 0.2838
[25, 50, 75] percentiles test/val loss: [0.1273 0.2094 0.3423]

Epoch 80, loss = 0.2137
Mean test/val loss: 0.2833
[25, 50, 75] percentiles test/val loss: [0.1272 0.2107 0.3401]


Total parameters: 18350612
Total training + validation time: 8.0 hours, 10.0 mins, and 53.20000000000073 secs
Final val loss: 0.28325166982039807

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 0.509131908416748
dataset_04_28_23 sample324: 0.6300740242004395
dataset_04_28_23 sample3464: 0.43487101793289185
dataset_04_28_23 sample2834: 0.4394405484199524
dataset_04_28_23 sample1936: 0.19802263379096985
Loss: 0.442 +- 0.141

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 6.08546257019043
dataset_04_28_23 sample2834-downsampling: 7.716128349304199
dataset_04_28_23 sample324-downsampling: 13.604742050170898
dataset_04_28_23 sample3464-downsampling: 8.636869430541992
dataset_04_28_23 sample981-downsampling: 10.592866897583008
Loss: 9.327 +- 2.588

Removing /scratch/midway3/erschultz/ContactGNNEnergy3downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 6.238971710205078
dataset_04_28_23 sample2834-regular: 7.389560222625732
dataset_04_28_23 sample324-regular: 15.930130958557129
dataset_04_28_23 sample3464-regular: 10.461454391479492
dataset_04_28_23 sample981-regular: 13.845438957214355
Loss: 10.773 +- 3.692

Removing /scratch/midway3/erschultz/ContactGNNEnergy3regsample
