#### ARCHITECTURE ####
Node Encoder:
 None 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(1, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=32768, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (5): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (6): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=2080, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
) 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_18_22', '/project2/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy4', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=328, pretrained=False, resume_training=False, k=None, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, message_passing='weighted_GAT', head_architecture='bilinear_chi_triu', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/328', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/328/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/328/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/328/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f882e967a60>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 75.182 minutes
Average num edges per graph:  222294.36527196653
Mean degree: [362.66 512.   449.47 ... 329.12 511.93 511.26] +- [70.54  0.   53.89 ... 80.99  0.29  1.69]

split sizes: train=4302, val=478, test=0, N=4780
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 2, loss = 12.8348
Mean test/val loss: 11.2533
[25, 50, 75] quantiles test/val loss: [ 6.595   9.1836 13.1088]

Epoch 4, loss = 10.4027
Mean test/val loss: 10.1376
[25, 50, 75] quantiles test/val loss: [ 5.7223  8.2275 11.4911]

Epoch 6, loss = 10.1231
Mean test/val loss: 9.2538
[25, 50, 75] quantiles test/val loss: [ 5.4725  7.8117 11.0465]

Epoch 8, loss = 9.6830
Mean test/val loss: 12.9051
[25, 50, 75] quantiles test/val loss: [ 7.0862 10.9646 15.8167]

Epoch 10, loss = 11.4842
Mean test/val loss: 9.2946
[25, 50, 75] quantiles test/val loss: [ 5.567   7.8254 10.8757]

Epoch 12, loss = 8.6697
Mean test/val loss: 8.6164
[25, 50, 75] quantiles test/val loss: [ 5.1115  7.465  10.5149]

Epoch 14, loss = 8.1748
Mean test/val loss: 8.4112
[25, 50, 75] quantiles test/val loss: [ 4.7607  7.0004 10.2408]

Epoch 16, loss = 7.9664
Mean test/val loss: 8.4622
[25, 50, 75] quantiles test/val loss: [ 5.027   7.3865 10.3208]

Epoch 18, loss = 9.2816
Mean test/val loss: 10.0074
[25, 50, 75] quantiles test/val loss: [ 5.4931  8.3822 12.2195]

Epoch 20, loss = 14.7889
Mean test/val loss: 48.8005
[25, 50, 75] quantiles test/val loss: [32.6417 48.7506 63.0142]

Epoch 22, loss = 13.3997
Mean test/val loss: 12.9452
[25, 50, 75] quantiles test/val loss: [ 7.6261 11.1652 14.9176]

Epoch 24, loss = 37.8195
Mean test/val loss: 10.2301
[25, 50, 75] quantiles test/val loss: [ 6.3021  8.6082 11.8003]

Epoch 26, loss = 10.2252
Mean test/val loss: 9.6280
[25, 50, 75] quantiles test/val loss: [ 5.4895  8.0909 11.702 ]

Epoch 28, loss = 8.5539
Mean test/val loss: 9.6404
[25, 50, 75] quantiles test/val loss: [ 6.2679  8.2554 11.2292]

Epoch 30, loss = 11.5939
Mean test/val loss: 11.9307
[25, 50, 75] quantiles test/val loss: [ 5.8448  8.9577 13.486 ]

Epoch 32, loss = 8.7639
Mean test/val loss: 10.0387
[25, 50, 75] quantiles test/val loss: [ 5.7832  8.5743 12.0111]

Epoch 34, loss = 8.0733
Mean test/val loss: 8.1710
[25, 50, 75] quantiles test/val loss: [4.6884 6.9478 9.8973]

Epoch 36, loss = 8.0479
Mean test/val loss: 8.1234
[25, 50, 75] quantiles test/val loss: [4.7642 6.9149 9.9043]

Epoch 38, loss = 2135838.4964
Mean test/val loss: 28.8090
[25, 50, 75] quantiles test/val loss: [13.1715 19.1939 30.6006]

Epoch 40, loss = 12.1975
Mean test/val loss: 11.2509
[25, 50, 75] quantiles test/val loss: [ 6.378   9.1488 13.3632]

Epoch 42, loss = 8.7950
Mean test/val loss: 8.9069
[25, 50, 75] quantiles test/val loss: [ 5.3384  7.4624 10.7168]

Epoch 44, loss = 7.8592
Mean test/val loss: 8.6600
[25, 50, 75] quantiles test/val loss: [ 5.1227  7.3641 10.359 ]

Epoch 46, loss = 7.7171
Mean test/val loss: 7.6687
[25, 50, 75] quantiles test/val loss: [4.5743 6.7183 9.4717]

Epoch 48, loss = 8.1965
Mean test/val loss: 8.7069
[25, 50, 75] quantiles test/val loss: [ 5.319   7.7559 10.3358]

Epoch 50, loss = 2608060.3387
Mean test/val loss: 62.7951
[25, 50, 75] quantiles test/val loss: [ 8.9372 18.6282 34.9456]

Epoch 52, loss = 13.1216
Mean test/val loss: 17.0394
[25, 50, 75] quantiles test/val loss: [ 6.9447  9.6319 13.7423]

Epoch 54, loss = 11.0669
Mean test/val loss: 11.7199
[25, 50, 75] quantiles test/val loss: [ 6.778  10.0768 14.0978]

Epoch 56, loss = 68.7288
