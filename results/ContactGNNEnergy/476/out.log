#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy15', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=60, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[30], gamma=0.1, patience=10, loss='mse_log', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=476, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=True, input_L_to_D_mode='subtract', use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/476', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/476/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/476/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/476/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_log at 0x7f5b5ef035e0>, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 16.925 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f5b38293bb0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.5838
Mean test/val loss: 0.5499
[25, 50, 75] percentiles test/val loss: [0.2733 0.4343 0.6735]

Epoch 4, loss = 0.4957
Mean test/val loss: 0.4809
[25, 50, 75] percentiles test/val loss: [0.2231 0.359  0.6169]

Epoch 6, loss = 0.4466
Mean test/val loss: 0.4689
[25, 50, 75] percentiles test/val loss: [0.2224 0.3638 0.5866]

Epoch 8, loss = 0.4191
Mean test/val loss: 0.4104
[25, 50, 75] percentiles test/val loss: [0.1903 0.3173 0.4921]

Epoch 10, loss = 0.3934
Mean test/val loss: 0.3880
[25, 50, 75] percentiles test/val loss: [0.1769 0.2944 0.4656]

Epoch 12, loss = 0.3861
Mean test/val loss: 0.3882
[25, 50, 75] percentiles test/val loss: [0.176  0.301  0.4764]

Epoch 14, loss = 0.3753
Mean test/val loss: 0.3745
[25, 50, 75] percentiles test/val loss: [0.178  0.2847 0.4501]

Epoch 16, loss = 0.3598
Mean test/val loss: 0.3597
[25, 50, 75] percentiles test/val loss: [0.1676 0.2669 0.4398]

Epoch 18, loss = 0.3455
Mean test/val loss: 0.3811
[25, 50, 75] percentiles test/val loss: [0.1807 0.3081 0.4588]

Epoch 20, loss = 0.3382
Mean test/val loss: 0.3495
[25, 50, 75] percentiles test/val loss: [0.165  0.2677 0.4153]

Epoch 22, loss = 0.3264
Mean test/val loss: 0.3355
[25, 50, 75] percentiles test/val loss: [0.1555 0.2577 0.4102]

Epoch 24, loss = 0.3297
Mean test/val loss: 0.3252
[25, 50, 75] percentiles test/val loss: [0.151  0.2497 0.3924]

Epoch 26, loss = 0.3126
Mean test/val loss: 0.3551
[25, 50, 75] percentiles test/val loss: [0.1831 0.2804 0.4143]

Epoch 28, loss = 0.3055
Mean test/val loss: 0.3113
[25, 50, 75] percentiles test/val loss: [0.1416 0.2395 0.3802]

Epoch 30, loss = 0.2983
Mean test/val loss: 0.3164
[25, 50, 75] percentiles test/val loss: [0.147  0.2398 0.3861]

New lr: 1e-05
Epoch 32, loss = 0.2630
Mean test/val loss: 0.2897
[25, 50, 75] percentiles test/val loss: [0.1318 0.2233 0.3614]

Epoch 34, loss = 0.2576
Mean test/val loss: 0.2845
[25, 50, 75] percentiles test/val loss: [0.1323 0.2199 0.3583]

Epoch 36, loss = 0.2537
Mean test/val loss: 0.2831
[25, 50, 75] percentiles test/val loss: [0.131  0.2184 0.3543]

Epoch 38, loss = 0.2504
Mean test/val loss: 0.2860
[25, 50, 75] percentiles test/val loss: [0.1328 0.2207 0.3552]

Epoch 40, loss = 0.2477
Mean test/val loss: 0.2806
[25, 50, 75] percentiles test/val loss: [0.1289 0.2157 0.3487]

Epoch 42, loss = 0.2450
Mean test/val loss: 0.2796
[25, 50, 75] percentiles test/val loss: [0.1279 0.2159 0.3515]

Epoch 44, loss = 0.2426
Mean test/val loss: 0.2781
[25, 50, 75] percentiles test/val loss: [0.1284 0.2151 0.3452]

Epoch 46, loss = 0.2404
Mean test/val loss: 0.2787
[25, 50, 75] percentiles test/val loss: [0.1293 0.2136 0.3465]

Epoch 48, loss = 0.2383
Mean test/val loss: 0.2773
[25, 50, 75] percentiles test/val loss: [0.1269 0.2123 0.3405]

Epoch 50, loss = 0.2364
Mean test/val loss: 0.2765
[25, 50, 75] percentiles test/val loss: [0.1267 0.2113 0.3428]

Epoch 52, loss = 0.2347
Mean test/val loss: 0.2757
[25, 50, 75] percentiles test/val loss: [0.1261 0.2096 0.3355]

Epoch 54, loss = 0.2329
Mean test/val loss: 0.2748
[25, 50, 75] percentiles test/val loss: [0.1251 0.2081 0.3376]

Epoch 56, loss = 0.2313
Mean test/val loss: 0.2748
[25, 50, 75] percentiles test/val loss: [0.126  0.2109 0.3369]

Epoch 58, loss = 0.2298
Mean test/val loss: 0.2755
[25, 50, 75] percentiles test/val loss: [0.126  0.2084 0.3364]

Epoch 60, loss = 0.2286
Mean test/val loss: 0.2754
[25, 50, 75] percentiles test/val loss: [0.1259 0.2087 0.3352]


Total parameters: 26462000
Total training + validation time: 15.0 hours, 14.0 mins, and 55.900000000001455 secs
Final val loss: 0.27543644680269064

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 0.46735090017318726
dataset_04_28_23 sample324: 0.66447913646698
dataset_04_28_23 sample3464: 0.30656421184539795
dataset_04_28_23 sample2834: 0.449100524187088
dataset_04_28_23 sample1936: 0.19270609319210052
MSE_log: 0.416 +- 0.16

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 3.567173957824707
dataset_04_28_23 sample2834-downsampling: 4.108343601226807
dataset_04_28_23 sample324-downsampling: 9.510236740112305
dataset_04_28_23 sample3464-downsampling: 5.2784624099731445
dataset_04_28_23 sample981-downsampling: 6.427567005157471
Loss: 5.778 +- 2.111

Removing /scratch/midway3/erschultz/ContactGNNEnergy15downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 3.1153640747070312
dataset_04_28_23 sample2834-regular: 4.0657806396484375
dataset_04_28_23 sample324-regular: 8.882217407226562
dataset_04_28_23 sample3464-regular: 4.444244384765625
dataset_04_28_23 sample981-regular: 5.248785972595215
Loss: 5.151 +- 1.988

Removing /scratch/midway3/erschultz/ContactGNNEnergy15regsample
