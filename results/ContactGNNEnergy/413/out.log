#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_05_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy8', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[50], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=413, pretrain_id=None, resume_training=False, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, grid_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/413', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/413/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/413/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/413/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f9309f71310>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 34.093 minutes
Number of samples: 5000
Average num edges per graph:  231652.3256
Mean degree: [387.18 486.64 504.79 ... 429.66 230.6  432.64] +- [71.   24.45  8.85 ... 62.28 79.4  53.09]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f92c876f220>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.4883
Mean test/val loss: 0.6668
[25, 50, 75] percentiles test/val loss: [0.4876 0.6116 0.8084]

Epoch 4, loss = 0.4215
Mean test/val loss: 0.4224
[25, 50, 75] percentiles test/val loss: [0.2949 0.3782 0.4911]

Epoch 6, loss = 0.3746
Mean test/val loss: 0.5316
[25, 50, 75] percentiles test/val loss: [0.3981 0.4909 0.628 ]

Epoch 8, loss = 0.3397
Mean test/val loss: 0.3606
[25, 50, 75] percentiles test/val loss: [0.233  0.3112 0.4342]

Epoch 10, loss = 0.3169
Mean test/val loss: 0.3393
[25, 50, 75] percentiles test/val loss: [0.2277 0.2948 0.3953]

Epoch 12, loss = 0.2980
Mean test/val loss: 0.3208
[25, 50, 75] percentiles test/val loss: [0.1968 0.2731 0.4015]

Epoch 14, loss = 0.2844
Mean test/val loss: 0.2998
[25, 50, 75] percentiles test/val loss: [0.1796 0.2505 0.3576]

Epoch 16, loss = 0.2752
Mean test/val loss: 0.2957
[25, 50, 75] percentiles test/val loss: [0.1827 0.2471 0.3439]

Epoch 18, loss = 0.2649
Mean test/val loss: 0.2900
[25, 50, 75] percentiles test/val loss: [0.1758 0.2382 0.3571]

Epoch 20, loss = 0.2570
Mean test/val loss: 0.2842
[25, 50, 75] percentiles test/val loss: [0.1759 0.2376 0.344 ]

Epoch 22, loss = 0.2496
Mean test/val loss: 0.2770
[25, 50, 75] percentiles test/val loss: [0.1698 0.2339 0.3354]

Epoch 24, loss = 0.5268
Mean test/val loss: 0.4564
[25, 50, 75] percentiles test/val loss: [0.3193 0.4161 0.567 ]

Epoch 26, loss = 0.3833
Mean test/val loss: 0.3920
[25, 50, 75] percentiles test/val loss: [0.2726 0.359  0.4746]

Epoch 28, loss = 0.3276
Mean test/val loss: 0.3338
[25, 50, 75] percentiles test/val loss: [0.2241 0.2899 0.391 ]

Epoch 30, loss = 0.2539
Mean test/val loss: 0.3224
[25, 50, 75] percentiles test/val loss: [0.2056 0.2745 0.3892]

Epoch 32, loss = 0.2419
Mean test/val loss: 0.3026
[25, 50, 75] percentiles test/val loss: [0.1752 0.2507 0.3747]

Epoch 34, loss = 0.2409
Mean test/val loss: 0.2669
[25, 50, 75] percentiles test/val loss: [0.1588 0.2243 0.3246]

Epoch 36, loss = 0.2358
Mean test/val loss: 0.2708
[25, 50, 75] percentiles test/val loss: [0.1674 0.2264 0.3228]

Epoch 38, loss = 0.2514
Mean test/val loss: 0.2633
[25, 50, 75] percentiles test/val loss: [0.1546 0.2163 0.3145]

Epoch 40, loss = 0.4298
Mean test/val loss: 0.3877
[25, 50, 75] percentiles test/val loss: [0.2351 0.3308 0.4787]

Epoch 42, loss = 0.2457
Mean test/val loss: 0.2604
[25, 50, 75] percentiles test/val loss: [0.1515 0.2172 0.3173]

Epoch 44, loss = 0.2305
Mean test/val loss: 0.2572
[25, 50, 75] percentiles test/val loss: [0.1512 0.2103 0.3145]

Epoch 46, loss = 0.2269
Mean test/val loss: 0.2557
[25, 50, 75] percentiles test/val loss: [0.1584 0.2136 0.3081]

Epoch 48, loss = 0.2199
Mean test/val loss: 0.2499
[25, 50, 75] percentiles test/val loss: [0.1434 0.2061 0.3089]

Epoch 50, loss = 0.2156
Mean test/val loss: 0.2464
[25, 50, 75] percentiles test/val loss: [0.1453 0.2073 0.3072]

New lr: 1e-05
Epoch 52, loss = 0.1985
Mean test/val loss: 0.2311
[25, 50, 75] percentiles test/val loss: [0.1316 0.1908 0.2884]

Epoch 54, loss = 0.1957
Mean test/val loss: 0.2297
[25, 50, 75] percentiles test/val loss: [0.1314 0.1895 0.2824]

Epoch 56, loss = 0.1939
Mean test/val loss: 0.2290
[25, 50, 75] percentiles test/val loss: [0.1307 0.1896 0.2832]

Epoch 58, loss = 0.1922
Mean test/val loss: 0.2289
[25, 50, 75] percentiles test/val loss: [0.1314 0.19   0.2819]

Epoch 60, loss = 0.1907
Mean test/val loss: 0.2275
[25, 50, 75] percentiles test/val loss: [0.1299 0.1863 0.2797]

Epoch 62, loss = 0.1894
Mean test/val loss: 0.2268
[25, 50, 75] percentiles test/val loss: [0.1287 0.1859 0.281 ]

Epoch 64, loss = 0.1882
Mean test/val loss: 0.2266
[25, 50, 75] percentiles test/val loss: [0.1294 0.1864 0.2806]

Epoch 66, loss = 0.1871
Mean test/val loss: 0.2256
[25, 50, 75] percentiles test/val loss: [0.1278 0.1854 0.2797]

Epoch 68, loss = 0.1859
Mean test/val loss: 0.2251
[25, 50, 75] percentiles test/val loss: [0.1284 0.184  0.2784]

Epoch 70, loss = 0.1849
Mean test/val loss: 0.2250
[25, 50, 75] percentiles test/val loss: [0.1279 0.1835 0.2809]

Epoch 72, loss = 0.1840
Mean test/val loss: 0.2248
[25, 50, 75] percentiles test/val loss: [0.1269 0.1836 0.2783]

Epoch 74, loss = 0.1832
Mean test/val loss: 0.2248
[25, 50, 75] percentiles test/val loss: [0.1285 0.1837 0.2778]

Epoch 76, loss = 0.1820
Mean test/val loss: 0.2237
[25, 50, 75] percentiles test/val loss: [0.127  0.1809 0.2782]

Epoch 78, loss = 0.1811
Mean test/val loss: 0.2232
[25, 50, 75] percentiles test/val loss: [0.1273 0.1808 0.2767]

Epoch 80, loss = 0.1802
Mean test/val loss: 0.2230
[25, 50, 75] percentiles test/val loss: [0.1267 0.1795 0.2753]


Total parameters: 43362484
Total training + validation time: 14.0 hours, 28.0 mins, and 28.599999999998545 secs
Final val loss: 0.2229726524045691

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_05_28_23 sample981: 0.3014715313911438
dataset_05_28_23 sample324: 0.13989049196243286
dataset_05_28_23 sample3464: 0.16535484790802002
dataset_05_28_23 sample2834: 0.2605114281177521
dataset_05_28_23 sample1936: 0.5714683532714844
Loss: 0.288 +- 0.154

Downsampling (40%) Results:
dataset_05_28_23 sample1936-downsampling: 4.403823375701904
dataset_05_28_23 sample2834-downsampling: 2.6170225143432617
dataset_05_28_23 sample324-downsampling: 1.7464978694915771
dataset_05_28_23 sample3464-downsampling: 4.621584892272949
dataset_05_28_23 sample981-downsampling: 3.634963035583496
Loss: 3.405 +- 1.086

Removing /scratch/midway3/erschultz/ContactGNNEnergy8downsample
Original sampling (100%) Results:
dataset_05_28_23 sample1936-regular: 3.054332971572876
dataset_05_28_23 sample2834-regular: 2.4489002227783203
dataset_05_28_23 sample324-regular: 1.7365009784698486
dataset_05_28_23 sample3464-regular: 3.7080674171447754
dataset_05_28_23 sample981-regular: 3.4793968200683594
Loss: 2.885 +- 0.717

Removing /scratch/midway3/erschultz/ContactGNNEnergy8regsample
