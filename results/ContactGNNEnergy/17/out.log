#### ARCHITECTURE ####
Sequential(
  (0): SignedConv(1, 8, first_aggr=True)
  (1): ReLU(inplace=True)
  (2): SignedConv(8, 2, first_aggr=False)
)
Sequential(
  (0): LinearBlock(
    (linear): Linear(in_features=16, out_features=4, bias=True)
    (model): Sequential(
      (0): Linear(in_features=16, out_features=4, bias=True)
      (1): Identity()
    )
  )
  (1): LinearBlock(
    (linear): Linear(in_features=4, out_features=1, bias=True)
    (model): Sequential(
      (0): Linear(in_features=4, out_features=1, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
) 

Namespace(GNN_mode=True, act='relu', autoencoder_mode=False, batch_size=4, bottleneck=None, channels=1, classes=10, criterion=<function mse_loss at 0x7f0103b63040>, crop=None, cuda=True, data_folder='/scratch/midway2/erschultz/dataset_08_24_21', degree=True, delete_root=False, device=device(type='cuda'), dilation_list=None, dilation_list_head=None, dilation_list_trunk=None, down_sampling=None, gamma=0.1, gpus=1, head_act=None, head_architecture='outer', head_hidden_sizes_list=[4, 1], hidden_sizes_list=[8, 2], id=17, ifile=None, ifile_folder=None, inner_act='sigmoid', k=2, kernel_w_list=None, log_file=<_io.TextIOWrapper name='results/ContactGNNEnergy/17/out.log' mode='a' encoding='UTF-8'>, loss='mse', lr=0.0001, m=1024, message_passing='SignedConv', milestones=None, min_subtraction=True, model_type='ContactGNNEnergy', n_epochs=40, nf=None, node_feature_size=1, num_workers=4, ofile_folder='results/ContactGNNEnergy/17', out_act='prelu', output_mode='energy', parameter_sharing=False, plot=True, plot_predictions=True, pre_transforms=['degree'], pre_transforms_processed=None, pretrained=False, print_mod=2, print_params=True, relabel_11_to_00=False, resume_training=False, root_name='ContactGNNEnergy2', save_mod=5, seed=42, shuffle=True, sparsify_threshold=0.176, sparsify_threshold_upper=None, split=[0.8, 0.1, 0.1], split_neg_pos_edges=True, split_neg_pos_edges_for_feature_augmentation=False, start_epoch=1, top_k=None, toxx=False, toxx_mode='mean', training_norm=None, transforms=None, transforms_processed=None, use_bias=True, use_edge_weights=False, use_node_features=False, use_parallel=False, use_scratch=True, verbose=False, weighted_LDP=False, weighted_degree=False, x_reshape=True, y_log_transform=True, y_norm=None, y_preprocessing='diag', y_reshape=True, ydtype=torch.float32)

#### INITIAL PARAMETERS ####
out_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_l.weight torch.Size([8, 1])
Parameter containing:
tensor([[ 0.5078],
        [-0.6095],
        [-0.9899],
        [-0.3864],
        [-0.7670],
        [ 0.8205],
        [ 0.2880],
        [ 0.4142]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.weight torch.Size([8, 1])
Parameter containing:
tensor([[ 0.3163],
        [-0.0174],
        [ 0.7826],
        [-0.7105],
        [ 0.0630],
        [-0.6825],
        [ 0.3084],
        [-0.3444]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.3064, -0.2083,  0.8294, -0.5927, -0.5964, -0.5964,  0.8994,  0.3333],
       device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_l.weight torch.Size([8, 1])
Parameter containing:
tensor([[ 0.9623],
        [-0.8253],
        [-0.9919],
        [-0.7824],
        [-0.6727],
        [ 0.4050],
        [ 0.3581],
        [ 0.8309]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.weight torch.Size([8, 1])
Parameter containing:
tensor([[-0.5164],
        [-0.6817],
        [ 0.5306],
        [-0.4042],
        [ 0.6069],
        [-0.2373],
        [ 0.5720],
        [-0.7770]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([-0.5046,  0.3049,  0.2114, -0.2550,  0.5961,  0.6798, -0.7252, -0.5339],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[ 0.0036, -0.0149,  0.0601,  0.0701, -0.2271, -0.0923,  0.2105,  0.0974,
         -0.0124, -0.1507, -0.1530, -0.2239, -0.0815,  0.0844,  0.1594,  0.1154],
        [-0.2210, -0.1503, -0.0395,  0.2418,  0.0362, -0.0647,  0.1034, -0.0952,
         -0.1618,  0.1825, -0.1137, -0.0501, -0.2487,  0.1673,  0.1894,  0.0911]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[-0.2465, -0.3489, -0.2871,  0.2636,  0.1697,  0.2975,  0.1852,  0.0895],
        [-0.0035, -0.2689, -0.3029, -0.3307,  0.1447, -0.1736, -0.0712, -0.2035]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.bias torch.Size([2])
Parameter containing:
tensor([-0.0644, -0.2488], device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[-0.1634,  0.0829, -0.0743,  0.1543, -0.0802, -0.1834, -0.0441, -0.1212,
         -0.0765, -0.2380,  0.1399, -0.1741,  0.1257,  0.1134,  0.1786, -0.1918],
        [ 0.1798, -0.1182,  0.0928,  0.2348, -0.0353, -0.0019, -0.0576, -0.2087,
          0.1200, -0.2482,  0.1552,  0.1871,  0.2364, -0.0590, -0.2054,  0.0562]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.1953, -0.3519, -0.0803, -0.2119, -0.0309, -0.1740, -0.1445, -0.1122],
        [-0.3360,  0.2901,  0.2964, -0.0555, -0.0403, -0.1443, -0.3193, -0.3441]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.bias torch.Size([2])
Parameter containing:
tensor([ 0.1314, -0.1941], device='cuda:0', requires_grad=True) 

head.0.linear.weight torch.Size([4, 16])
Parameter containing:
tensor([[-0.1607, -0.0195, -0.0833, -0.0809,  0.0080, -0.0530, -0.0861, -0.1197,
         -0.2035,  0.2096, -0.1000,  0.0662, -0.0867,  0.0203,  0.2331,  0.1152],
        [-0.2166,  0.0992,  0.2373,  0.0658,  0.1676,  0.2465, -0.0383,  0.0519,
         -0.1738, -0.0515,  0.1851,  0.1282, -0.1582, -0.2005, -0.1708, -0.2467],
        [-0.1929, -0.0618,  0.1687,  0.0418, -0.1902, -0.2006,  0.1244, -0.1860,
         -0.0308,  0.1199, -0.1157, -0.0273, -0.0218, -0.0591, -0.1268, -0.2229],
        [-0.2021, -0.1339,  0.2415, -0.1208, -0.1679,  0.0606,  0.0689,  0.1370,
          0.1900,  0.1392, -0.2479,  0.0222,  0.1514, -0.0231, -0.1473,  0.2383]],
       device='cuda:0', requires_grad=True) 

head.0.linear.bias torch.Size([4])
Parameter containing:
tensor([-0.0935, -0.1423, -0.2254,  0.0112], device='cuda:0',
       requires_grad=True) 

head.1.linear.weight torch.Size([1, 4])
Parameter containing:
tensor([[ 0.2216,  0.1107,  0.0989, -0.3792]], device='cuda:0',
       requires_grad=True) 

head.1.linear.bias torch.Size([1])
Parameter containing:
tensor([-0.4669], device='cuda:0', requires_grad=True) 



#### TRAINING/VALIDATION ####
Epoch 2, loss = 1.1766
Mean test/val loss: 1.1288

Epoch 4, loss = 0.8887
Mean test/val loss: 0.8834

Epoch 6, loss = 0.8877
Mean test/val loss: 0.8825

Epoch 8, loss = 0.8869
Mean test/val loss: 0.8816

Epoch 10, loss = 0.8862
Mean test/val loss: 0.8809

Epoch 12, loss = 0.8856
Mean test/val loss: 0.8803

Epoch 14, loss = 0.8852
Mean test/val loss: 0.8799

Epoch 16, loss = 0.8849
Mean test/val loss: 0.8797

Epoch 18, loss = 0.8846
Mean test/val loss: 0.8795

Epoch 20, loss = 0.8844
Mean test/val loss: 0.8792

Epoch 22, loss = 0.8842
Mean test/val loss: 0.8791

Epoch 24, loss = 0.8840
Mean test/val loss: 0.8789

Epoch 26, loss = 0.8839
Mean test/val loss: 0.8787

Epoch 28, loss = 0.8837
Mean test/val loss: 0.8785

Epoch 30, loss = 0.8834
Mean test/val loss: 0.8784

Epoch 32, loss = 0.8833
Mean test/val loss: 0.8781

Epoch 34, loss = 0.8831
Mean test/val loss: 0.8780

Epoch 36, loss = 0.8830
Mean test/val loss: 0.8779

Epoch 38, loss = 0.8829
Mean test/val loss: 0.8778

Epoch 40, loss = 0.8828
Mean test/val loss: 0.8778

#### FINAL PARAMETERS ####
out_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.1943], device='cuda:0', requires_grad=True) 
grad:  tensor([0.], device='cuda:0') 

model.nns.0.lin_pos_l.weight 8 torch.Size([8, 1])
Parameter containing:
tensor([[ 0.6941],
        [-0.6095],
        [-0.7978],
        [-0.3864],
        [-0.7670],
        [ 0.8606],
        [ 0.3878],
        [ 0.3241]], device='cuda:0', requires_grad=True) 
grad:  tensor([[0.0002],
        [0.0000],
        [0.0014],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0052],
        [0.0028]], device='cuda:0') 

model.nns.0.lin_pos_r.weight 8 torch.Size([8, 1])
Parameter containing:
tensor([[ 0.5815],
        [-0.0174],
        [ 1.1226],
        [-0.7105],
        [ 0.0630],
        [-0.6632],
        [ 0.3330],
        [-0.5369]], device='cuda:0', requires_grad=True) 
grad:  tensor([[0.0002],
        [0.0000],
        [0.0017],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0037],
        [0.0019]], device='cuda:0') 

model.nns.0.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.3102, -0.2083,  0.8860, -0.5927, -0.5964, -0.5563,  1.0452,  0.3127],
       device='cuda:0', requires_grad=True) 
grad:  tensor([0.0002, 0.0000, 0.0018, 0.0000, 0.0000, 0.0000, 0.0081, 0.0044],
       device='cuda:0') 

model.nns.0.lin_neg_l.weight 8 torch.Size([8, 1])
Parameter containing:
tensor([[ 1.3999],
        [-0.6390],
        [-0.9747],
        [-0.7824],
        [-1.0242],
        [ 0.3691],
        [ 0.2483],
        [ 0.7738]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0032],
        [ 0.0004],
        [ 0.0003],
        [ 0.0000],
        [-0.0002],
        [ 0.0025],
        [ 0.0016],
        [ 0.0000]], device='cuda:0') 

model.nns.0.lin_neg_r.weight 8 torch.Size([8, 1])
Parameter containing:
tensor([[-0.4323],
        [-0.5678],
        [ 0.6605],
        [-0.4042],
        [ 0.4062],
        [-0.0902],
        [ 1.2438],
        [-0.8477]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-2.5653e-03],
        [ 1.5302e-04],
        [-9.3576e-05],
        [ 0.0000e+00],
        [-5.9823e-05],
        [ 1.6370e-03],
        [ 1.3590e-04],
        [ 0.0000e+00]], device='cuda:0') 

model.nns.0.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([-0.2457,  0.4298,  0.2875, -0.2550,  0.4982,  0.7411, -0.4339, -0.5893],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-2.6086e-03,  9.0676e-04, -1.2266e-05,  0.0000e+00, -7.6319e-04,
         3.6702e-03,  8.6676e-04,  0.0000e+00], device='cuda:0') 

model.nns.2.lin_pos_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 0.0367, -0.0149,  0.1043,  0.0701, -0.2271, -0.1266,  0.2722,  0.2198,
         -0.4523, -0.1101,  0.0737, -0.2239,  0.0986,  0.1392,  0.2799,  0.0956],
        [-0.0983, -0.1503,  0.0913,  0.2418,  0.0362, -0.0987,  0.2502,  0.1105,
         -0.5394,  0.2609,  0.1830, -0.0501,  0.0085,  0.3092,  0.3630,  0.0726]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 7.6446e-03,  0.0000e+00,  6.8986e-03,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  1.0302e-02,  1.5054e-03,  3.4710e-03,  1.1710e-04,
         -1.3783e-04,  0.0000e+00,  9.0634e-05,  6.5231e-03,  1.9670e-03,
          0.0000e+00],
        [ 9.9370e-03,  0.0000e+00,  8.9765e-03,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  1.3420e-02,  1.9769e-03,  4.3787e-03,  1.5469e-04,
         -6.8675e-05,  0.0000e+00,  2.2210e-04,  8.4731e-03,  2.6439e-03,
          0.0000e+00]], device='cuda:0') 

model.nns.2.lin_pos_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[-0.2706, -0.3489, -0.2794,  0.2636,  0.1697,  0.3664,  0.2213,  0.2457],
        [ 0.0667, -0.2689, -0.2042, -0.3307,  0.1447, -0.1035,  0.0518,  0.0301]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[0.0059, 0.0000, 0.0048, 0.0000, 0.0000, 0.0000, 0.0093, 0.0026],
        [0.0075, 0.0000, 0.0061, 0.0000, 0.0000, 0.0000, 0.0121, 0.0034]],
       device='cuda:0') 

model.nns.2.lin_pos_r.bias 2 torch.Size([2])
Parameter containing:
tensor([ 0.0124, -0.0876], device='cuda:0', requires_grad=True) 
grad:  tensor([0.0069, 0.0090], device='cuda:0') 

model.nns.2.lin_neg_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[-0.2335,  0.2133, -0.0456,  0.1543,  0.0360, -0.0377, -0.1351, -0.1387,
          0.0882, -0.2380,  0.3017, -0.1741,  0.1257,  0.0443,  0.3351, -0.0833],
        [ 0.0944, -0.0236,  0.0478,  0.2348,  0.0134,  0.0760, -0.1661, -0.2318,
          0.2219, -0.2482,  0.2538,  0.1871,  0.2364, -0.1241, -0.1131,  0.0899]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[2.5782e-03, 1.1160e-04, 1.1143e-03, 0.0000e+00, 1.1988e-03, 7.2447e-03,
         3.6986e-03, 0.0000e+00, 8.0392e-03, 0.0000e+00, 6.8823e-03, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 1.1507e-02, 2.3215e-03],
        [2.1229e-03, 9.3028e-05, 8.4039e-04, 0.0000e+00, 9.2129e-04, 5.8354e-03,
         2.8772e-03, 0.0000e+00, 6.3932e-03, 0.0000e+00, 5.4551e-03, 0.0000e+00,
         0.0000e+00, 0.0000e+00, 9.2110e-03, 1.9048e-03]], device='cuda:0') 

model.nns.2.lin_neg_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[ 0.6844, -0.2595, -0.3512, -0.2119, -0.0583, -0.0015, -0.4688, -0.0954],
        [ 0.1518,  0.3411, -0.0936, -0.0555, -0.1532, -0.0369, -0.6615, -0.3306]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[0.0020, 0.0003, 0.0008, 0.0000, 0.0012, 0.0070, 0.0005, 0.0000],
        [0.0016, 0.0002, 0.0006, 0.0000, 0.0010, 0.0057, 0.0002, 0.0000]],
       device='cuda:0') 

model.nns.2.lin_neg_r.bias 2 torch.Size([2])
Parameter containing:
tensor([ 0.2752, -0.1166], device='cuda:0', requires_grad=True) 
grad:  tensor([0.0080, 0.0064], device='cuda:0') 

head.0.linear.weight 64 torch.Size([4, 16])
Parameter containing:
tensor([[-0.0443,  0.1050,  0.0483,  0.0425,  0.1322,  0.0778,  0.0536,  0.0134,
         -0.0715,  0.3502,  0.0446,  0.2012,  0.0385,  0.1556,  0.3693,  0.2393],
        [-0.0923,  0.2314,  0.3769,  0.1974,  0.2994,  0.3847,  0.1092,  0.1930,
         -0.0337,  0.0969,  0.3381,  0.2715, -0.0248, -0.0572, -0.0262, -0.1141],
        [-0.0975,  0.0426,  0.2798,  0.1438, -0.0861, -0.0889,  0.2447, -0.0732,
          0.0808,  0.2411,  0.0091,  0.0867,  0.0821,  0.0558, -0.0115, -0.1209],
        [-0.3256, -0.2648,  0.1034, -0.2512, -0.2985, -0.0759, -0.0767, -0.0025,
          0.0515, -0.0072, -0.3986, -0.1193,  0.0192, -0.1648, -0.2901,  0.1073]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0058,  0.0055,  0.0066,  0.0049,  0.0055,  0.0052,  0.0062,  0.0047,
          0.0066,  0.0062,  0.0075,  0.0056,  0.0049,  0.0047,  0.0056,  0.0042],
        [ 0.0043,  0.0040,  0.0048,  0.0036,  0.0040,  0.0038,  0.0046,  0.0034,
          0.0048,  0.0046,  0.0055,  0.0041,  0.0036,  0.0034,  0.0041,  0.0031],
        [ 0.0019,  0.0018,  0.0022,  0.0016,  0.0018,  0.0017,  0.0021,  0.0016,
          0.0022,  0.0021,  0.0025,  0.0019,  0.0016,  0.0016,  0.0019,  0.0014],
        [-0.0114, -0.0108, -0.0129, -0.0097, -0.0108, -0.0102, -0.0122, -0.0091,
         -0.0129, -0.0122, -0.0147, -0.0111, -0.0097, -0.0091, -0.0110, -0.0083]],
       device='cuda:0') 

head.0.linear.bias 4 torch.Size([4])
Parameter containing:
tensor([-0.0085, -0.0487, -0.1628, -0.0809], device='cuda:0',
       requires_grad=True) 
grad:  tensor([ 0.0148,  0.0109,  0.0049, -0.0290], device='cuda:0') 

head.1.linear.weight 4 torch.Size([1, 4])
Parameter containing:
tensor([[ 0.2789,  0.2043,  0.0929, -0.5455]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[ 0.0339,  0.0436,  0.0098, -0.0462]], device='cuda:0') 

head.1.linear.bias 1 torch.Size([1])
Parameter containing:
tensor([-0.3829], device='cuda:0', requires_grad=True) 
grad:  tensor([0.0532], device='cuda:0') 


Total parameters: 222
Total time: 13656.027314662933
Final val loss: 0.8777512276172638

#### Plotting Script ####
Prediction Results:
results/ContactGNNEnergy/17/sample1230
results/ContactGNNEnergy/17/sample1761
results/ContactGNNEnergy/17/sample40
results/ContactGNNEnergy/17/sample1751
results/ContactGNNEnergy/17/sample1718
Loss: 0.022432896196842193 +- 0.1402803777126095

