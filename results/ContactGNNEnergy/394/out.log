#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_03_23_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy4', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=50, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[25], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=394, pretrain_id=392, resume_training=False, k=8, m=512, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/394', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/394/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/394/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/394/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f4f341583a0>, channels=1, node_feature_size=1, input_m=256, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 13.526 minutes
Number of samples: 5000
Average num edges per graph:  56478.1112
Mean degree: [250.21 252.38 250.06 ... 203.21 254.09 254.71] +- [ 4.91  3.22  5.7  ... 25.76  2.92  2.32]

split sizes: train=4500, val=500, test=0, N=5000
Pre-trained model is loaded.
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f4efe08f6a0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.2923
Mean test/val loss: 0.3053
[25, 50, 75] percentiles test/val loss: [0.1522 0.2368 0.3832]

Epoch 4, loss = 0.2721
Mean test/val loss: 0.2741
[25, 50, 75] percentiles test/val loss: [0.1369 0.2076 0.3442]

Epoch 6, loss = 0.2627
Mean test/val loss: 0.2767
[25, 50, 75] percentiles test/val loss: [0.1343 0.2178 0.3517]

Epoch 8, loss = 0.2597
Mean test/val loss: 0.2793
[25, 50, 75] percentiles test/val loss: [0.1386 0.2241 0.3588]

Epoch 10, loss = 0.2407
Mean test/val loss: 0.2829
[25, 50, 75] percentiles test/val loss: [0.1454 0.2223 0.3451]

Epoch 12, loss = 0.3727
Mean test/val loss: 0.3285
[25, 50, 75] percentiles test/val loss: [0.1677 0.2613 0.4311]

Epoch 14, loss = 0.2294
Mean test/val loss: 0.2669
[25, 50, 75] percentiles test/val loss: [0.1331 0.2066 0.3408]

Epoch 16, loss = 0.2357
Mean test/val loss: 0.2703
[25, 50, 75] percentiles test/val loss: [0.1346 0.209  0.3518]

Epoch 18, loss = 0.2206
Mean test/val loss: 0.2675
[25, 50, 75] percentiles test/val loss: [0.128  0.207  0.3419]

Epoch 20, loss = 0.2144
Mean test/val loss: 0.2869
[25, 50, 75] percentiles test/val loss: [0.1484 0.2273 0.3593]

Epoch 22, loss = 0.2103
Mean test/val loss: 0.2619
[25, 50, 75] percentiles test/val loss: [0.1268 0.2037 0.3372]

Epoch 24, loss = 0.2059
Mean test/val loss: 0.3222
[25, 50, 75] percentiles test/val loss: [0.1673 0.2718 0.4213]

New lr: 1e-05
Epoch 26, loss = 0.2220
Mean test/val loss: 0.2555
[25, 50, 75] percentiles test/val loss: [0.1223 0.1943 0.3282]

Epoch 28, loss = 0.1810
Mean test/val loss: 0.2508
[25, 50, 75] percentiles test/val loss: [0.1204 0.1887 0.324 ]

Epoch 30, loss = 0.1768
Mean test/val loss: 0.2503
[25, 50, 75] percentiles test/val loss: [0.1187 0.1901 0.3206]

Epoch 32, loss = 0.1742
Mean test/val loss: 0.2508
[25, 50, 75] percentiles test/val loss: [0.1188 0.187  0.3219]

Epoch 34, loss = 0.1721
Mean test/val loss: 0.2507
[25, 50, 75] percentiles test/val loss: [0.1175 0.1864 0.3249]

Epoch 36, loss = 0.1704
Mean test/val loss: 0.2508
[25, 50, 75] percentiles test/val loss: [0.1192 0.1861 0.3181]

Epoch 38, loss = 0.1689
Mean test/val loss: 0.2515
[25, 50, 75] percentiles test/val loss: [0.1188 0.1844 0.322 ]

Epoch 40, loss = 0.1675
Mean test/val loss: 0.2510
[25, 50, 75] percentiles test/val loss: [0.1193 0.1866 0.3209]

Epoch 42, loss = 0.1662
Mean test/val loss: 0.2516
[25, 50, 75] percentiles test/val loss: [0.1194 0.1856 0.3253]

Epoch 44, loss = 0.1650
Mean test/val loss: 0.2521
[25, 50, 75] percentiles test/val loss: [0.1194 0.1864 0.3219]

Epoch 46, loss = 0.1638
Mean test/val loss: 0.2526
[25, 50, 75] percentiles test/val loss: [0.1203 0.1855 0.3217]

Epoch 48, loss = 0.1627
Mean test/val loss: 0.2534
[25, 50, 75] percentiles test/val loss: [0.121  0.1849 0.3195]

Epoch 50, loss = 0.1616
Mean test/val loss: 0.2527
[25, 50, 75] percentiles test/val loss: [0.12   0.186  0.3209]


Total parameters: 26465972
Total training + validation time: 4.0 hours, 19.0 mins, and 24.399999999999636 secs
Final val loss: 0.25273539470881223

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_03_23_23 sample981: 0.36479729413986206
dataset_03_23_23 sample324: 0.05204829201102257
dataset_03_23_23 sample3464: 0.3269122838973999
dataset_03_23_23 sample2834: 0.7207880616188049
dataset_03_23_23 sample1936: 0.09849843382835388
Loss: 0.313 +- 0.238

Downsampling (40%) Results:
dataset_03_23_23 sample1936-downsampling: 0.7843688726425171
dataset_03_23_23 sample2834-downsampling: 10.856477737426758
dataset_03_23_23 sample324-downsampling: 0.7830086946487427
dataset_03_23_23 sample3464-downsampling: 3.1723365783691406
dataset_03_23_23 sample981-downsampling: 14.450302124023438
Loss: 6.009 +- 5.611

Removing /scratch/midway3/erschultz/ContactGNNEnergy4downsample
Original sampling (100%) Results:
dataset_03_23_23 sample1936-regular: 0.6024218797683716
dataset_03_23_23 sample2834-regular: 7.217551231384277
dataset_03_23_23 sample324-regular: 0.5804528594017029
dataset_03_23_23 sample3464-regular: 2.681320905685425
dataset_03_23_23 sample981-regular: 3.6629550457000732
Loss: 2.949 +- 2.446

Removing /scratch/midway3/erschultz/ContactGNNEnergy4regsample
Upsampling (200%) Results:
