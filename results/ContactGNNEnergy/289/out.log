#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 1000, bias=True)
  (1): PReLU(num_parameters=1)
  (2): Linear(1000, 1000, bias=True)
  (3): PReLU(num_parameters=1)
  (4): Linear(1000, 64, bias=True)
  (5): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 Bilinear 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_18_22', '/project2/depablo/erschultz/dataset_11_21_22', '/project2/depablo/erschultz/dataset_12_05_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy8', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=289, pretrained=False, resume_training=False, k=None, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000, 1024], encoder_hidden_sizes_list=[1000, 1000, 64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/289', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/289/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/289/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/289/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f57a34d0790>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 230.702 minutes
Average num edges per graph:  223985.86407307172
Mean degree: [362.66 512.   449.47 ... 331.03 456.7  501.52] +- [70.54  0.   53.89 ... 86.6  48.23  8.56]

split sizes: train=13302, val=1478, test=0, N=14780
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.6218
Mean test/val loss: 0.5956

Epoch 4, loss = 0.5550
Mean test/val loss: 0.5559

Epoch 6, loss = 0.5278
Mean test/val loss: 0.5250

Epoch 8, loss = 0.5427
Mean test/val loss: 0.5059

Epoch 10, loss = 0.5221
Mean test/val loss: 0.5094

Epoch 12, loss = 0.4931
Mean test/val loss: 0.4890

Epoch 14, loss = 57.9289
Mean test/val loss: 0.8243

Epoch 16, loss = 124.5644
Mean test/val loss: 7.4724

Epoch 18, loss = 0.6136
Mean test/val loss: 0.5011

Epoch 20, loss = 0.5078
Mean test/val loss: 0.4822

Epoch 22, loss = 0.4907
Mean test/val loss: 0.4763

Epoch 24, loss = 0.4823
Mean test/val loss: 0.4796

Epoch 26, loss = 0.4685
Mean test/val loss: 0.4591

Epoch 28, loss = 0.5027
Mean test/val loss: 0.4638

Epoch 30, loss = 36.5333
Mean test/val loss: 0.5655

Epoch 32, loss = 0.4547
Mean test/val loss: 0.4475

Epoch 34, loss = 25722.1646
Mean test/val loss: 0.5888

Epoch 36, loss = 0.4473
Mean test/val loss: 0.4382

Epoch 38, loss = 0.4404
Mean test/val loss: 0.4373

Epoch 40, loss = 0.4321
Mean test/val loss: 0.4330

Epoch 42, loss = 0.8445
Mean test/val loss: 0.4456

Epoch 44, loss = 0.4238
Mean test/val loss: 0.4291

Epoch 46, loss = 0.4171
Mean test/val loss: 0.4214

Epoch 48, loss = 0.4342
Mean test/val loss: 0.4188

Epoch 50, loss = 0.4167
Mean test/val loss: 0.4201

Epoch 52, loss = 0.3904
Mean test/val loss: 0.4050

Epoch 54, loss = 0.3873
Mean test/val loss: 0.4034

Epoch 56, loss = 0.3850
Mean test/val loss: 0.4026

Epoch 58, loss = 0.3832
Mean test/val loss: 0.4027

Epoch 60, loss = 0.3816
Mean test/val loss: 0.4008

Epoch 62, loss = 0.3802
Mean test/val loss: 0.4005

Epoch 64, loss = 0.3788
Mean test/val loss: 0.4001

Epoch 66, loss = 0.3775
Mean test/val loss: 0.3998

Epoch 68, loss = 0.3762
Mean test/val loss: 0.3990

Epoch 70, loss = 0.3750
Mean test/val loss: 0.3978

Epoch 72, loss = 0.3739
#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 1000, bias=True)
  (1): PReLU(num_parameters=1)
  (2): Linear(1000, 1000, bias=True)
  (3): PReLU(num_parameters=1)
  (4): Linear(1000, 64, bias=True)
  (5): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 Bilinear 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_18_22', '/project2/depablo/erschultz/dataset_11_21_22', '/project2/depablo/erschultz/dataset_12_05_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy8', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=289, pretrained=False, resume_training=True, k=None, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000, 1024], encoder_hidden_sizes_list=[1000, 1000, 64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/289', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/289/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/289/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/289/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f0c0762f940>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 0.212 minutes
Average num edges per graph:  nan
split sizes: train=13302, val=1478, test=0, N=14780
Partially-trained model is loaded.
Starting at epoch 71
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 72, loss = 0.3739
Mean test/val loss: 0.3978
[25, 50, 75] quantiles test/val loss: [0.1635 0.3513 0.6007]

Epoch 74, loss = 0.3728
Mean test/val loss: 0.3982
[25, 50, 75] quantiles test/val loss: [0.1629 0.352  0.6008]

Epoch 76, loss = 0.3717
Mean test/val loss: 0.3968
[25, 50, 75] quantiles test/val loss: [0.1639 0.3501 0.6   ]

Epoch 78, loss = 0.3707
Mean test/val loss: 0.3969
[25, 50, 75] quantiles test/val loss: [0.1633 0.3487 0.5983]

Epoch 80, loss = 0.3697
Mean test/val loss: 0.3971
[25, 50, 75] quantiles test/val loss: [0.1637 0.3512 0.5994]

Epoch 82, loss = 0.3687
Mean test/val loss: 0.3973
[25, 50, 75] quantiles test/val loss: [0.1631 0.3485 0.6   ]

Epoch 84, loss = 0.3677
Mean test/val loss: 0.3958
[25, 50, 75] quantiles test/val loss: [0.1611 0.3496 0.5971]

Epoch 86, loss = 0.3668
Mean test/val loss: 0.3956
[25, 50, 75] quantiles test/val loss: [0.1615 0.3482 0.5975]

Epoch 88, loss = 0.3661
Mean test/val loss: 0.3963
[25, 50, 75] quantiles test/val loss: [0.1621 0.3474 0.5999]

Epoch 90, loss = 0.3651
Mean test/val loss: 0.3958
[25, 50, 75] quantiles test/val loss: [0.161  0.3471 0.5969]

Epoch 92, loss = 0.3643
Mean test/val loss: 0.3959
[25, 50, 75] quantiles test/val loss: [0.1623 0.348  0.5976]

Epoch 94, loss = 0.3634
Mean test/val loss: 0.3954
[25, 50, 75] quantiles test/val loss: [0.1616 0.348  0.5969]

Epoch 96, loss = 0.3625
Mean test/val loss: 0.3948
[25, 50, 75] quantiles test/val loss: [0.1597 0.3486 0.5969]

Epoch 98, loss = 0.3617
Mean test/val loss: 0.3952
[25, 50, 75] quantiles test/val loss: [0.1608 0.3474 0.596 ]

Epoch 100, loss = 0.3609
Mean test/val loss: 0.3949
[25, 50, 75] quantiles test/val loss: [0.1613 0.3476 0.5974]


Total parameters: 44424748
Total training + validation time: 18.0 hours, 17.0 mins, and 31.5 secs
Final val loss: 0.3949087017505015

split sizes: train=13302, val=1478, test=0, N=14780
#### Plotting Script ####
Prediction Results:
dataset_12_05_22 sample2095: 0.5568353533744812
dataset_11_21_22 sample219: 0.2513895332813263
dataset_12_05_22 sample8767: 0.45570051670074463
dataset_12_05_22 sample1488: 0.40755122900009155
dataset_11_21_22 sample1171: 0.06951871514320374
Loss: 0.348 +- 0.171

Downsampling (40%) Results:
dataset_11_18_22 sample1171-downsampling: 3.673322916030884
dataset_11_18_22 sample1488-downsampling: 10.237287521362305
dataset_11_18_22 sample2095-downsampling: 8.896743774414062
dataset_11_18_22 sample219-downsampling: 2.1137938499450684
dataset_11_21_22 sample1171-downsampling: 2.3788936138153076
Loss: 5.18 +- 2.735

Removing /project2/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy8downsample
Original sampling (100%) Results:
dataset_11_18_22 sample1171-regular: 3.371321678161621
dataset_11_18_22 sample1488-regular: 9.935041427612305
dataset_11_18_22 sample2095-regular: 8.743982315063477
dataset_11_18_22 sample219-regular: 2.0184736251831055
dataset_11_21_22 sample1171-regular: 2.1573596000671387
Loss: 4.803 +- 2.735

Removing /project2/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy8regsample
Upsampling (200%) Results:
