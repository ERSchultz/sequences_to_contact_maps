#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=10, out_features=128, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(128, 16, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(128, 16, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(128, 16, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(128, 16, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_10'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_21_23_hmec'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy11', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, max_sample=None, start_epoch=1, n_epochs=60, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse_log', loss_k=2, lambda1=1.0, lambda2=1.0, w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=621, pretrain_id=None, resume_training=False, k=10, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=False, input_L_to_D_mode='meandist', use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 1000, 1000, 128], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[16, 16, 16, 16], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/621', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/621/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/621/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/621/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_log at 0x7f58ff9135e0>, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=10, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, corr=False, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=10, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 18.091 minutes
Number of samples: 5000
Average num edges per graph:  65147.4676
Mean degree: [254.16 255.   254.99 ... 254.96 255.   255.  ] +- [2.16 0.   0.09 ... 0.21 0.   0.  ]

split sizes: train=4500, val=500, test=0, N=5000
First 100 val samples: [4410, 3523, 3661, 1766, 4612, 2591, 1972, 1822, 4639, 4962, 3383, 4226, 111, 1954, 4299, 4195, 4171, 1582, 3906, 2811, 2135, 1317, 3277, 324, 4875, 1672, 78, 4570, 672, 3288, 4767, 1716, 3809, 3135, 3, 1838, 2820, 958, 1273, 1936, 308, 916, 2119, 4682, 3296, 2610, 2576, 4783, 1449, 1300, 3616, 2623, 1956, 1263, 1686, 1207, 4503, 3237, 4370, 831, 75, 3406, 4524, 2537, 3132, 3674, 3110, 1667, 2060, 2986, 3567, 4352, 475, 4580, 3164, 2073, 1184, 2284, 225, 3833, 2314, 161, 4723, 3885, 542, 4254, 3384, 810, 2291, 459, 1440, 1412, 4864, 3267, 4781, 3912, 3229, 3762, 502, 4920, 1781, 1687]
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f58d421cd90>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 1.2672
Mean test/val loss: 1.2036
[25, 50, 75] percentiles test/val loss: [0.7832 1.117  1.5533]

Epoch 4, loss = 1.0651
Mean test/val loss: 1.1208
[25, 50, 75] percentiles test/val loss: [0.7035 1.0264 1.4017]

Epoch 6, loss = 1.0107
Mean test/val loss: 1.0315
[25, 50, 75] percentiles test/val loss: [0.6236 0.9417 1.3138]

Epoch 8, loss = 0.9616
Mean test/val loss: 0.9889
[25, 50, 75] percentiles test/val loss: [0.5865 0.9003 1.2815]

Epoch 10, loss = 0.9296
Mean test/val loss: 0.9554
[25, 50, 75] percentiles test/val loss: [0.5678 0.8673 1.2328]

Epoch 12, loss = 0.8984
Mean test/val loss: 0.9341
[25, 50, 75] percentiles test/val loss: [0.5475 0.8476 1.2239]

Epoch 14, loss = 0.8710
Mean test/val loss: 0.9077
[25, 50, 75] percentiles test/val loss: [0.5356 0.8313 1.176 ]

Epoch 16, loss = 0.8506
Mean test/val loss: 0.8917
[25, 50, 75] percentiles test/val loss: [0.5259 0.8114 1.1611]

Epoch 18, loss = 0.8329
Mean test/val loss: 0.8585
[25, 50, 75] percentiles test/val loss: [0.5027 0.7801 1.1087]

Epoch 20, loss = 0.8207
Mean test/val loss: 0.8582
[25, 50, 75] percentiles test/val loss: [0.511  0.7698 1.1213]

Epoch 22, loss = 0.8041
Mean test/val loss: 0.8331
[25, 50, 75] percentiles test/val loss: [0.4915 0.7547 1.0763]

Epoch 24, loss = 0.7901
Mean test/val loss: 0.8310
[25, 50, 75] percentiles test/val loss: [0.486  0.7452 1.0672]

Epoch 26, loss = 0.7816
Mean test/val loss: 0.8208
[25, 50, 75] percentiles test/val loss: [0.4727 0.7462 1.0793]

Epoch 28, loss = 0.7716
Mean test/val loss: 0.8229
[25, 50, 75] percentiles test/val loss: [0.4763 0.7413 1.0709]

Epoch 30, loss = 0.7647
Mean test/val loss: 0.8683
[25, 50, 75] percentiles test/val loss: [0.5006 0.7817 1.1134]

Epoch 32, loss = 0.7539
Mean test/val loss: 0.7981
[25, 50, 75] percentiles test/val loss: [0.4615 0.7235 1.0392]

Epoch 34, loss = 0.7427
Mean test/val loss: 0.7974
[25, 50, 75] percentiles test/val loss: [0.4643 0.7189 1.0525]

Epoch 36, loss = 0.7370
Mean test/val loss: 0.7839
[25, 50, 75] percentiles test/val loss: [0.4554 0.7099 1.03  ]

Epoch 38, loss = 0.7304
Mean test/val loss: 0.7785
[25, 50, 75] percentiles test/val loss: [0.4602 0.7085 1.0238]

Epoch 40, loss = 0.7242
Mean test/val loss: 0.7781
[25, 50, 75] percentiles test/val loss: [0.4599 0.7069 1.0219]

New lr: 1e-05
Epoch 42, loss = 0.6706
Mean test/val loss: 0.7356
[25, 50, 75] percentiles test/val loss: [0.431  0.6766 0.9634]

Epoch 44, loss = 0.6619
Mean test/val loss: 0.7322
[25, 50, 75] percentiles test/val loss: [0.4278 0.6742 0.9603]

Epoch 46, loss = 0.6559
Mean test/val loss: 0.7295
[25, 50, 75] percentiles test/val loss: [0.4308 0.6688 0.9586]

Epoch 48, loss = 0.6508
Mean test/val loss: 0.7285
[25, 50, 75] percentiles test/val loss: [0.4307 0.6648 0.9584]

Epoch 50, loss = 0.6464
Mean test/val loss: 0.7249
[25, 50, 75] percentiles test/val loss: [0.4193 0.6623 0.9517]

Epoch 52, loss = 0.6424
Mean test/val loss: 0.7235
[25, 50, 75] percentiles test/val loss: [0.4192 0.6607 0.9503]

Epoch 54, loss = 0.6387
Mean test/val loss: 0.7232
[25, 50, 75] percentiles test/val loss: [0.4181 0.6596 0.9544]

Epoch 56, loss = 0.6356
Mean test/val loss: 0.7221
[25, 50, 75] percentiles test/val loss: [0.4285 0.6575 0.9481]

Epoch 58, loss = 0.6320
Mean test/val loss: 0.7216
[25, 50, 75] percentiles test/val loss: [0.4142 0.6635 0.9508]

Epoch 60, loss = 0.6291
Mean test/val loss: 0.7204
[25, 50, 75] percentiles test/val loss: [0.4257 0.6598 0.9537]


Total parameters: 51479472
Total training + validation time: 8.0 hours, 54.0 mins, and 54.79999999999927 secs
Final val loss: 0.720413170568645

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_11_21_23_hmec sample981: 0.7054376006126404
dataset_11_21_23_hmec sample324: 0.520554780960083
dataset_11_21_23_hmec sample3464: 0.7936980724334717
dataset_11_21_23_hmec sample2834: 0.664053738117218
dataset_11_21_23_hmec sample1936: 0.3989000916481018
MSE_log: 0.617 +- 0.14

Downsampling (200k) Results:
dataset_11_21_23_hmec sample1936-downsampling: 12.266092300415039
dataset_11_21_23_hmec sample2834-downsampling: 11.568268775939941
dataset_11_21_23_hmec sample324-downsampling: 9.177274703979492
dataset_11_21_23_hmec sample3464-downsampling: 14.722599983215332
dataset_11_21_23_hmec sample981-downsampling: 16.3201904296875
Loss: 12.811 +- 2.491

Removing /scratch/midway3/erschultz/ContactGNNEnergy11downsample
Original sampling (400k) Results:
