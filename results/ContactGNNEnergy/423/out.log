#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_05_23_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy9', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[50], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=423, pretrain_id=None, resume_training=False, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/423', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/423/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/423/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/423/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f4eca50e310>, channels=1, node_feature_size=1, input_m=512, edge_transforms=['ContactDistance(norm=False)', 'GeneticDistance(norm=True)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=4, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 43.468 minutes
Number of samples: 5000
Average num edges per graph:  212264.6272
Mean degree: [304.27 434.8  503.58 ... 489.25 493.   503.66] +- [67.85 59.39  5.2  ... 10.14 12.83  8.11]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f4e884d7550>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.5802
Mean test/val loss: 0.5266
[25, 50, 75] percentiles test/val loss: [0.2007 0.4106 0.7224]

Epoch 4, loss = 0.5067
Mean test/val loss: 0.5388
[25, 50, 75] percentiles test/val loss: [0.2148 0.426  0.7644]

Epoch 6, loss = 0.4407
Mean test/val loss: 0.4236
[25, 50, 75] percentiles test/val loss: [0.169  0.3198 0.5822]

Epoch 8, loss = 0.4446
Mean test/val loss: 0.4195
[25, 50, 75] percentiles test/val loss: [0.1612 0.3163 0.5905]

Epoch 10, loss = 0.4157
Mean test/val loss: 0.3888
[25, 50, 75] percentiles test/val loss: [0.1555 0.2869 0.533 ]

Epoch 12, loss = 1.2170
Mean test/val loss: 0.4110
[25, 50, 75] percentiles test/val loss: [0.1635 0.3148 0.5564]

Epoch 14, loss = 0.3845
Mean test/val loss: 0.3679
[25, 50, 75] percentiles test/val loss: [0.1327 0.2679 0.5087]

Epoch 16, loss = 15667.1374
Mean test/val loss: 0.6335
[25, 50, 75] percentiles test/val loss: [0.3221 0.5482 0.8314]

Epoch 18, loss = 0.4947
Mean test/val loss: 0.4704
[25, 50, 75] percentiles test/val loss: [0.1866 0.3687 0.6359]

Epoch 20, loss = 0.4261
Mean test/val loss: 0.4106
[25, 50, 75] percentiles test/val loss: [0.1464 0.306  0.5476]

Epoch 22, loss = 0.4046
Mean test/val loss: 0.3896
[25, 50, 75] percentiles test/val loss: [0.1606 0.3043 0.5294]

Epoch 24, loss = 0.4814
Mean test/val loss: 0.3956
[25, 50, 75] percentiles test/val loss: [0.1613 0.2981 0.5365]

Epoch 26, loss = 0.4503
Mean test/val loss: 0.4043
[25, 50, 75] percentiles test/val loss: [0.1586 0.3033 0.5562]

Epoch 28, loss = 0.4082
Mean test/val loss: 0.3675
[25, 50, 75] percentiles test/val loss: [0.1335 0.2694 0.5072]

Epoch 30, loss = 6.7565
Mean test/val loss: 0.4581
[25, 50, 75] percentiles test/val loss: [0.1949 0.3689 0.6127]

Epoch 32, loss = 0.3946
Mean test/val loss: 0.3745
[25, 50, 75] percentiles test/val loss: [0.1456 0.2857 0.5154]

Epoch 34, loss = 0.3597
Mean test/val loss: 0.3509
[25, 50, 75] percentiles test/val loss: [0.1284 0.2597 0.4669]

Epoch 36, loss = 135.9084
Mean test/val loss: 0.4454
[25, 50, 75] percentiles test/val loss: [0.1922 0.3373 0.6014]

Epoch 38, loss = 0.3900
Mean test/val loss: 0.3731
[25, 50, 75] percentiles test/val loss: [0.1384 0.2736 0.5111]

Epoch 40, loss = 0.3469
Mean test/val loss: 0.3367
[25, 50, 75] percentiles test/val loss: [0.1181 0.247  0.4617]

Epoch 42, loss = 0.3633
Mean test/val loss: 0.3342
[25, 50, 75] percentiles test/val loss: [0.1181 0.2453 0.4548]

Epoch 44, loss = 0.3308
Mean test/val loss: 0.3375
[25, 50, 75] percentiles test/val loss: [0.1322 0.2497 0.4557]

Epoch 46, loss = 0.3215
Mean test/val loss: 0.3409
[25, 50, 75] percentiles test/val loss: [0.166  0.2794 0.4349]

Epoch 48, loss = 0.3116
Mean test/val loss: 0.3069
[25, 50, 75] percentiles test/val loss: [0.1091 0.2404 0.4241]

Epoch 50, loss = 0.3179
Mean test/val loss: 0.3292
[25, 50, 75] percentiles test/val loss: [0.1232 0.2409 0.441 ]

New lr: 1e-05
Epoch 52, loss = 0.2779
Mean test/val loss: 0.2848
[25, 50, 75] percentiles test/val loss: [0.098  0.2227 0.3992]

Epoch 54, loss = 0.2671
Mean test/val loss: 0.2777
[25, 50, 75] percentiles test/val loss: [0.0974 0.2203 0.3894]

Epoch 56, loss = 0.2616
Mean test/val loss: 0.2752
[25, 50, 75] percentiles test/val loss: [0.0952 0.2192 0.3805]

Epoch 58, loss = 0.2579
Mean test/val loss: 0.2716
[25, 50, 75] percentiles test/val loss: [0.0951 0.217  0.3798]

Epoch 60, loss = 0.2547
Mean test/val loss: 0.2729
[25, 50, 75] percentiles test/val loss: [0.0991 0.2195 0.377 ]

Epoch 62, loss = 0.2515
Mean test/val loss: 0.2698
[25, 50, 75] percentiles test/val loss: [0.0949 0.217  0.38  ]

Epoch 64, loss = 0.2487
Mean test/val loss: 0.2683
[25, 50, 75] percentiles test/val loss: [0.0939 0.2139 0.3802]

Epoch 66, loss = 0.2454
Mean test/val loss: 0.2655
[25, 50, 75] percentiles test/val loss: [0.0944 0.2102 0.3682]

Epoch 68, loss = 0.2422
Mean test/val loss: 0.2635
[25, 50, 75] percentiles test/val loss: [0.0938 0.2068 0.3696]

Epoch 70, loss = 0.2398
Mean test/val loss: 0.2619
[25, 50, 75] percentiles test/val loss: [0.0915 0.2073 0.3675]

Epoch 72, loss = 0.2373
Mean test/val loss: 0.2612
[25, 50, 75] percentiles test/val loss: [0.0938 0.2045 0.3665]

Epoch 74, loss = 0.2351
Mean test/val loss: 0.2594
[25, 50, 75] percentiles test/val loss: [0.0932 0.2037 0.3683]

Epoch 76, loss = 0.2329
Mean test/val loss: 0.2585
[25, 50, 75] percentiles test/val loss: [0.0892 0.2032 0.3646]

Epoch 78, loss = 0.2309
Mean test/val loss: 0.2567
[25, 50, 75] percentiles test/val loss: [0.0895 0.2052 0.3618]

Epoch 80, loss = 0.2291
Mean test/val loss: 0.2574
[25, 50, 75] percentiles test/val loss: [0.0905 0.2017 0.3661]


Total parameters: 43362996
Total training + validation time: 15.0 hours, 6.0 mins, and 25.599999999998545 secs
Final val loss: 0.25737842376250775

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_05_23_23 sample981: 0.008170113898813725
dataset_05_23_23 sample324: 0.24519795179367065
dataset_05_23_23 sample3464: 0.40062546730041504
dataset_05_23_23 sample2834: 0.04830954223871231
dataset_05_23_23 sample1936: 0.17483341693878174
Loss: 0.175 +- 0.141

Downsampling (40%) Results:
dataset_05_23_23 sample1936-downsampling: 1.5050365924835205
dataset_05_23_23 sample2834-downsampling: 2.8456733226776123
dataset_05_23_23 sample324-downsampling: 4.975582122802734
dataset_05_23_23 sample3464-downsampling: 3.2030253410339355
dataset_05_23_23 sample981-downsampling: 0.26973041892051697
Loss: 2.56 +- 1.593

Removing /scratch/midway3/erschultz/ContactGNNEnergy9downsample
Original sampling (100%) Results:
dataset_05_23_23 sample1936-regular: 1.375072956085205
dataset_05_23_23 sample2834-regular: 2.0671229362487793
dataset_05_23_23 sample324-regular: 4.34110689163208
dataset_05_23_23 sample3464-regular: 2.9194459915161133
dataset_05_23_23 sample981-regular: 0.2829955518245697
Loss: 2.197 +- 1.377

Removing /scratch/midway3/erschultz/ContactGNNEnergy9regsample
