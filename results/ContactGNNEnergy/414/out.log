#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_05_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy8', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[50], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=414, pretrain_id=None, resume_training=False, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, grid_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/414', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/414/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/414/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/414/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7fe064107310>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 33.748 minutes
Number of samples: 4815
Average num edges per graph:  231345.64652128765
Mean degree: [386.18 485.64 503.79 ... 428.66 229.6  431.64] +- [71.   24.45  8.85 ... 62.28 79.4  53.09]

split sizes: train=4334, val=481, test=0, N=4815
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7fe02e0e1fa0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.5286
Mean test/val loss: 0.4935
[25, 50, 75] percentiles test/val loss: [0.3186 0.4487 0.6018]

Epoch 4, loss = 0.4450
Mean test/val loss: 0.4231
[25, 50, 75] percentiles test/val loss: [0.2825 0.3794 0.5033]

Epoch 6, loss = 0.3890
Mean test/val loss: 0.3712
[25, 50, 75] percentiles test/val loss: [0.2387 0.3304 0.4408]

Epoch 8, loss = 0.3484
Mean test/val loss: 0.3394
[25, 50, 75] percentiles test/val loss: [0.2145 0.3059 0.4022]

Epoch 10, loss = 0.3160
Mean test/val loss: 0.3177
[25, 50, 75] percentiles test/val loss: [0.1938 0.2775 0.3754]

Epoch 12, loss = 0.2959
Mean test/val loss: 0.2976
[25, 50, 75] percentiles test/val loss: [0.1818 0.2581 0.3492]

Epoch 14, loss = 0.2894
Mean test/val loss: 0.3006
[25, 50, 75] percentiles test/val loss: [0.1857 0.2721 0.361 ]

Epoch 16, loss = 0.2701
Mean test/val loss: 0.2686
[25, 50, 75] percentiles test/val loss: [0.1637 0.233  0.3115]

Epoch 18, loss = 0.2593
Mean test/val loss: 0.2649
[25, 50, 75] percentiles test/val loss: [0.1626 0.23   0.3128]

Epoch 20, loss = 0.2500
Mean test/val loss: 0.2615
[25, 50, 75] percentiles test/val loss: [0.16   0.224  0.3017]

Epoch 22, loss = 0.2463
Mean test/val loss: 0.2451
[25, 50, 75] percentiles test/val loss: [0.1467 0.2123 0.2909]

Epoch 24, loss = 0.2389
Mean test/val loss: 0.2483
[25, 50, 75] percentiles test/val loss: [0.1526 0.2131 0.2889]

Epoch 26, loss = 0.2327
Mean test/val loss: 0.2411
[25, 50, 75] percentiles test/val loss: [0.1421 0.2089 0.2862]

Epoch 28, loss = 0.2265
Mean test/val loss: 0.2357
[25, 50, 75] percentiles test/val loss: [0.1398 0.2019 0.2764]

Epoch 30, loss = 0.2247
Mean test/val loss: 0.2479
[25, 50, 75] percentiles test/val loss: [0.1486 0.2109 0.2899]

Epoch 32, loss = 0.2202
Mean test/val loss: 0.2420
[25, 50, 75] percentiles test/val loss: [0.1456 0.2069 0.2855]

Epoch 34, loss = 0.2155
Mean test/val loss: 0.2396
[25, 50, 75] percentiles test/val loss: [0.1436 0.206  0.2845]

Epoch 36, loss = 0.2155
Mean test/val loss: 0.2281
[25, 50, 75] percentiles test/val loss: [0.1368 0.1944 0.2744]

Epoch 38, loss = 0.2084
Mean test/val loss: 0.2266
[25, 50, 75] percentiles test/val loss: [0.134  0.19   0.2726]

Epoch 40, loss = 0.2047
Mean test/val loss: 0.2224
[25, 50, 75] percentiles test/val loss: [0.1302 0.1872 0.2628]

Epoch 42, loss = 0.6496
Mean test/val loss: 0.5648
[25, 50, 75] percentiles test/val loss: [0.3402 0.4827 0.7326]

Epoch 44, loss = 0.4452
Mean test/val loss: 0.4151
[25, 50, 75] percentiles test/val loss: [0.2726 0.3843 0.5055]

Epoch 46, loss = 0.2988
Mean test/val loss: 0.2775
[25, 50, 75] percentiles test/val loss: [0.168  0.2425 0.3294]

Epoch 48, loss = 0.2078
Mean test/val loss: 0.2201
[25, 50, 75] percentiles test/val loss: [0.1296 0.1887 0.2614]

Epoch 50, loss = 0.2019
Mean test/val loss: 0.2207
[25, 50, 75] percentiles test/val loss: [0.133  0.186  0.2629]

New lr: 1e-05
Epoch 52, loss = 0.1883
Mean test/val loss: 0.2102
[25, 50, 75] percentiles test/val loss: [0.1223 0.1792 0.2493]

Epoch 54, loss = 0.1860
Mean test/val loss: 0.2093
[25, 50, 75] percentiles test/val loss: [0.1225 0.178  0.2476]

Epoch 56, loss = 0.1844
Mean test/val loss: 0.2083
[25, 50, 75] percentiles test/val loss: [0.1224 0.1767 0.2465]

Epoch 58, loss = 0.1830
Mean test/val loss: 0.2074
[25, 50, 75] percentiles test/val loss: [0.1209 0.1776 0.2452]

Epoch 60, loss = 0.1818
Mean test/val loss: 0.2071
[25, 50, 75] percentiles test/val loss: [0.1204 0.1765 0.2449]

Epoch 62, loss = 0.1807
Mean test/val loss: 0.2066
[25, 50, 75] percentiles test/val loss: [0.1201 0.1757 0.2459]

Epoch 64, loss = 0.1797
Mean test/val loss: 0.2062
[25, 50, 75] percentiles test/val loss: [0.1196 0.1755 0.2444]

Epoch 66, loss = 0.1787
Mean test/val loss: 0.2059
[25, 50, 75] percentiles test/val loss: [0.1193 0.1746 0.2431]

Epoch 68, loss = 0.1777
Mean test/val loss: 0.2052
[25, 50, 75] percentiles test/val loss: [0.1186 0.1745 0.2435]

Epoch 70, loss = 0.1768
Mean test/val loss: 0.2049
[25, 50, 75] percentiles test/val loss: [0.1197 0.1741 0.2452]

Epoch 72, loss = 0.1760
Mean test/val loss: 0.2046
[25, 50, 75] percentiles test/val loss: [0.1185 0.173  0.2416]

Epoch 74, loss = 0.1751
Mean test/val loss: 0.2043
[25, 50, 75] percentiles test/val loss: [0.1179 0.1721 0.2415]

Epoch 76, loss = 0.1742
Mean test/val loss: 0.2036
[25, 50, 75] percentiles test/val loss: [0.1188 0.1722 0.2414]

Epoch 78, loss = 0.1734
Mean test/val loss: 0.2034
[25, 50, 75] percentiles test/val loss: [0.1182 0.1724 0.2404]

Epoch 80, loss = 0.1726
Mean test/val loss: 0.2029
[25, 50, 75] percentiles test/val loss: [0.1169 0.1716 0.2398]


Total parameters: 43362484
Total training + validation time: 13.0 hours, 55.0 mins, and 23.900000000001455 secs
Final val loss: 0.20292568927255156

split sizes: train=4334, val=481, test=0, N=4815
#### Plotting Script ####
Prediction Results:
dataset_05_28_23 sample3271: 0.4215477705001831
