#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy18', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse_log', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=470, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=False, input_L_to_D_mode='meandist', use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/470', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/470/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/470/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/470/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_log at 0x7fb9acffd5e0>, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 14.768 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7fb983bc3b20>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.5342
Mean test/val loss: 0.5276
[25, 50, 75] percentiles test/val loss: [0.2714 0.4277 0.6452]

Epoch 4, loss = 0.4610
Mean test/val loss: 0.5001
[25, 50, 75] percentiles test/val loss: [0.2522 0.3993 0.6098]

Epoch 6, loss = 0.4144
Mean test/val loss: 0.4119
[25, 50, 75] percentiles test/val loss: [0.1883 0.3111 0.4986]

Epoch 8, loss = 0.3852
Mean test/val loss: 0.3842
[25, 50, 75] percentiles test/val loss: [0.1779 0.294  0.4635]

Epoch 10, loss = 0.3686
Mean test/val loss: 0.3760
[25, 50, 75] percentiles test/val loss: [0.1804 0.2885 0.4586]

Epoch 12, loss = 0.3514
Mean test/val loss: 0.3550
[25, 50, 75] percentiles test/val loss: [0.1644 0.2728 0.4274]

Epoch 14, loss = 0.3389
Mean test/val loss: 0.3475
[25, 50, 75] percentiles test/val loss: [0.161  0.2626 0.4266]

Epoch 16, loss = 0.3231
Mean test/val loss: 0.3360
[25, 50, 75] percentiles test/val loss: [0.1567 0.2618 0.4089]

Epoch 18, loss = 0.3109
Mean test/val loss: 0.3404
[25, 50, 75] percentiles test/val loss: [0.1537 0.2625 0.4094]

Epoch 20, loss = 0.3046
Mean test/val loss: 0.3216
[25, 50, 75] percentiles test/val loss: [0.1472 0.245  0.385 ]

Epoch 22, loss = 0.2955
Mean test/val loss: 0.3365
[25, 50, 75] percentiles test/val loss: [0.1658 0.2561 0.3946]

Epoch 24, loss = 0.2879
Mean test/val loss: 0.3085
[25, 50, 75] percentiles test/val loss: [0.1418 0.2353 0.378 ]

Epoch 26, loss = 0.2806
Mean test/val loss: 0.3137
[25, 50, 75] percentiles test/val loss: [0.1458 0.2357 0.3706]

Epoch 28, loss = 0.2765
Mean test/val loss: 0.2971
[25, 50, 75] percentiles test/val loss: [0.1376 0.229  0.3548]

Epoch 30, loss = 0.2706
Mean test/val loss: 0.3017
[25, 50, 75] percentiles test/val loss: [0.141  0.233  0.3601]

Epoch 32, loss = 0.2656
Mean test/val loss: 0.3020
[25, 50, 75] percentiles test/val loss: [0.1433 0.2322 0.3736]

Epoch 34, loss = 0.2614
Mean test/val loss: 0.2969
[25, 50, 75] percentiles test/val loss: [0.1334 0.2211 0.3562]

Epoch 36, loss = 0.2581
Mean test/val loss: 0.2989
[25, 50, 75] percentiles test/val loss: [0.1451 0.2308 0.3602]

Epoch 38, loss = 0.2527
Mean test/val loss: 0.2851
[25, 50, 75] percentiles test/val loss: [0.1318 0.2232 0.3414]

Epoch 40, loss = 0.2487
Mean test/val loss: 0.2850
[25, 50, 75] percentiles test/val loss: [0.1288 0.2185 0.3435]

New lr: 1e-05
Epoch 42, loss = 0.2257
Mean test/val loss: 0.2676
[25, 50, 75] percentiles test/val loss: [0.1214 0.2028 0.3183]

Epoch 44, loss = 0.2223
Mean test/val loss: 0.2668
[25, 50, 75] percentiles test/val loss: [0.12   0.2015 0.3152]

Epoch 46, loss = 0.2199
Mean test/val loss: 0.2662
[25, 50, 75] percentiles test/val loss: [0.1203 0.2015 0.3151]

Epoch 48, loss = 0.2178
Mean test/val loss: 0.2659
[25, 50, 75] percentiles test/val loss: [0.1199 0.2005 0.3153]

Epoch 50, loss = 0.2161
Mean test/val loss: 0.2650
[25, 50, 75] percentiles test/val loss: [0.1198 0.2001 0.3123]

Epoch 52, loss = 0.2145
Mean test/val loss: 0.2648
[25, 50, 75] percentiles test/val loss: [0.1185 0.1985 0.3161]

Epoch 54, loss = 0.2130
Mean test/val loss: 0.2645
[25, 50, 75] percentiles test/val loss: [0.1184 0.1989 0.3139]

Epoch 56, loss = 0.2117
Mean test/val loss: 0.2635
[25, 50, 75] percentiles test/val loss: [0.1178 0.1981 0.312 ]

Epoch 58, loss = 0.2104
Mean test/val loss: 0.2643
[25, 50, 75] percentiles test/val loss: [0.118  0.198  0.3125]

Epoch 60, loss = 0.2093
Mean test/val loss: 0.2637
[25, 50, 75] percentiles test/val loss: [0.1182 0.1956 0.3125]

Epoch 62, loss = 0.2082
Mean test/val loss: 0.2628
[25, 50, 75] percentiles test/val loss: [0.118  0.1974 0.311 ]

Epoch 64, loss = 0.2072
Mean test/val loss: 0.2628
[25, 50, 75] percentiles test/val loss: [0.1176 0.1983 0.3115]

Epoch 66, loss = 0.2062
Mean test/val loss: 0.2628
[25, 50, 75] percentiles test/val loss: [0.1181 0.1972 0.312 ]

Epoch 68, loss = 0.2053
Mean test/val loss: 0.2621
[25, 50, 75] percentiles test/val loss: [0.1182 0.1955 0.3102]

Epoch 70, loss = 0.2044
Mean test/val loss: 0.2626
[25, 50, 75] percentiles test/val loss: [0.1177 0.1974 0.3083]

Epoch 72, loss = 0.2036
Mean test/val loss: 0.2630
[25, 50, 75] percentiles test/val loss: [0.1178 0.1972 0.3103]

Epoch 74, loss = 0.2028
Mean test/val loss: 0.2625
[25, 50, 75] percentiles test/val loss: [0.1174 0.1956 0.3127]

Epoch 76, loss = 0.2020
Mean test/val loss: 0.2620
[25, 50, 75] percentiles test/val loss: [0.1169 0.1946 0.3111]

Epoch 78, loss = 0.2013
Mean test/val loss: 0.2623
[25, 50, 75] percentiles test/val loss: [0.1181 0.1959 0.3103]

Epoch 80, loss = 0.2006
Mean test/val loss: 0.2621
[25, 50, 75] percentiles test/val loss: [0.1158 0.1945 0.3105]


Total parameters: 26462000
Total training + validation time: 6.0 hours, 47.0 mins, and 54.29999999999927 secs
Final val loss: 0.26209557022154334

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 0.46548599004745483
dataset_04_28_23 sample324: 0.5240317583084106
dataset_04_28_23 sample3464: 0.23911653459072113
dataset_04_28_23 sample2834: 0.3965262770652771
dataset_04_28_23 sample1936: 0.18342380225658417
MSE_log: 0.362 +- 0.13

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 3.190493583679199
dataset_04_28_23 sample2834-downsampling: 3.692575216293335
dataset_04_28_23 sample324-downsampling: 8.638120651245117
dataset_04_28_23 sample3464-downsampling: 5.157115936279297
dataset_04_28_23 sample981-downsampling: 7.473106384277344
Loss: 5.63 +- 2.115

Removing /scratch/midway3/erschultz/ContactGNNEnergy18downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 2.74918532371521
dataset_04_28_23 sample2834-regular: 3.588491439819336
dataset_04_28_23 sample324-regular: 6.961258411407471
dataset_04_28_23 sample3464-regular: 3.385336399078369
dataset_04_28_23 sample981-regular: 4.816957473754883
Loss: 4.3 +- 1.49

Removing /scratch/midway3/erschultz/ContactGNNEnergy18regsample
