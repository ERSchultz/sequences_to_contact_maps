#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_09_10_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy11', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_diag', model_type='ContactGNNEnergy', id=478, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=False, input_L_to_D_mode='meandist', use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/478', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/478/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/478/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/478/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f56106d7310>, channels=1, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 12.142 minutes
Number of samples: 5000
Average num edges per graph:  65102.048
Mean degree: [252.75 254.47 254.94 ... 254.47 254.97 254.91] +- [2.3  0.92 0.24 ... 0.92 0.2  0.29]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f55c8047460>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.0712
Mean test/val loss: 0.0222
[25, 50, 75] percentiles test/val loss: [0.0062 0.0116 0.03  ]

Epoch 4, loss = 0.0340
Mean test/val loss: 0.0364
[25, 50, 75] percentiles test/val loss: [0.0042 0.0093 0.0418]

Epoch 6, loss = 0.0257
Mean test/val loss: 0.0224
[25, 50, 75] percentiles test/val loss: [0.007  0.0154 0.0249]

Epoch 8, loss = 0.0206
Mean test/val loss: 0.0108
[25, 50, 75] percentiles test/val loss: [0.0042 0.0072 0.0163]

Epoch 10, loss = 0.0173
Mean test/val loss: 0.0206
[25, 50, 75] percentiles test/val loss: [0.0072 0.0133 0.0219]

Epoch 12, loss = 0.0180
Mean test/val loss: 0.0402
[25, 50, 75] percentiles test/val loss: [0.0152 0.0275 0.0572]

Epoch 14, loss = 0.0136
Mean test/val loss: 0.0132
[25, 50, 75] percentiles test/val loss: [0.0066 0.009  0.0156]

Epoch 16, loss = 0.0117
Mean test/val loss: 0.0112
[25, 50, 75] percentiles test/val loss: [0.0026 0.0049 0.0091]

Epoch 18, loss = 0.0091
Mean test/val loss: 0.0049
[25, 50, 75] percentiles test/val loss: [0.0019 0.0033 0.0071]

Epoch 20, loss = 0.0075
Mean test/val loss: 0.0050
[25, 50, 75] percentiles test/val loss: [0.0017 0.004  0.0069]

Epoch 22, loss = 0.0059
Mean test/val loss: 0.0032
[25, 50, 75] percentiles test/val loss: [0.0015 0.0024 0.0038]

Epoch 24, loss = 0.0065
Mean test/val loss: 0.0030
[25, 50, 75] percentiles test/val loss: [0.0012 0.0019 0.004 ]

Epoch 26, loss = 0.0107
Mean test/val loss: 0.0024
[25, 50, 75] percentiles test/val loss: [0.0013 0.0019 0.0032]

Epoch 28, loss = 0.0057
Mean test/val loss: 0.0026
[25, 50, 75] percentiles test/val loss: [0.0013 0.002  0.0031]

Epoch 30, loss = 0.0060
Mean test/val loss: 0.0013
[25, 50, 75] percentiles test/val loss: [0.0006 0.0011 0.0017]

Epoch 32, loss = 0.0044
Mean test/val loss: 0.0080
[25, 50, 75] percentiles test/val loss: [0.0047 0.0076 0.011 ]

Epoch 34, loss = 0.0031
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0011 0.0015 0.0025]

Epoch 36, loss = 0.0028
Mean test/val loss: 0.0012
[25, 50, 75] percentiles test/val loss: [0.0005 0.001  0.0016]

Epoch 38, loss = 0.0033
Mean test/val loss: 0.0069
[25, 50, 75] percentiles test/val loss: [0.0033 0.005  0.0094]

Epoch 40, loss = 0.0026
Mean test/val loss: 0.0008
[25, 50, 75] percentiles test/val loss: [0.0005 0.0007 0.001 ]

New lr: 1e-05
Epoch 42, loss = 0.0001
Mean test/val loss: 0.0001
[25, 50, 75] percentiles test/val loss: [0.     0.0001 0.0001]

Epoch 44, loss = 0.0001
Mean test/val loss: 0.0004
[25, 50, 75] percentiles test/val loss: [0.0003 0.0004 0.0005]

Epoch 46, loss = 0.0001
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 48, loss = 0.0001
Mean test/val loss: 0.0001
[25, 50, 75] percentiles test/val loss: [0.0001 0.0001 0.0002]

Epoch 50, loss = 0.0001
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0.     0.     0.0001]

Epoch 52, loss = 0.0001
Mean test/val loss: 0.0001
[25, 50, 75] percentiles test/val loss: [0.     0.     0.0001]

Epoch 54, loss = 0.0000
Mean test/val loss: 0.0001
[25, 50, 75] percentiles test/val loss: [0.     0.     0.0001]

Epoch 56, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 58, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 60, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 62, loss = 0.0001
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 64, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 66, loss = 0.0001
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 68, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 70, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 72, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 74, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 76, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 78, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]

Epoch 80, loss = 0.0000
Mean test/val loss: 0.0000
[25, 50, 75] percentiles test/val loss: [0. 0. 0.]


Total parameters: 26462000
Total training + validation time: 10.0 hours, 3.0 mins, and 20.5 secs
Final val loss: 4.640939887281092e-06

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_09_10_23 sample981: 7.49673017708119e-06
dataset_09_10_23 sample324: 2.2939289010537323e-06
dataset_09_10_23 sample3464: 1.5861065776334726e-06
dataset_09_10_23 sample2834: 8.716177944734227e-06
dataset_09_10_23 sample1936: 6.179949195939116e-06
MSE Loss: 0.0 +- 0.0

Downsampling (40%) Results:
dataset_09_10_23 sample1936-downsampling: 0.1683564931154251
dataset_09_10_23 sample2834-downsampling: 0.3436448574066162
dataset_09_10_23 sample324-downsampling: 0.01611296832561493
dataset_09_10_23 sample3464-downsampling: 0.008485152386128902
dataset_09_10_23 sample981-downsampling: 0.5783771276473999
Loss: 0.223 +- 0.216

Removing /scratch/midway3/erschultz/ContactGNNEnergy11downsample
Original sampling (100%) Results:
