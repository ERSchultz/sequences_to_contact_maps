#### ARCHITECTURE ####
Sequential(
  (0): SignedConv(3, 8, first_aggr=True)
  (1): PReLU(num_parameters=1)
  (2): SignedConv(8, 2, first_aggr=False)
)
Sequential(
  (0): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=24, out_features=10, bias=True)
      (1): Identity()
    )
  )
  (1): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=10, bias=True)
      (1): Identity()
    )
  )
  (2): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=1, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
) 

Namespace(GNN_mode=True, act='prelu', autoencoder_mode=False, batch_size=4, bottleneck=None, channels=1, classes=10, criterion=<function mse_loss at 0x7fed2069d040>, crop=None, cuda=True, data_folder='/scratch/midway2/erschultz/dataset_08_24_21', degree=True, delete_root=False, device=device(type='cuda'), dilation_list=None, dilation_list_head=None, dilation_list_trunk=None, down_sampling=None, gamma=0.1, gpus=1, head_act=None, head_architecture='concat-outer', head_hidden_sizes_list=[10, 10, 1], hidden_sizes_list=[8, 2], id=18, ifile=None, ifile_folder=None, inner_act='sigmoid', k=2, kernel_w_list=None, log_file=<_io.TextIOWrapper name='results/ContactGNNEnergy/18/out.log' mode='a' encoding='UTF-8'>, loss='mse', lr=0.0001, m=1024, message_passing='SignedConv', milestones=None, min_subtraction=True, model_type='ContactGNNEnergy', n_epochs=40, nf=None, node_feature_size=3, num_workers=4, ofile_folder='results/ContactGNNEnergy/18', out_act='prelu', output_mode='energy', parameter_sharing=False, plot=True, plot_predictions=True, pre_transforms=['degree'], pre_transforms_processed=None, pretrained=False, print_mod=2, print_params=True, relabel_11_to_00=False, resume_training=False, root_name='ContactGNNEnergy2', save_mod=5, seed=42, shuffle=True, sparsify_threshold=0.176, sparsify_threshold_upper=None, split=[0.8, 0.1, 0.1], split_neg_pos_edges=True, split_neg_pos_edges_for_feature_augmentation=True, start_epoch=1, top_k=None, toxx=False, toxx_mode='mean', training_norm=None, transforms=None, transforms_processed=None, use_bias=True, use_edge_weights=False, use_node_features=False, use_parallel=False, use_scratch=True, verbose=False, weighted_LDP=False, weighted_degree=False, x_reshape=True, y_log_transform=True, y_norm=None, y_preprocessing='diag', y_reshape=True, ydtype=torch.float32)

#### INITIAL PARAMETERS ####
act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

out_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1779, -0.5385, -0.3792],
        [-0.1922,  0.0903, -0.5080],
        [-0.2488, -0.3456,  0.0016],
        [-0.2148, -0.0400, -0.3912],
        [-0.3963, -0.3368, -0.1976],
        [-0.4557,  0.4841, -0.1146],
        [ 0.4968,  0.1799, -0.4889],
        [ 0.3995, -0.1589, -0.2213]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[-0.4792, -0.5740,  0.1652],
        [-0.1261,  0.2248, -0.4738],
        [ 0.4286, -0.4238, -0.0997],
        [ 0.1206,  0.2981,  0.4661],
        [ 0.5259, -0.4578,  0.1453],
        [-0.2483, -0.0633, -0.4321],
        [ 0.5259, -0.4237,  0.3086],
        [ 0.2029,  0.1876, -0.3121]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.5248,  0.1269,  0.0743, -0.5088,  0.2424, -0.0866, -0.2645,  0.4959],
       device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1287, -0.3194, -0.2922],
        [-0.0276,  0.3224, -0.1475],
        [-0.3294, -0.1977, -0.4313],
        [ 0.2059,  0.4469, -0.5435],
        [ 0.1341,  0.2983,  0.1047],
        [-0.2056,  0.3013,  0.3034],
        [ 0.2159, -0.1015, -0.1529],
        [ 0.0618, -0.1020, -0.1721]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.3690,  0.4962, -0.0572],
        [-0.1293,  0.0084, -0.0345],
        [ 0.1388,  0.1618, -0.5244],
        [-0.2131,  0.4862,  0.2249],
        [-0.0287, -0.3481, -0.3532],
        [-0.5172, -0.1882,  0.1950],
        [ 0.3681,  0.2666, -0.5103],
        [-0.3472, -0.0911,  0.5585]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.0835, -0.1495,  0.2389, -0.2199, -0.3737,  0.4214, -0.2625, -0.1157],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[-0.1582, -0.2005, -0.1708, -0.2467, -0.1929, -0.0618,  0.1687,  0.0418,
         -0.1902, -0.2006,  0.1244, -0.1860, -0.0308,  0.1199, -0.1157, -0.0273],
        [-0.0218, -0.0591, -0.1268, -0.2229, -0.2021, -0.1339,  0.2415, -0.1208,
         -0.1679,  0.0606,  0.0689,  0.1370,  0.1900,  0.1392, -0.2479,  0.0222]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.2142, -0.0327, -0.2083,  0.3371, -0.1322, -0.2013, -0.3187,  0.0158],
        [ 0.1567,  0.0783,  0.0699, -0.2681, -0.3302,  0.0062,  0.3224,  0.2040]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.bias torch.Size([2])
Parameter containing:
tensor([-0.2059, -0.0459], device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[-0.1843, -0.1206,  0.0453,  0.1361,  0.2071, -0.2295,  0.1672, -0.1763,
          0.0936,  0.2116,  0.0035,  0.2275, -0.2130, -0.0955,  0.1458, -0.0545],
        [-0.0512, -0.1042,  0.1723,  0.1226,  0.0801, -0.1405, -0.2029,  0.0270,
          0.0741, -0.1154, -0.0699,  0.1688,  0.0199,  0.0113, -0.0615, -0.2264]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[-0.3324, -0.1690, -0.1797,  0.1102, -0.1029, -0.1383,  0.3371,  0.1232],
        [ 0.2520, -0.1712, -0.1444,  0.1299, -0.2356, -0.2311, -0.0171, -0.1293]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.bias torch.Size([2])
Parameter containing:
tensor([-0.2650,  0.2097], device='cuda:0', requires_grad=True) 

head.0.model.0.weight torch.Size([10, 24])
Parameter containing:
tensor([[ 0.1641,  0.0331, -0.0355, -0.1891, -0.0743,  0.0520,  0.0963, -0.0258,
         -0.0807,  0.1137, -0.1626,  0.1290, -0.0792,  0.0031, -0.0403,  0.0247,
         -0.0617,  0.1484, -0.0053,  0.1593,  0.1963, -0.0994, -0.1489,  0.1638],
        [ 0.1600, -0.1559, -0.0158, -0.2013, -0.1671,  0.0394,  0.0543,  0.0433,
         -0.0556,  0.1883,  0.0292, -0.1205, -0.0116,  0.0490,  0.0715, -0.1443,
          0.0765, -0.1043, -0.1696, -0.1115,  0.1969,  0.1745,  0.1828,  0.1198],
        [ 0.1542, -0.0273, -0.1123,  0.1020, -0.1058, -0.1378, -0.0652,  0.0428,
          0.1051, -0.0793, -0.1201,  0.0275, -0.1203, -0.1329,  0.1064, -0.0343,
          0.1865,  0.1986,  0.0611,  0.0703,  0.0470,  0.0032, -0.0148,  0.0028],
        [ 0.0762,  0.1898, -0.0529, -0.0863, -0.0494, -0.0986,  0.0347,  0.1524,
          0.1596,  0.0937, -0.1502, -0.1096, -0.0448, -0.0376,  0.0168, -0.1874,
          0.0635, -0.1557, -0.1292, -0.1697,  0.1779, -0.1933,  0.1540, -0.0069],
        [-0.0237,  0.1277, -0.0189,  0.1280,  0.1476, -0.1772,  0.0785,  0.0385,
          0.0439,  0.0298,  0.0558, -0.0982, -0.0261,  0.1939,  0.1371, -0.0077,
         -0.1920,  0.0089, -0.1390,  0.1660, -0.1239, -0.0147, -0.0453,  0.0363],
        [ 0.1921,  0.0194,  0.1182,  0.1584,  0.1648, -0.0705, -0.0457,  0.0984,
         -0.0557,  0.0956, -0.0446, -0.1384,  0.0831,  0.0313,  0.0910,  0.2028,
          0.1394,  0.1935,  0.0109, -0.1756, -0.1432, -0.1268, -0.1799, -0.1023],
        [-0.1879, -0.1883, -0.1220, -0.2012, -0.1253,  0.0778,  0.1703, -0.0607,
         -0.0594,  0.1090, -0.1007, -0.0965,  0.1258, -0.1779,  0.0250,  0.1803,
          0.0350,  0.0555, -0.1189, -0.0028,  0.0112,  0.0501,  0.0793,  0.1774],
        [-0.1558,  0.0061, -0.1020, -0.1615, -0.0163, -0.1797,  0.1425,  0.0236,
         -0.1100,  0.1067, -0.1932, -0.0790, -0.0398, -0.1735, -0.1298, -0.0333,
          0.1549,  0.1971,  0.1299, -0.1219, -0.1335,  0.1781,  0.0722,  0.0054],
        [ 0.0276, -0.1641, -0.0682,  0.1965, -0.0503, -0.0102, -0.1695, -0.1142,
         -0.0042, -0.1268, -0.0253,  0.0831, -0.1997,  0.0606, -0.1350, -0.0996,
          0.0784,  0.1623, -0.0558, -0.0838, -0.1846, -0.1053, -0.1787, -0.0467],
        [ 0.0417, -0.1912,  0.1782,  0.1281, -0.1998, -0.0975,  0.0666, -0.0419,
         -0.0222, -0.0922,  0.1640, -0.1141,  0.1693,  0.0132,  0.0410,  0.1592,
         -0.0336, -0.1162, -0.0330,  0.1656, -0.1515,  0.0463, -0.2006,  0.1070]],
       device='cuda:0', requires_grad=True) 

head.0.model.0.bias torch.Size([10])
Parameter containing:
tensor([ 0.0754,  0.0087,  0.0876,  0.0002,  0.1130, -0.1616, -0.0300,  0.0906,
         0.2033,  0.1040], device='cuda:0', requires_grad=True) 

head.1.model.0.weight torch.Size([10, 10])
Parameter containing:
tensor([[-0.2300,  0.2432, -0.0705, -0.0675, -0.2874, -0.0498,  0.2237,  0.0441,
         -0.1842,  0.0973],
        [-0.1014,  0.2887, -0.2745, -0.0999, -0.3053, -0.1245,  0.0997,  0.3044,
          0.0531,  0.3100],
        [ 0.0619,  0.1826,  0.2535,  0.2643, -0.1770,  0.2907,  0.1916, -0.1479,
         -0.1509, -0.2652],
        [ 0.0794, -0.2563,  0.1336,  0.0999, -0.2747,  0.0862, -0.0257,  0.1445,
          0.1814, -0.3144],
        [ 0.2900,  0.2652,  0.1258, -0.2890, -0.1130, -0.0916, -0.0813,  0.1783,
          0.1150,  0.2505],
        [-0.1184,  0.1064,  0.1125, -0.2633, -0.3067, -0.1641,  0.2165, -0.2977,
         -0.2753,  0.1772],
        [ 0.1706,  0.2601, -0.2387, -0.2314,  0.1622,  0.2750,  0.1892,  0.0495,
          0.1042,  0.3001],
        [-0.2040, -0.1436,  0.2212, -0.2164, -0.1744,  0.2308,  0.0998,  0.1022,
         -0.1340, -0.0044],
        [ 0.2894, -0.1898,  0.0025,  0.1504, -0.2183,  0.3071, -0.1580, -0.0759,
         -0.0856, -0.2061],
        [-0.3103,  0.1783,  0.0840, -0.2962, -0.2035,  0.3125,  0.1209,  0.1269,
         -0.1892, -0.1386]], device='cuda:0', requires_grad=True) 

head.1.model.0.bias torch.Size([10])
Parameter containing:
tensor([-0.0477, -0.0578, -0.2167,  0.0261,  0.0314, -0.0400,  0.0438, -0.1253,
         0.0823,  0.1193], device='cuda:0', requires_grad=True) 

head.2.model.0.weight torch.Size([1, 10])
Parameter containing:
tensor([[-0.1666, -0.3136,  0.1655,  0.0754, -0.1608,  0.3047, -0.1430,  0.2137,
          0.1604, -0.2651]], device='cuda:0', requires_grad=True) 

head.2.model.0.bias torch.Size([1])
Parameter containing:
tensor([0.2039], device='cuda:0', requires_grad=True) 



#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.8877
Mean test/val loss: 0.8819

Epoch 4, loss = 0.8854
Mean test/val loss: 0.8797

Epoch 6, loss = 0.8829
Mean test/val loss: 0.8771

Epoch 8, loss = 0.8805
Mean test/val loss: 0.8753

Epoch 10, loss = 0.8793
Mean test/val loss: 0.8739

Epoch 12, loss = 0.8783
Mean test/val loss: 0.8731

Epoch 14, loss = 0.8773
Mean test/val loss: 0.8720

Epoch 16, loss = 0.8755
Mean test/val loss: 0.8700

Epoch 18, loss = 0.8707
Mean test/val loss: 0.8640

Epoch 20, loss = 0.8346
Mean test/val loss: 0.8045

Epoch 22, loss = 0.6385
Mean test/val loss: 0.6389

Epoch 24, loss = 0.6010
Mean test/val loss: 0.6226

Epoch 26, loss = 0.5924
Mean test/val loss: 0.6161

Epoch 28, loss = 0.5867
Mean test/val loss: 0.6100

Epoch 30, loss = 0.5821
Mean test/val loss: 0.6060

Epoch 32, loss = 0.5780
Mean test/val loss: 0.6019

Epoch 34, loss = 0.5745
Mean test/val loss: 0.5982

Epoch 36, loss = 0.5710
Mean test/val loss: 0.5945

Epoch 38, loss = 0.5671
Mean test/val loss: 0.5909

Epoch 40, loss = 0.5632
Mean test/val loss: 0.5870

#### FINAL PARAMETERS ####
act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.3805], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0039], device='cuda:0') 

out_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.7975], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0225], device='cuda:0') 

model.nns.0.lin_pos_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.4179, -0.1460, -0.1043],
        [-0.1684, -0.0160, -0.4898],
        [-0.3906, -0.3872,  0.0387],
        [-0.0486,  0.5092, -0.3098],
        [-0.3540, -0.1655, -0.0161],
        [-0.4631,  0.4250, -0.1115],
        [ 0.5055,  0.3012, -0.4276],
        [ 0.2801, -0.4117, -0.2984]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-1.7490e-02, -1.5613e-02, -1.0250e-02],
        [ 1.4764e-02,  1.4267e-02,  7.5455e-03],
        [-4.5026e-03, -3.7562e-03, -2.5044e-03],
        [ 8.7924e-04, -2.8528e-04,  6.8702e-04],
        [-1.7301e-02, -1.5328e-02, -9.2158e-03],
        [ 2.5273e-04,  6.6169e-04,  9.3000e-05],
        [-7.2536e-03, -7.4369e-03, -4.2308e-03],
        [ 1.0654e-02,  9.4569e-03,  5.9304e-03]], device='cuda:0') 

model.nns.0.lin_pos_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[-0.1672, -1.1983,  0.5892],
        [ 0.0471,  0.9043, -0.5918],
        [ 0.2657, -0.6858, -0.1554],
        [ 0.3232, -0.2227,  1.0419],
        [ 0.6106, -0.6591,  0.2449],
        [-0.2202,  0.4771, -0.6219],
        [ 0.6334, -0.4824,  0.3207],
        [ 0.1032,  0.3646, -0.2068]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0199, -0.0110, -0.0145],
        [ 0.0152,  0.0040,  0.0127],
        [-0.0042, -0.0017, -0.0033],
        [-0.0044,  0.0009, -0.0048],
        [-0.0199, -0.0115, -0.0139],
        [ 0.0016,  0.0006,  0.0013],
        [-0.0101, -0.0042, -0.0084],
        [ 0.0111,  0.0050,  0.0085]], device='cuda:0') 

model.nns.0.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.7358,  0.1694, -0.0404, -0.2700,  0.3361, -0.0471, -0.2131,  0.4903],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0303,  0.0202, -0.0046,  0.0017, -0.0159,  0.0017, -0.0149,  0.0139],
       device='cuda:0') 

model.nns.0.lin_neg_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[-0.1070, -0.8520, -0.2920],
        [ 0.1326,  0.7697,  0.0505],
        [-0.3555, -0.8651, -0.1816],
        [ 0.5290,  1.1844, -0.8419],
        [ 0.1489,  0.3854,  0.2819],
        [-0.2008,  0.3985,  0.5665],
        [ 0.2491,  0.4269, -0.3913],
        [ 0.4498,  0.5322, -0.0255]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0158, -0.0015, -0.0154],
        [ 0.0067, -0.0033,  0.0086],
        [-0.0087, -0.0001, -0.0088],
        [-0.0044, -0.0077, -0.0012],
        [ 0.0027,  0.0003,  0.0026],
        [ 0.0014, -0.0031,  0.0029],
        [ 0.0060,  0.0029,  0.0046],
        [ 0.0116,  0.0004,  0.0112]], device='cuda:0') 

model.nns.0.lin_neg_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.5535,  1.0711, -0.2374],
        [ 0.0910, -0.4047,  0.2278],
        [ 0.5033,  1.0007, -0.5952],
        [-0.3818, -0.4416,  0.6241],
        [ 0.2706, -0.6135, -0.3536],
        [-0.4572, -0.4302,  0.1810],
        [ 0.1675, -0.4720, -0.2519],
        [-0.1850, -0.7718,  0.9347]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0188, -0.0305, -0.0043],
        [ 0.0038,  0.0120, -0.0019],
        [-0.0137, -0.0229, -0.0031],
        [ 0.0004,  0.0107, -0.0054],
        [ 0.0010,  0.0028, -0.0003],
        [-0.0013,  0.0035, -0.0028],
        [ 0.0051,  0.0060,  0.0023],
        [ 0.0115,  0.0220,  0.0006]], device='cuda:0') 

model.nns.0.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.0488,  0.0278,  0.2879,  0.1378, -0.3863,  0.3720, -0.2982,  0.2168],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0246,  0.0186, -0.0125, -0.0172,  0.0053,  0.0031,  0.0111,  0.0166],
       device='cuda:0') 

model.nns.2.lin_pos_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[-0.2385,  0.0524, -0.2351, -0.1938, -0.3078,  0.0350,  0.1333,  0.0550,
          0.4012, -0.6577,  0.7409, -0.6161, -0.2790, -0.1788, -0.1447, -0.5085],
        [ 0.0644, -0.0474, -0.1306, -0.1876, -0.1730, -0.1081,  0.2014, -0.1135,
          0.1290, -0.1587,  0.4095, -0.1038,  0.0966,  0.0879, -0.1795, -0.2533]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0072,  0.0005, -0.0035,  0.0047,  0.0019, -0.0021,  0.0062,  0.0057,
         -0.0090,  0.0140, -0.0103,  0.0204,  0.0010,  0.0082,  0.0008,  0.0199],
        [-0.0137, -0.0040,  0.0052, -0.0048, -0.0055,  0.0018, -0.0054, -0.0123,
         -0.0063, -0.0074, -0.0066, -0.0084,  0.0030, -0.0078,  0.0033, -0.0123]],
       device='cuda:0') 

model.nns.2.lin_pos_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[ 0.5639, -0.7659,  0.2025,  0.7429,  0.4734, -0.4444,  0.4980, -0.1768],
        [ 0.4432, -0.3855,  0.3424, -0.3139,  0.0140, -0.0324,  0.5787,  0.1514]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0071,  0.0043, -0.0028, -0.0070, -0.0026,  0.0002, -0.0025,  0.0063],
        [-0.0192, -0.0001,  0.0038, -0.0033, -0.0066,  0.0023, -0.0044, -0.0108]],
       device='cuda:0') 

model.nns.2.lin_pos_r.bias 2 torch.Size([2])
Parameter containing:
tensor([-0.2409, -0.0174], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0126, -0.0257], device='cuda:0') 

model.nns.2.lin_neg_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2589, -0.2487,  0.4809,  0.0781, -0.0463, -0.2022, -0.1204, -0.1185,
         -0.0857,  0.7314, -0.5356,  0.1307, -0.6363, -0.0992, -0.1068,  0.2740],
        [-0.3447,  0.0958, -0.0752,  0.2242,  0.1167, -0.0119, -0.1862,  0.1642,
          0.2977, -0.4316,  0.0936,  0.2744,  0.2464, -0.0990,  0.1347, -0.3051]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0050,  0.0072,  0.0007,  0.0068,  0.0003, -0.0030, -0.0002,  0.0050,
          0.0009, -0.0032, -0.0038,  0.0113, -0.0001, -0.0026,  0.0121,  0.0004],
        [-0.0117, -0.0200, -0.0100, -0.0229,  0.0051, -0.0148,  0.0060, -0.0293,
         -0.0376,  0.0018,  0.0100, -0.0175, -0.0147,  0.0069, -0.0195, -0.0205]],
       device='cuda:0') 

model.nns.2.lin_neg_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[-1.2209,  0.4027, -0.9053,  0.7615,  0.2162,  0.4922,  0.3753,  0.8886],
        [ 0.7256, -0.5708,  0.1393,  0.0016, -0.4528, -0.2871, -0.3118, -0.4460]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0221, -0.0004,  0.0171, -0.0062, -0.0020, -0.0086, -0.0027, -0.0071],
        [-0.0132, -0.0110, -0.0149, -0.0103,  0.0052, -0.0191,  0.0068, -0.0200]],
       device='cuda:0') 

model.nns.2.lin_neg_r.bias 2 torch.Size([2])
Parameter containing:
tensor([-0.1015,  0.2645], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0029, -0.0510], device='cuda:0') 

head.0.model.0.weight 240 torch.Size([10, 24])
Parameter containing:
tensor([[ 2.0101e-01,  4.4520e-02,  8.1566e-02, -2.2246e-01, -1.0602e-02,
          7.9271e-02,  2.3379e-01, -6.7376e-02, -2.2322e-01,  7.4612e-02,
         -3.0058e-01,  2.1541e-01, -1.2995e-01, -6.1129e-03, -5.3588e-02,
          5.2866e-02, -2.1883e-01,  1.3397e-01, -1.6651e-01,  3.3194e-01,
          2.5430e-01, -9.3725e-02, -3.3632e-03,  8.9562e-02],
        [ 1.2611e-01, -1.6620e-01, -1.2753e-01, -1.6964e-01, -2.2531e-01,
          1.4669e-02, -7.5128e-02,  8.2316e-02,  6.8684e-02,  2.1909e-01,
          1.4755e-01, -1.9641e-01,  2.9862e-02,  5.4416e-02,  7.5134e-02,
         -1.6770e-01,  2.1410e-01, -9.8246e-02, -2.9221e-02, -2.7079e-01,
          1.4652e-01,  1.7130e-01,  4.7991e-02,  1.8797e-01],
        [ 1.8759e-01, -1.7317e-02, -2.5400e-03,  7.1760e-02, -4.9159e-02,
         -1.1404e-01,  6.1164e-02,  5.9796e-03, -9.0387e-03, -1.0542e-01,
         -2.2824e-01,  9.7979e-02, -1.5670e-01, -1.3637e-01,  1.0730e-01,
         -1.3054e-02,  5.9529e-02,  1.9685e-01, -6.9150e-02,  2.2160e-01,
          9.3252e-02,  5.6403e-03,  1.1325e-01, -5.9344e-02],
        [ 1.1308e-01,  2.0092e-01,  6.4161e-02, -1.1978e-01,  1.4386e-02,
         -7.1548e-02,  1.7230e-01,  1.1081e-01,  1.7568e-02,  5.4876e-02,
         -2.8805e-01, -2.3695e-02, -9.5364e-02, -4.6825e-02,  3.5868e-03,
         -1.5954e-01, -9.3396e-02, -1.7005e-01, -2.9060e-01,  1.9755e-03,
          2.3539e-01, -1.8777e-01,  2.9862e-01, -8.0578e-02],
        [-6.1492e-02,  1.1534e-01, -1.2765e-01,  1.5943e-01,  7.9240e-02,
         -2.0776e-01, -5.4826e-02,  7.8489e-02,  2.1493e-01,  8.1742e-02,
          2.3823e-01, -1.9437e-01,  3.8872e-02,  2.0700e-01,  1.7912e-01,
         -4.4927e-02,  9.1991e-03,  5.0237e-02,  7.9007e-02, -4.0334e-03,
         -1.8818e-01, -2.7026e-02, -1.8454e-01,  1.0661e-01],
        [ 2.2968e-01,  3.0397e-02,  2.3610e-01,  1.2785e-01,  2.2630e-01,
         -4.5330e-02,  8.9367e-02,  6.2073e-02, -1.6640e-01,  7.2595e-02,
         -1.4799e-01, -6.9134e-02,  4.9537e-02,  2.9433e-02,  9.6926e-02,
          2.2364e-01,  1.6928e-02,  1.9697e-01, -1.1520e-01, -2.3377e-02,
         -9.8048e-02, -1.2429e-01, -5.1107e-02, -1.5987e-01],
        [-2.1068e-01, -1.9773e-01, -1.1311e-01, -2.2917e-01, -1.3438e-01,
          7.5541e-02,  1.8336e-01, -1.0273e-01, -1.8446e-01,  5.9011e-02,
         -2.2442e-01, -5.3708e-02,  6.8919e-02, -1.9716e-01, -1.4449e-02,
          1.8488e-01, -1.1049e-01,  7.4990e-03, -2.5014e-01,  9.1844e-02,
          3.5152e-02,  3.5844e-02,  1.5976e-01,  8.3075e-02],
        [-1.9074e-01, -4.5682e-03, -2.1383e-01, -1.3120e-01, -7.5576e-02,
         -2.0465e-01,  1.3026e-02,  6.0693e-02,  1.0729e-02,  1.3560e-01,
         -7.7508e-02, -1.5271e-01, -7.2539e-05, -1.6875e-01, -1.2684e-01,
         -5.6347e-02,  2.8959e-01,  2.0226e-01,  2.6875e-01, -2.7692e-01,
         -1.8206e-01,  1.7461e-01, -5.8670e-02,  6.7687e-02],
        [-9.7227e-03, -1.7469e-01, -1.8635e-01,  2.2889e-01, -1.1311e-01,
         -3.5944e-02, -3.0656e-01, -7.5041e-02,  1.2061e-01, -9.6969e-02,
          9.3797e-02,  5.5868e-03, -1.5875e-01,  6.5640e-02, -1.3269e-01,
         -1.2387e-01,  2.1648e-01,  1.6634e-01,  8.6953e-02, -2.4582e-01,
         -2.3591e-01, -1.0930e-01, -3.1550e-01,  1.8331e-02],
        [ 4.2906e-03, -2.0220e-01,  6.0578e-02,  1.6135e-01, -2.6414e-01,
         -1.2440e-01, -7.1637e-02, -9.1932e-04,  1.1773e-01, -5.4520e-02,
          3.0009e-01, -1.9901e-01,  2.1860e-01,  2.1868e-02,  5.3276e-02,
          1.3160e-01,  1.2144e-01, -1.0296e-01,  1.2743e-01, -4.5454e-03,
         -2.0824e-01,  4.0684e-02, -3.4376e-01,  1.7820e-01]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[-0.0629, -0.0821, -0.1019, -0.0754, -0.0648, -0.0830, -0.1038, -0.0738,
         -0.0194, -0.0330, -0.0371, -0.0380, -0.0322, -0.0451, -0.0544, -0.0444,
         -0.0361, -0.0547, -0.0646, -0.0576, -0.0366, -0.0431, -0.0553, -0.0352],
        [ 0.0983,  0.1284,  0.1593,  0.1180,  0.1013,  0.1298,  0.1623,  0.1155,
          0.0304,  0.0516,  0.0581,  0.0594,  0.0504,  0.0705,  0.0851,  0.0694,
          0.0564,  0.0856,  0.1011,  0.0900,  0.0572,  0.0674,  0.0865,  0.0550],
        [-0.0537, -0.0701, -0.0870, -0.0644, -0.0553, -0.0709, -0.0886, -0.0631,
         -0.0166, -0.0282, -0.0317, -0.0325, -0.0275, -0.0385, -0.0465, -0.0379,
         -0.0308, -0.0467, -0.0552, -0.0492, -0.0312, -0.0368, -0.0473, -0.0301],
        [-0.1237, -0.1616, -0.2005, -0.1485, -0.1275, -0.1634, -0.2042, -0.1453,
         -0.0382, -0.0650, -0.0731, -0.0748, -0.0634, -0.0887, -0.1071, -0.0873,
         -0.0710, -0.1077, -0.1272, -0.1133, -0.0720, -0.0848, -0.1089, -0.0693],
        [ 0.0582,  0.0760,  0.0943,  0.0699,  0.0600,  0.0769,  0.0961,  0.0684,
          0.0180,  0.0306,  0.0344,  0.0352,  0.0298,  0.0417,  0.0504,  0.0411,
          0.0334,  0.0507,  0.0598,  0.0533,  0.0339,  0.0399,  0.0512,  0.0326],
        [-0.0421, -0.0550, -0.0682, -0.0505, -0.0434, -0.0556, -0.0695, -0.0494,
         -0.0130, -0.0221, -0.0249, -0.0254, -0.0216, -0.0302, -0.0364, -0.0297,
         -0.0242, -0.0366, -0.0433, -0.0385, -0.0245, -0.0288, -0.0370, -0.0236],
        [-0.0136, -0.0178, -0.0221, -0.0164, -0.0141, -0.0180, -0.0225, -0.0160,
         -0.0042, -0.0072, -0.0081, -0.0082, -0.0070, -0.0098, -0.0118, -0.0096,
         -0.0078, -0.0119, -0.0140, -0.0125, -0.0079, -0.0093, -0.0120, -0.0076],
        [ 0.0914,  0.1193,  0.1480,  0.1096,  0.0941,  0.1206,  0.1508,  0.1073,
          0.0282,  0.0480,  0.0540,  0.0552,  0.0468,  0.0655,  0.0791,  0.0645,
          0.0524,  0.0795,  0.0939,  0.0837,  0.0531,  0.0626,  0.0804,  0.0511],
        [ 0.0929,  0.1213,  0.1505,  0.1114,  0.0957,  0.1226,  0.1533,  0.1091,
          0.0287,  0.0488,  0.0549,  0.0561,  0.0476,  0.0666,  0.0804,  0.0655,
          0.0533,  0.0808,  0.0954,  0.0850,  0.0540,  0.0636,  0.0817,  0.0520],
        [ 0.1735,  0.2267,  0.2812,  0.2083,  0.1788,  0.2291,  0.2865,  0.2038,
          0.0536,  0.0911,  0.1026,  0.1049,  0.0890,  0.1244,  0.1503,  0.1225,
          0.0996,  0.1511,  0.1784,  0.1589,  0.1010,  0.1189,  0.1528,  0.0972]],
       device='cuda:0') 

head.0.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([ 0.0423,  0.0403,  0.0555, -0.0340,  0.1531, -0.1984, -0.0242,  0.1235,
         0.2402,  0.1397], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.1472,  0.2303, -0.1257, -0.2898,  0.1363, -0.0986, -0.0320,  0.2139,
         0.2175,  0.4064], device='cuda:0') 

head.1.model.0.weight 100 torch.Size([10, 10])
Parameter containing:
tensor([[-0.3555,  0.3626, -0.0852, -0.2525, -0.2077, -0.1182,  0.2082,  0.1380,
         -0.0282,  0.3820],
        [-0.2254,  0.4061, -0.2882, -0.2824, -0.2271, -0.1928,  0.0849,  0.3973,
          0.2079,  0.5926],
        [ 0.2029,  0.0504,  0.2689,  0.4700, -0.2684,  0.3649,  0.2107, -0.2536,
         -0.3242, -0.5827],
        [ 0.2406, -0.4134,  0.1631,  0.3354, -0.3833,  0.1576,  0.0019,  0.0255,
         -0.0026, -0.6545],
        [ 0.1529,  0.3960,  0.1082, -0.4899, -0.0240, -0.1639, -0.1001,  0.2808,
          0.2828,  0.5565],
        [ 0.0159, -0.0216,  0.1297, -0.0664, -0.3933, -0.0930,  0.2344, -0.3982,
         -0.4401, -0.1230],
        [ 0.0294,  0.3957, -0.2591, -0.4383,  0.2549,  0.2031,  0.1685,  0.1548,
          0.2747,  0.6108],
        [-0.0733, -0.2681,  0.2369, -0.0245, -0.2583,  0.3023,  0.1166,  0.0042,
         -0.2965, -0.2995],
        [ 0.4194, -0.3138,  0.0186,  0.3415, -0.3016,  0.3771, -0.1413, -0.1731,
         -0.2462, -0.4987],
        [-0.4494,  0.3111,  0.0655, -0.5005, -0.1135,  0.2425,  0.1015,  0.2304,
         -0.0220,  0.1701]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0155, -0.0092,  0.0111, -0.0005,  0.0120,  0.0138, -0.0218, -0.0136,
         -0.0214, -0.0011],
        [ 0.0276, -0.0165,  0.0198, -0.0009,  0.0215,  0.0247, -0.0390, -0.0243,
         -0.0382, -0.0021],
        [-0.0484,  0.0290, -0.0347,  0.0016, -0.0377, -0.0433,  0.0684,  0.0427,
          0.0670,  0.0036],
        [-0.0199,  0.0119, -0.0143,  0.0007, -0.0155, -0.0178,  0.0281,  0.0176,
          0.0276,  0.0015],
        [ 0.0296, -0.0177,  0.0212, -0.0010,  0.0231,  0.0265, -0.0418, -0.0261,
         -0.0410, -0.0022],
        [-0.0417,  0.0249, -0.0299,  0.0014, -0.0325, -0.0373,  0.0589,  0.0368,
          0.0577,  0.0031],
        [ 0.0248, -0.0149,  0.0178, -0.0008,  0.0194,  0.0222, -0.0351, -0.0219,
         -0.0344, -0.0018],
        [-0.0283,  0.0169, -0.0203,  0.0010, -0.0221, -0.0253,  0.0400,  0.0250,
          0.0392,  0.0021],
        [-0.0195,  0.0116, -0.0140,  0.0007, -0.0152, -0.0174,  0.0275,  0.0172,
          0.0270,  0.0014],
        [ 0.0389, -0.0233,  0.0279, -0.0013,  0.0303,  0.0348, -0.0550, -0.0343,
         -0.0539, -0.0029]], device='cuda:0') 

head.1.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([-0.0177, -0.0278, -0.2520, -0.0046,  0.0640, -0.0716,  0.0758, -0.1571,
         0.0515,  0.1501], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0502,  0.0897, -0.1573, -0.0647,  0.0962, -0.1355,  0.0807, -0.0921,
        -0.0633,  0.1265], device='cuda:0') 

head.2.model.0.weight 10 torch.Size([1, 10])
Parameter containing:
tensor([[-0.2207, -0.3941,  0.6912,  0.2844, -0.4226,  0.5955, -0.3548,  0.4046,
          0.2780, -0.5557]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0949,  0.1336, -0.0046, -0.0313,  0.0340, -0.0098,  0.0386, -0.0056,
         -0.1126,  0.0199]], device='cuda:0') 

head.2.model.0.bias 1 torch.Size([1])
Parameter containing:
tensor([0.1744], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.2276], device='cuda:0') 


Total parameters: 585
Total time: 11980.799438714981
Final val loss: 0.5870458787679672

#### Plotting Script ####
Prediction Results:
results/ContactGNNEnergy/18/sample1230
results/ContactGNNEnergy/18/sample1761
results/ContactGNNEnergy/18/sample40
results/ContactGNNEnergy/18/sample1751
results/ContactGNNEnergy/18/sample1718
Loss: 0.014885444641113282 +- 0.09694639935131148

