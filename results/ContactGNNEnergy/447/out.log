#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 None 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(1, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'constant'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy7', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=447, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=False, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/447', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/447/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/447/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/447/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f171fdf1310>, channels=1, node_feature_size=1, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=3, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  Constant(value=1.0)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 9.121 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f16e4409100>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.6175
Mean test/val loss: 0.5816
[25, 50, 75] percentiles test/val loss: [0.2876 0.4655 0.7267]

Epoch 4, loss = 0.5428
Mean test/val loss: 0.5514
[25, 50, 75] percentiles test/val loss: [0.2593 0.411  0.658 ]

Epoch 6, loss = 0.5029
Mean test/val loss: 0.4848
[25, 50, 75] percentiles test/val loss: [0.2311 0.3676 0.6063]

Epoch 8, loss = 0.4734
Mean test/val loss: 0.4752
[25, 50, 75] percentiles test/val loss: [0.2391 0.3712 0.5876]

Epoch 10, loss = 0.4446
Mean test/val loss: 0.4554
[25, 50, 75] percentiles test/val loss: [0.2134 0.3411 0.5583]

Epoch 12, loss = 0.4280
Mean test/val loss: 0.4523
[25, 50, 75] percentiles test/val loss: [0.2388 0.3516 0.538 ]

Epoch 14, loss = 0.4106
Mean test/val loss: 0.4376
[25, 50, 75] percentiles test/val loss: [0.2144 0.3326 0.5271]

Epoch 16, loss = 0.3961
Mean test/val loss: 0.4578
[25, 50, 75] percentiles test/val loss: [0.2427 0.3601 0.5579]

Epoch 18, loss = 0.3854
Mean test/val loss: 0.4072
[25, 50, 75] percentiles test/val loss: [0.199  0.319  0.5061]

Epoch 20, loss = 0.3912
Mean test/val loss: 0.5163
[25, 50, 75] percentiles test/val loss: [0.2193 0.3778 0.6166]

Epoch 22, loss = 0.3639
Mean test/val loss: 0.3894
[25, 50, 75] percentiles test/val loss: [0.1844 0.2934 0.4685]

Epoch 24, loss = 0.3621
Mean test/val loss: 0.3807
[25, 50, 75] percentiles test/val loss: [0.1745 0.2887 0.4546]

Epoch 26, loss = 0.3495
Mean test/val loss: 0.3675
[25, 50, 75] percentiles test/val loss: [0.1755 0.2829 0.4423]

Epoch 28, loss = 0.3413
Mean test/val loss: 0.3658
[25, 50, 75] percentiles test/val loss: [0.1732 0.2829 0.4393]

Epoch 30, loss = 0.3326
Mean test/val loss: 0.3751
[25, 50, 75] percentiles test/val loss: [0.1846 0.2933 0.4438]

Epoch 32, loss = 0.3263
Mean test/val loss: 0.3609
[25, 50, 75] percentiles test/val loss: [0.169  0.2706 0.4414]

Epoch 34, loss = 0.3202
Mean test/val loss: 0.3536
[25, 50, 75] percentiles test/val loss: [0.1724 0.269  0.4264]

Epoch 36, loss = 0.3137
Mean test/val loss: 0.3456
[25, 50, 75] percentiles test/val loss: [0.1639 0.2658 0.4122]

Epoch 38, loss = 0.3079
Mean test/val loss: 0.3540
[25, 50, 75] percentiles test/val loss: [0.172  0.2685 0.4131]

Epoch 40, loss = 0.3042
Mean test/val loss: 0.3450
[25, 50, 75] percentiles test/val loss: [0.1655 0.266  0.4074]

New lr: 1e-05
Epoch 42, loss = 0.2738
Mean test/val loss: 0.3195
[25, 50, 75] percentiles test/val loss: [0.1471 0.2446 0.3877]

Epoch 44, loss = 0.2693
Mean test/val loss: 0.3185
[25, 50, 75] percentiles test/val loss: [0.1467 0.247  0.3824]

Epoch 46, loss = 0.2662
Mean test/val loss: 0.3167
[25, 50, 75] percentiles test/val loss: [0.1449 0.2431 0.3836]

Epoch 48, loss = 0.2636
Mean test/val loss: 0.3159
[25, 50, 75] percentiles test/val loss: [0.1439 0.2412 0.3852]

Epoch 50, loss = 0.2614
Mean test/val loss: 0.3161
[25, 50, 75] percentiles test/val loss: [0.1458 0.2398 0.3845]

Epoch 52, loss = 0.2594
Mean test/val loss: 0.3148
[25, 50, 75] percentiles test/val loss: [0.1439 0.24   0.3831]

Epoch 54, loss = 0.2576
Mean test/val loss: 0.3145
[25, 50, 75] percentiles test/val loss: [0.1436 0.2395 0.3809]

Epoch 56, loss = 0.2559
Mean test/val loss: 0.3151
[25, 50, 75] percentiles test/val loss: [0.1454 0.2404 0.3806]

Epoch 58, loss = 0.2543
Mean test/val loss: 0.3139
[25, 50, 75] percentiles test/val loss: [0.1433 0.2385 0.3814]

Epoch 60, loss = 0.2529
Mean test/val loss: 0.3133
[25, 50, 75] percentiles test/val loss: [0.1424 0.2379 0.3798]

Epoch 62, loss = 0.2516
Mean test/val loss: 0.3133
[25, 50, 75] percentiles test/val loss: [0.1442 0.2377 0.3798]

Epoch 64, loss = 0.2503
Mean test/val loss: 0.3126
[25, 50, 75] percentiles test/val loss: [0.1414 0.2384 0.3801]

Epoch 66, loss = 0.2491
Mean test/val loss: 0.3125
[25, 50, 75] percentiles test/val loss: [0.1415 0.2349 0.3791]

Epoch 68, loss = 0.2480
Mean test/val loss: 0.3128
[25, 50, 75] percentiles test/val loss: [0.1422 0.2365 0.3804]

Epoch 70, loss = 0.2469
Mean test/val loss: 0.3117
[25, 50, 75] percentiles test/val loss: [0.1412 0.2352 0.38  ]

Epoch 72, loss = 0.2459
Mean test/val loss: 0.3114
[25, 50, 75] percentiles test/val loss: [0.14   0.2352 0.3817]

Epoch 74, loss = 0.2449
Mean test/val loss: 0.3112
[25, 50, 75] percentiles test/val loss: [0.1421 0.236  0.3776]

Epoch 76, loss = 0.2439
Mean test/val loss: 0.3111
[25, 50, 75] percentiles test/val loss: [0.1415 0.2346 0.3804]

Epoch 78, loss = 0.2430
Mean test/val loss: 0.3116
[25, 50, 75] percentiles test/val loss: [0.1412 0.2359 0.3802]

Epoch 80, loss = 0.2421
Mean test/val loss: 0.3112
[25, 50, 75] percentiles test/val loss: [0.1407 0.235  0.3819]


Total parameters: 26453360
Total training + validation time: 3.0 hours, 41.0 mins, and 6.5 secs
Final val loss: 0.3111907433047891

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 0.7147186398506165
dataset_04_28_23 sample324: 0.623236894607544
dataset_04_28_23 sample3464: 0.5020952224731445
dataset_04_28_23 sample2834: 0.44622474908828735
dataset_04_28_23 sample1936: 0.2368844747543335
Loss: 0.505 +- 0.163

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 7.532309532165527
dataset_04_28_23 sample2834-downsampling: 7.140846252441406
dataset_04_28_23 sample324-downsampling: 11.009675979614258
dataset_04_28_23 sample3464-downsampling: 10.103286743164062
dataset_04_28_23 sample981-downsampling: 17.004568099975586
Loss: 10.558 +- 3.544

Removing /scratch/midway3/erschultz/ContactGNNEnergy7downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 7.246244430541992
dataset_04_28_23 sample2834-regular: 7.137211799621582
dataset_04_28_23 sample324-regular: 10.653322219848633
dataset_04_28_23 sample3464-regular: 9.881662368774414
dataset_04_28_23 sample981-regular: 12.296131134033203
Loss: 9.443 +- 1.997

Removing /scratch/midway3/erschultz/ContactGNNEnergy7regsample
