#### ARCHITECTURE ####
Sequential(
  (0): Linear(3, 1000, bias=True)
  (1): PReLU(num_parameters=1)
  (2): Linear(1000, 1000, bias=True)
  (3): PReLU(num_parameters=1)
  (4): Linear(1000, 64, bias=True)
  (5): PReLU(num_parameters=1)
) 

Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): Linear(64, 1000, bias=True)
  (2): PReLU(num_parameters=1)
  (3): Linear(1000, 1000, bias=True)
  (4): PReLU(num_parameters=1)
  (5): Linear(1000, 64, bias=True)
  (6): PReLU(num_parameters=1)
  (7): WeightedGATv2Conv(64, 8, heads=8)
  (8): Linear(64, 1000, bias=True)
  (9): PReLU(num_parameters=1)
  (10): Linear(1000, 1000, bias=True)
  (11): PReLU(num_parameters=1)
  (12): Linear(1000, 64, bias=True)
  (13): PReLU(num_parameters=1)
  (14): WeightedGATv2Conv(64, 8, heads=8)
  (15): Linear(64, 1000, bias=True)
  (16): PReLU(num_parameters=1)
  (17): Linear(1000, 1000, bias=True)
  (18): PReLU(num_parameters=1)
  (19): Linear(1000, 64, bias=True)
  (20): PReLU(num_parameters=1)
  (21): WeightedGATv2Conv(64, 8, heads=8)
  (22): Linear(64, 1000, bias=True)
  (23): PReLU(num_parameters=1)
  (24): Linear(1000, 1000, bias=True)
  (25): PReLU(num_parameters=1)
  (26): Linear(1000, 64, bias=True)
  (27): PReLU(num_parameters=1)
) 

Bilinear 

Sequential(
  (0): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=65536, out_features=1000, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (1): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=1000, out_features=1000, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (2): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=1000, out_features=1000, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (3): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=1000, out_features=1000, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (4): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=1000, out_features=1000, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (5): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=1000, out_features=1000, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (6): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=1000, out_features=1024, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (7): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'degree_diag_split1', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder='/project2/depablo/erschultz/dataset_09_30_22', scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy3', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='log_inf', y_zero_diag_count=0, log_preprocessing=None, kr=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, gpus=1, milestones=[50], gamma=0.1, loss='mse', autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=230, pretrained=False, resume_training=False, k=None, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=None, dropout_p=0.2, parameter_sharing=False, use_bias=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000, 1024], encoder_hidden_sizes_list=[1000, 1000, 64], update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/230', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/230/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/230/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/230/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f4218c865e0>, channels=1, node_feature_size=3, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False, max=None, split_edges=False)', 'GeneticDistance(norm=True, max_value=None)'], node_transforms=['Constant(value=1.0)', 'Degree(norm=True, max=None, weighted=False, split_edges=True, split_val=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  Degree(norm=True, max=None, weighted=False, split_edges=True, split_val=1.0),
  ContactDistance(norm=False, max=None, split_edges=False),
  GeneticDistance(norm=True, max_value=None)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 53.561 minutes
Average num edges per graph:  871833.7261904762
Mean degree: [ 985.45 1020.3   775.17 ...  916.92  846.49  938.36] +- [ 42.55   2.71 106.62 ...  22.92  64.66  21.92]

split sizes: train=2268, val=252, test=0, N=2520
#### TRAINING/VALIDATION ####
Epoch 2, loss = 14.0642
Mean test/val loss: 12.2828

Epoch 4, loss = 11.3868
Mean test/val loss: 11.8009

Epoch 6, loss = 10.5924
Mean test/val loss: 15.6833

Epoch 8, loss = 9.9621
Mean test/val loss: 9.4051

Epoch 10, loss = 9.6067
Mean test/val loss: 10.2434

Epoch 12, loss = 9.0523
Mean test/val loss: 8.3788

Epoch 14, loss = 8.5277
Mean test/val loss: 7.9686

Epoch 16, loss = 7.8928
Mean test/val loss: 7.2236

Epoch 18, loss = 7.7683
Mean test/val loss: 7.6728

Epoch 20, loss = 6.9576
Mean test/val loss: 5.8002

Epoch 22, loss = 9.4555
Mean test/val loss: 6.7186

Epoch 24, loss = 5.8487
Mean test/val loss: 5.2950

Epoch 26, loss = 6.1043
Mean test/val loss: 10.0016

Epoch 28, loss = 6.2145
Mean test/val loss: 5.7327

Epoch 30, loss = 6.8693
Mean test/val loss: 5.5826

Epoch 32, loss = 6.3875
Mean test/val loss: 8.4468

Epoch 34, loss = 7.4046
Mean test/val loss: 4.9203

Epoch 36, loss = 5.4843
Mean test/val loss: 5.5918

Epoch 38, loss = 7.4335
Mean test/val loss: 7.2746

Epoch 40, loss = 5.5137
Mean test/val loss: 4.8405

Epoch 42, loss = 5.5419
Mean test/val loss: 4.7599

Epoch 44, loss = 5.5078
Mean test/val loss: 4.6119

Epoch 46, loss = 5.3253
Mean test/val loss: 7.1564

Epoch 48, loss = 5.5198
Mean test/val loss: 4.8347

Epoch 50, loss = 5.8613
Mean test/val loss: 5.3814

Epoch 52, loss = 5.1534
Mean test/val loss: 5.1383

Epoch 54, loss = 4.8552
Mean test/val loss: 4.8611

Epoch 56, loss = 4.4784
Mean test/val loss: 4.5355

Epoch 58, loss = 4.1688
Mean test/val loss: 3.9569

Epoch 60, loss = 3.9833
Mean test/val loss: 3.9432

Epoch 62, loss = 3.8888
Mean test/val loss: 3.7626

Epoch 64, loss = 3.8145
Mean test/val loss: 3.8988

Epoch 66, loss = 3.7317
Mean test/val loss: 3.7187

Epoch 68, loss = 3.6715
Mean test/val loss: 3.6797

Epoch 70, loss = 3.6372
Mean test/val loss: 3.6477

Epoch 72, loss = 3.6009
Mean test/val loss: 3.8512

Epoch 74, loss = 3.5651
Mean test/val loss: 3.8218

Epoch 76, loss = 3.4992
Mean test/val loss: 3.8265

Epoch 78, loss = 3.4783
Mean test/val loss: 3.5380

Epoch 80, loss = 3.4839
Mean test/val loss: 3.7345

Epoch 82, loss = 3.4564
