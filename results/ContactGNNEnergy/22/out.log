#### ARCHITECTURE ####
Sequential(
  (0): GCNConv(1, 16)
  (1): PReLU(num_parameters=1)
  (2): GCNConv(16, 16)
  (3): PReLU(num_parameters=1)
  (4): GCNConv(16, 4)
)
Sequential(
  (0): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=24, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (1): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (2): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=1, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
) 

Namespace(GNN_mode=True, act='prelu', autoencoder_mode=False, batch_size=4, bottleneck=None, channels=1, classes=10, criterion=<function mse_loss at 0x7fdfa0677040>, crop=None, cuda=True, data_folder='/scratch/midway2/erschultz/dataset_08_24_21', degree=True, delete_root=False, device=device(type='cuda'), dilation_list=None, dilation_list_head=None, dilation_list_trunk=None, down_sampling=None, gamma=0.1, gpus=1, head_act='prelu', head_architecture='concat-outer', head_hidden_sizes_list=[10, 10, 1], hidden_sizes_list=[16, 16, 4], id=22, ifile=None, ifile_folder=None, inner_act='prelu', k=2, kernel_w_list=None, log_file=<_io.TextIOWrapper name='results/ContactGNNEnergy/22/out.log' mode='a' encoding='UTF-8'>, loss='mse', lr=0.0001, m=1024, message_passing='GCN', milestones=None, min_subtraction=True, model_type='ContactGNNEnergy', n_epochs=60, nf=None, node_feature_size=1, num_workers=4, ofile_folder='results/ContactGNNEnergy/22', out_act='prelu', output_mode='energy', parameter_sharing=False, plot=True, plot_predictions=True, pre_transforms=['degree'], pre_transforms_processed=None, pretrained=False, print_mod=2, print_params=True, relabel_11_to_00=False, resume_training=False, root_name='ContactGNNEnergy', save_mod=5, seed=42, shuffle=True, sparsify_threshold=1.0, sparsify_threshold_upper=None, split=[0.8, 0.1, 0.1], split_neg_pos_edges=False, split_neg_pos_edges_for_feature_augmentation=False, start_epoch=1, top_k=None, toxx=False, toxx_mode='mean', training_norm=None, transforms=None, transforms_processed=None, use_bias=True, use_edge_weights=True, use_node_features=False, use_parallel=False, use_scratch=True, verbose=False, weighted_LDP=False, weighted_degree=False, x_reshape=True, y_log_transform=False, y_norm=None, y_preprocessing='diag', y_reshape=True, ydtype=torch.float32)

#### INITIAL PARAMETERS ####
act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

inner_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

out_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

head_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

model.nns.0.weight torch.Size([1, 16])
Parameter containing:
tensor([[ 0.4542,  0.4931, -0.1392,  0.5457, -0.1302,  0.1199, -0.2892,  0.3489,
          0.5237, -0.4358,  0.5164,  0.1112,  0.4389,  0.0805,  0.2865, -0.0839]],
       device='cuda:0', requires_grad=True) 

model.nns.0.bias torch.Size([16])
Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True) 

model.nns.2.weight torch.Size([16, 16])
Parameter containing:
tensor([[ 0.3338,  0.0640, -0.2021,  0.1104, -0.1995, -0.0508, -0.1759,  0.2872,
         -0.3418, -0.1996, -0.1223, -0.2604,  0.0409, -0.4277,  0.3911, -0.3678],
        [ 0.3343,  0.0721, -0.1406,  0.2676,  0.0675,  0.3499,  0.0473, -0.1366,
          0.1163, -0.1174,  0.1822,  0.3866,  0.2503, -0.1893,  0.2500,  0.0775],
        [ 0.2199, -0.2639, -0.4286, -0.1673, -0.3321,  0.3553,  0.1247,  0.1794,
          0.1369, -0.0075,  0.3389, -0.3077,  0.0273, -0.2955,  0.1335, -0.1491],
        [ 0.1327, -0.0902,  0.3591, -0.2566, -0.2582, -0.2583,  0.3895,  0.1443,
          0.4167, -0.3574, -0.4295, -0.3388, -0.2913,  0.1754,  0.1551,  0.3598],
        [-0.2236, -0.2952,  0.2297, -0.1750,  0.2628, -0.1028,  0.2477, -0.3364,
         -0.2185,  0.1320,  0.0915, -0.1104,  0.2581,  0.2944, -0.3140, -0.2312],
        [ 0.3965, -0.1461, -0.1535, -0.4190, -0.2480,  0.1082, -0.0572, -0.3143,
          0.0102, -0.2958, -0.3674, -0.2384, -0.3790, -0.2757,  0.4328,  0.0818],
        [ 0.1334, -0.4039, -0.2844, -0.1441,  0.0677, -0.3810, -0.1866, -0.2592,
          0.0012, -0.1611, -0.0300, -0.2934, -0.2972, -0.2526, -0.1482, -0.3418],
        [ 0.3631, -0.0859,  0.3726,  0.1349, -0.3667,  0.2997, -0.1191, -0.1660,
         -0.3594, -0.4305,  0.1239, -0.0946,  0.1686, -0.3554,  0.3215, -0.3179],
        [-0.0748,  0.0904,  0.2235,  0.3496,  0.3945, -0.3433,  0.1090, -0.1863,
         -0.0475, -0.3241,  0.3944, -0.3178,  0.2314,  0.1522,  0.1407, -0.2341],
        [ 0.3936,  0.0952,  0.0557, -0.3816,  0.1818, -0.0650, -0.1984,  0.3719,
          0.0965, -0.2396, -0.2192, -0.0207,  0.2418, -0.1106, -0.2471, -0.1483],
        [-0.3235,  0.1544,  0.3352, -0.4077,  0.1006,  0.2237,  0.0785, -0.1542,
          0.2260,  0.2276,  0.1619, -0.0761, -0.1147,  0.0463, -0.0765, -0.1290],
        [ 0.2768,  0.3721, -0.0429, -0.0970,  0.0063, -0.0259,  0.1041,  0.1213,
         -0.3933, -0.1598,  0.3647,  0.1687, -0.0215, -0.2611, -0.2649, -0.3879],
        [-0.1411,  0.1462,  0.2761,  0.1999, -0.3828, -0.2604, -0.0683,  0.4189,
          0.0626, -0.1121,  0.1791, -0.1649, -0.2803,  0.3161, -0.1969, -0.0868],
        [-0.4308,  0.2898,  0.3281,  0.1578, -0.3019, -0.4274, -0.3517,  0.3229,
          0.2079,  0.3644,  0.2268,  0.1096, -0.0042, -0.3293, -0.3710, -0.4050],
        [ 0.1773, -0.2126, -0.0871, -0.2492, -0.0789, -0.3048, -0.2829,  0.1436,
         -0.1287,  0.2673, -0.1389, -0.3176, -0.0764, -0.2099, -0.1325, -0.4122],
        [ 0.2423, -0.3015,  0.2176,  0.1965,  0.3094, -0.3321,  0.3114, -0.2047,
          0.1607,  0.4066, -0.0611, -0.0033, -0.0997, -0.3616,  0.2078, -0.4299]],
       device='cuda:0', requires_grad=True) 

model.nns.2.bias torch.Size([16])
Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
       device='cuda:0', requires_grad=True) 

model.nns.4.weight torch.Size([16, 4])
Parameter containing:
tensor([[ 0.3400,  0.4098,  0.5180, -0.1292],
        [-0.4500,  0.1231,  0.3026, -0.5452],
        [-0.1243, -0.3283, -0.0479, -0.2696],
        [-0.2239, -0.1739, -0.5205,  0.4494],
        [ 0.4592, -0.0859, -0.0624, -0.2235],
        [-0.4946, -0.5330,  0.2036, -0.3007],
        [-0.3521, -0.0427, -0.1824, -0.1772],
        [ 0.0176, -0.1162, -0.1886, -0.2623],
        [-0.4458,  0.4593, -0.2192,  0.1451],
        [-0.1900,  0.0445,  0.5106,  0.2523],
        [-0.4747,  0.2174,  0.5199,  0.1441],
        [ 0.3672,  0.5400, -0.0839,  0.1137],
        [-0.3807, -0.1129,  0.4056,  0.2808],
        [-0.3466, -0.4392, -0.3743, -0.5405],
        [-0.4226, -0.1355,  0.3696,  0.0917],
        [-0.4166, -0.4394,  0.2725, -0.4074]], device='cuda:0',
       requires_grad=True) 

model.nns.4.bias torch.Size([4])
Parameter containing:
tensor([0., 0., 0., 0.], device='cuda:0', requires_grad=True) 

head.0.model.0.weight torch.Size([10, 24])
Parameter containing:
tensor([[-0.0251,  0.0979, -0.0945, -0.0223, -0.0178, -0.0483, -0.1035, -0.1820,
         -0.1650, -0.1093,  0.1972, -0.0986, -0.1371,  0.0495,  0.0563,  0.1118,
          0.1552,  0.1137, -0.2024,  0.0181,  0.1236, -0.0189, -0.1203,  0.1946],
        [-0.0763, -0.1162, -0.1840,  0.0091,  0.0905,  0.0452,  0.0404, -0.1548,
         -0.1906,  0.0036,  0.1861,  0.1178, -0.1188, -0.0265, -0.1505, -0.0985,
          0.0370,  0.1112,  0.1691, -0.1874,  0.1365, -0.1440,  0.0764,  0.1727],
        [ 0.0029,  0.1857, -0.1739, -0.0780,  0.1191, -0.0445, -0.0418, -0.0851,
          0.1407,  0.1001,  0.0654, -0.1147, -0.1657,  0.0221,  0.0605, -0.0942,
         -0.0571,  0.1379,  0.0163,  0.0092, -0.0502, -0.1849, -0.1919, -0.0976],
        [-0.1038,  0.0636, -0.0594, -0.0799,  0.1946,  0.0711,  0.1455, -0.0988,
         -0.0834,  0.0750, -0.1360, -0.1334, -0.0099, -0.0747, -0.1530,  0.1211,
          0.1641,  0.0331, -0.0355, -0.1891, -0.0743,  0.0520,  0.0963, -0.0258],
        [-0.0807,  0.1137, -0.1626,  0.1290, -0.0792,  0.0031, -0.0403,  0.0247,
         -0.0617,  0.1484, -0.0053,  0.1593,  0.1963, -0.0994, -0.1489,  0.1638,
          0.1600, -0.1559, -0.0158, -0.2013, -0.1671,  0.0394,  0.0543,  0.0433],
        [-0.0556,  0.1883,  0.0292, -0.1205, -0.0116,  0.0490,  0.0715, -0.1443,
          0.0765, -0.1043, -0.1696, -0.1115,  0.1969,  0.1745,  0.1828,  0.1198,
          0.1542, -0.0273, -0.1123,  0.1020, -0.1058, -0.1378, -0.0652,  0.0428],
        [ 0.1051, -0.0793, -0.1201,  0.0275, -0.1203, -0.1329,  0.1064, -0.0343,
          0.1865,  0.1986,  0.0611,  0.0703,  0.0470,  0.0032, -0.0148,  0.0028,
          0.0762,  0.1898, -0.0529, -0.0863, -0.0494, -0.0986,  0.0347,  0.1524],
        [ 0.1596,  0.0937, -0.1502, -0.1096, -0.0448, -0.0376,  0.0168, -0.1874,
          0.0635, -0.1557, -0.1292, -0.1697,  0.1779, -0.1933,  0.1540, -0.0069,
         -0.0237,  0.1277, -0.0189,  0.1280,  0.1476, -0.1772,  0.0785,  0.0385],
        [ 0.0439,  0.0298,  0.0558, -0.0982, -0.0261,  0.1939,  0.1371, -0.0077,
         -0.1920,  0.0089, -0.1390,  0.1660, -0.1239, -0.0147, -0.0453,  0.0363,
          0.1921,  0.0194,  0.1182,  0.1584,  0.1648, -0.0705, -0.0457,  0.0984],
        [-0.0557,  0.0956, -0.0446, -0.1384,  0.0831,  0.0313,  0.0910,  0.2028,
          0.1394,  0.1935,  0.0109, -0.1756, -0.1432, -0.1268, -0.1799, -0.1023,
         -0.1879, -0.1883, -0.1220, -0.2012, -0.1253,  0.0778,  0.1703, -0.0607]],
       device='cuda:0', requires_grad=True) 

head.0.model.0.bias torch.Size([10])
Parameter containing:
tensor([-0.0594,  0.1090, -0.1007, -0.0965,  0.1258, -0.1779,  0.0250,  0.1803,
         0.0350,  0.0555], device='cuda:0', requires_grad=True) 

head.1.model.0.weight torch.Size([10, 10])
Parameter containing:
tensor([[-0.1842, -0.0044,  0.0174,  0.0776,  0.1229,  0.2748, -0.2414,  0.0095,
         -0.1580, -0.2502],
        [-0.0253, -0.2784,  0.2207,  0.0366, -0.1704,  0.1653, -0.2993, -0.1223,
         -0.0616, -0.2687],
        [-0.2011, -0.0516,  0.2399,  0.3054,  0.2012, -0.1888, -0.2069,  0.2760,
          0.1119,  0.0084],
        [ 0.0428, -0.2542, -0.1056,  0.3044, -0.0780, -0.0159, -0.2626, -0.1769,
         -0.0065, -0.1964],
        [-0.0392,  0.1287, -0.3093,  0.0939, -0.2091, -0.1543,  0.1214,  0.2514,
         -0.0864, -0.1298],
        [-0.2859, -0.1631, -0.2769, -0.0724,  0.0645, -0.2963,  0.2761,  0.1984,
         -0.3096, -0.1510],
        [ 0.1031, -0.0650, -0.0345, -0.1428,  0.2540, -0.1768,  0.2622,  0.0204,
          0.0636,  0.2467],
        [-0.0521, -0.1800, -0.0511,  0.2565, -0.2346,  0.0718, -0.3108,  0.1658,
          0.1168,  0.0134],
        [ 0.1357,  0.0004,  0.1750, -0.2503, -0.0464,  0.1403,  0.3149,  0.1611,
         -0.2300,  0.2432],
        [-0.0705, -0.0675, -0.2874, -0.0498,  0.2237,  0.0441, -0.1842,  0.0973,
         -0.1014,  0.2887]], device='cuda:0', requires_grad=True) 

head.1.model.0.bias torch.Size([10])
Parameter containing:
tensor([-0.2745, -0.0999, -0.3053, -0.1245,  0.0997,  0.3044,  0.0531,  0.3100,
         0.0619,  0.1826], device='cuda:0', requires_grad=True) 

head.2.model.0.weight torch.Size([1, 10])
Parameter containing:
tensor([[ 0.2535,  0.2643, -0.1770,  0.2907,  0.1916, -0.1479, -0.1509, -0.2652,
          0.0794, -0.2563]], device='cuda:0', requires_grad=True) 

head.2.model.0.bias torch.Size([1])
Parameter containing:
tensor([0.1336], device='cuda:0', requires_grad=True) 



#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.9019
Mean test/val loss: 0.8930

Epoch 4, loss = 0.8962
Mean test/val loss: 0.8891

Epoch 6, loss = 0.8921
Mean test/val loss: 0.8854

Epoch 8, loss = 0.8778
Mean test/val loss: 0.8679

Epoch 10, loss = 0.8541
Mean test/val loss: 0.8491

Epoch 12, loss = 0.8388
Mean test/val loss: 0.8391

Epoch 14, loss = 0.8321
Mean test/val loss: 0.8331

Epoch 16, loss = 0.8251
Mean test/val loss: 0.8266

Epoch 18, loss = 0.8174
Mean test/val loss: 0.8195

Epoch 20, loss = 0.8088
Mean test/val loss: 0.8127

Epoch 22, loss = 0.8003
Mean test/val loss: 0.8050

Epoch 24, loss = 0.7925
Mean test/val loss: 0.7996

Epoch 26, loss = 0.7859
Mean test/val loss: 0.7989

Epoch 28, loss = 0.7805
Mean test/val loss: 0.7897

Epoch 30, loss = 0.7781
Mean test/val loss: 0.7886

Epoch 32, loss = 0.7773
Mean test/val loss: 0.7867

Epoch 34, loss = 0.7760
Mean test/val loss: 0.7898

Epoch 36, loss = 0.7761
Mean test/val loss: 0.7890

Epoch 38, loss = 0.7751
Mean test/val loss: 0.7855

Epoch 40, loss = 0.7743
Mean test/val loss: 0.7849

Epoch 42, loss = 0.7744
Mean test/val loss: 0.7836

Epoch 44, loss = 0.7739
Mean test/val loss: 0.7831

Epoch 46, loss = 0.7736
Mean test/val loss: 0.7833

Epoch 48, loss = 0.7725
Mean test/val loss: 0.7843

Epoch 50, loss = 0.7719
Mean test/val loss: 0.7825

Epoch 52, loss = 0.7716
Mean test/val loss: 0.7822

Epoch 54, loss = 0.7716
Mean test/val loss: 0.7823

Epoch 56, loss = 0.7711
Mean test/val loss: 0.7809

Epoch 58, loss = 0.7703
Mean test/val loss: 0.7809

Epoch 60, loss = 0.7703
Mean test/val loss: 0.7803

#### FINAL PARAMETERS ####
act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.3852], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.5298], device='cuda:0') 

inner_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.4162], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.6110], device='cuda:0') 

out_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.9205], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0071], device='cuda:0') 

head_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.0734], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0407], device='cuda:0') 

model.nns.0.weight 16 torch.Size([1, 16])
Parameter containing:
tensor([[ 0.5758,  0.6135,  0.0162,  0.6474, -0.2559,  0.2481, -0.4370,  0.4814,
          0.6462, -0.5548,  0.6572,  0.2185,  0.5097, -0.0613,  0.2114, -0.2367]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.1118, -0.1683, -0.1307, -0.0336,  0.0504, -0.0949,  0.0651, -0.1609,
         -0.0918,  0.0288, -0.0902, -0.1172, -0.0299,  0.0329, -0.0189,  0.0470]],
       device='cuda:0') 

model.nns.0.bias 16 torch.Size([16])
Parameter containing:
tensor([ 0.1299,  0.1324,  0.1719,  0.1014, -0.1383,  0.1403, -0.1555,  0.1420,
         0.1284, -0.1261,  0.1474,  0.1194,  0.0682, -0.1450, -0.0495, -0.1601],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.1573, -0.2366, -0.1837, -0.0475,  0.0710, -0.1336,  0.0916, -0.2263,
        -0.1290,  0.0404, -0.1269, -0.1650, -0.0422,  0.0463, -0.0268,  0.0662],
       device='cuda:0') 

model.nns.2.weight 256 torch.Size([16, 16])
Parameter containing:
tensor([[ 4.3215e-01,  1.7942e-01, -3.3348e-02,  5.5944e-03, -2.9189e-01,
          1.0234e-01, -2.3636e-01,  5.0283e-01, -5.0064e-01, -8.7554e-02,
         -3.8225e-03, -4.3220e-01,  1.8900e-01, -3.5647e-01,  5.3077e-01,
         -2.0749e-01],
        [ 4.3239e-01,  1.8716e-01,  2.8034e-02,  1.6314e-01, -2.4841e-02,
          5.0276e-01, -1.2875e-02,  7.8833e-02, -4.2285e-02, -5.5100e-03,
          3.0046e-01,  2.1491e-01,  3.9830e-01, -1.1885e-01,  3.8952e-01,
          2.3729e-01],
        [ 2.6838e-01, -1.7072e-01, -2.6090e-01, -2.5648e-01, -5.4429e-01,
          4.9640e-01,  7.3306e-02,  3.7182e-01, -2.5499e-02,  6.7246e-02,
          4.3762e-01, -4.7943e-01,  1.4898e-01, -1.4803e-01,  2.5086e-01,
          3.4384e-02],
        [ 2.2658e-01,  2.0519e-02,  5.2449e-01, -3.5642e-01, -3.4624e-01,
         -1.0892e-01,  3.2711e-01,  3.5971e-01,  2.6190e-01, -2.4974e-01,
         -3.1540e-01, -5.0700e-01, -1.4682e-01,  2.3735e-01,  2.9064e-01,
          5.1338e-01],
        [-3.3082e-01, -4.1999e-01,  4.9244e-02, -5.9820e-02,  3.6268e-01,
         -2.6631e-01,  3.0653e-01, -5.5512e-01, -4.5978e-02,  1.0440e-02,
         -3.5834e-02,  7.2749e-02,  1.0084e-01,  2.0796e-01, -4.6373e-01,
         -4.0517e-01],
        [ 5.0214e-01, -2.3454e-02,  2.2832e-02, -5.3213e-01, -3.4527e-01,
          2.6866e-01, -1.1908e-01, -1.0096e-01, -1.5870e-01, -1.7608e-01,
         -2.4201e-01, -4.1786e-01, -2.2407e-01, -1.9364e-01,  5.7991e-01,
          2.5235e-01],
        [ 3.0358e-02, -5.2439e-01, -4.6040e-01, -3.3950e-02,  1.6468e-01,
         -5.4037e-01, -1.2739e-01, -4.7783e-01,  1.6799e-01, -2.7844e-01,
         -1.5343e-01, -1.1468e-01, -4.5068e-01, -3.3165e-01, -2.9367e-01,
         -5.0967e-01],
        [ 4.6301e-01,  3.0884e-02,  5.4267e-01,  2.8429e-02, -4.5999e-01,
          4.5414e-01, -1.8038e-01,  4.8164e-02, -5.2026e-01, -3.1674e-01,
          2.4374e-01, -2.6779e-01,  3.1809e-01, -2.8276e-01,  4.6265e-01,
         -1.5568e-01],
        [ 2.2943e-02,  2.0522e-01,  3.9201e-01,  2.4563e-01,  3.0216e-01,
         -1.9068e-01,  4.9149e-02,  2.9851e-02, -2.0560e-01, -2.1258e-01,
          5.1234e-01, -4.8929e-01,  3.7917e-01,  2.2224e-01,  2.7997e-01,
         -7.4694e-02],
        [ 2.9446e-01, -2.1699e-02, -1.1866e-01, -2.7619e-01,  2.7758e-01,
         -2.2229e-01, -1.4009e-01,  1.5167e-01,  2.5986e-01, -3.5340e-01,
         -3.3947e-01,  1.5637e-01,  9.0297e-02, -1.8268e-01, -3.8979e-01,
         -3.1179e-01],
        [-2.2541e-01,  2.6945e-01,  5.0349e-01, -5.1204e-01,  8.5845e-03,
          3.7641e-01,  1.8046e-02,  6.0726e-02,  6.7543e-02,  3.3939e-01,
          2.8004e-01, -2.4748e-01,  3.3172e-02,  1.1715e-01,  6.2886e-02,
          3.0669e-02],
        [ 3.8191e-01,  4.9431e-01,  1.3219e-01, -2.0961e-01, -8.9925e-02,
          1.3340e-01,  4.3225e-02,  3.3595e-01, -5.6057e-01, -4.1161e-02,
          4.8921e-01, -9.2179e-03,  1.3210e-01, -1.7831e-01, -1.1895e-01,
         -2.1817e-01],
        [-4.7592e-02,  2.5730e-01,  4.4181e-01,  1.0044e-01, -4.7224e-01,
         -1.1088e-01, -1.2715e-01,  6.3917e-01, -9.1455e-02, -5.1366e-03,
          2.9336e-01, -3.3326e-01, -1.3576e-01,  3.8174e-01, -6.1261e-02,
          6.7966e-02],
        [-4.5978e-01,  2.3408e-01,  2.0741e-01,  2.1037e-01, -1.6212e-01,
         -5.2950e-01, -3.1853e-01,  1.6600e-01,  3.1959e-01,  3.1614e-01,
          1.5860e-01,  2.3611e-01, -9.8781e-02, -3.9084e-01, -4.5179e-01,
         -5.3104e-01],
        [ 2.5920e-01, -1.0378e-01,  8.5137e-02, -3.4116e-01, -1.7227e-01,
         -1.5420e-01, -3.3402e-01,  4.3071e-01, -2.7765e-01,  3.5947e-01,
         -2.9693e-02, -4.8999e-01,  6.4526e-02, -1.4662e-01, -2.9627e-04,
         -2.6112e-01],
        [ 1.3286e-01, -4.2848e-01,  3.4920e-02,  3.1412e-01,  4.1005e-01,
         -4.9796e-01,  3.7031e-01, -4.2268e-01,  3.3644e-01,  2.8267e-01,
         -1.9059e-01,  1.8208e-01, -2.5895e-01, -4.5408e-01,  5.5833e-02,
         -6.0717e-01]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0435, -0.0537, -0.0135,  0.0183,  0.0131, -0.0467,  0.0042,  0.0028,
          0.0063, -0.0118, -0.0712,  0.0126, -0.0575,  0.0266, -0.0571, -0.0443],
        [-0.0459, -0.0567, -0.0142,  0.0193,  0.0138, -0.0493,  0.0044,  0.0030,
          0.0066, -0.0125, -0.0750,  0.0132, -0.0607,  0.0281, -0.0602, -0.0467],
        [-0.0148, -0.0183, -0.0046,  0.0062,  0.0044, -0.0159,  0.0014,  0.0009,
          0.0021, -0.0040, -0.0242,  0.0043, -0.0195,  0.0090, -0.0194, -0.0151],
        [-0.0453, -0.0560, -0.0140,  0.0191,  0.0136, -0.0487,  0.0044,  0.0029,
          0.0065, -0.0123, -0.0742,  0.0131, -0.0600,  0.0277, -0.0595, -0.0461],
        [ 0.0100,  0.0123,  0.0031, -0.0042, -0.0030,  0.0107, -0.0010, -0.0006,
         -0.0014,  0.0027,  0.0163, -0.0029,  0.0132, -0.0061,  0.0131,  0.0101],
        [-0.0256, -0.0316, -0.0079,  0.0108,  0.0077, -0.0274,  0.0025,  0.0016,
          0.0037, -0.0069, -0.0418,  0.0074, -0.0338,  0.0156, -0.0335, -0.0260],
        [ 0.0145,  0.0179,  0.0045, -0.0061, -0.0044,  0.0156, -0.0014, -0.0009,
         -0.0021,  0.0039,  0.0237, -0.0042,  0.0192, -0.0089,  0.0190,  0.0147],
        [-0.0391, -0.0483, -0.0121,  0.0165,  0.0118, -0.0420,  0.0038,  0.0025,
          0.0056, -0.0106, -0.0639,  0.0113, -0.0517,  0.0239, -0.0513, -0.0398],
        [-0.0474, -0.0586, -0.0147,  0.0200,  0.0143, -0.0509,  0.0046,  0.0031,
          0.0068, -0.0129, -0.0776,  0.0137, -0.0627,  0.0290, -0.0623, -0.0483],
        [ 0.0162,  0.0200,  0.0050, -0.0068, -0.0049,  0.0174, -0.0016, -0.0010,
         -0.0023,  0.0044,  0.0265, -0.0047,  0.0214, -0.0099,  0.0212,  0.0165],
        [-0.0496, -0.0613, -0.0154,  0.0209,  0.0149, -0.0532,  0.0048,  0.0032,
          0.0072, -0.0135, -0.0811,  0.0143, -0.0656,  0.0304, -0.0651, -0.0505],
        [-0.0222, -0.0274, -0.0069,  0.0093,  0.0067, -0.0238,  0.0021,  0.0014,
          0.0032, -0.0060, -0.0363,  0.0064, -0.0293,  0.0136, -0.0291, -0.0226],
        [-0.0347, -0.0429, -0.0108,  0.0146,  0.0105, -0.0373,  0.0033,  0.0023,
          0.0050, -0.0094, -0.0568,  0.0100, -0.0460,  0.0213, -0.0456, -0.0354],
        [ 0.0059,  0.0072,  0.0018, -0.0025, -0.0018,  0.0063, -0.0006, -0.0004,
         -0.0008,  0.0016,  0.0096, -0.0017,  0.0077, -0.0036,  0.0077,  0.0060],
        [-0.0081, -0.0100, -0.0025,  0.0034,  0.0025, -0.0087,  0.0008,  0.0005,
          0.0012, -0.0022, -0.0133,  0.0023, -0.0108,  0.0050, -0.0107, -0.0083],
        [ 0.0102,  0.0126,  0.0032, -0.0043, -0.0031,  0.0110, -0.0010, -0.0007,
         -0.0015,  0.0028,  0.0167, -0.0029,  0.0135, -0.0062,  0.0134,  0.0104]],
       device='cuda:0') 

model.nns.2.bias 16 torch.Size([16])
Parameter containing:
tensor([ 0.0326,  0.0394,  0.0679, -0.0345, -0.0037,  0.0636, -0.0078,  0.1319,
        -0.0749,  0.0442,  0.0420, -0.0730,  0.0658,  0.1695,  0.0575,  0.0841],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0781, -0.0963, -0.0242,  0.0329,  0.0234, -0.0836,  0.0075,  0.0050,
         0.0113, -0.0211, -0.1273,  0.0225, -0.1029,  0.0477, -0.1022, -0.0793],
       device='cuda:0') 

model.nns.4.weight 64 torch.Size([16, 4])
Parameter containing:
tensor([[ 0.2374,  0.0876,  0.6379, -0.2362],
        [-0.5512, -0.2015,  0.4205, -0.6506],
        [-0.2213, -0.6497,  0.0651, -0.3689],
        [-0.1032,  0.1567, -0.6245,  0.5421],
        [ 0.5688,  0.2666, -0.1846, -0.1181],
        [-0.6314, -0.8548,  0.3045, -0.3921],
        [-0.2436,  0.1195, -0.2411, -0.0884],
        [-0.0767, -0.4443, -0.0764, -0.3639],
        [-0.3187,  0.8006, -0.3326,  0.2450],
        [-0.0610,  0.3601,  0.3656,  0.3769],
        [-0.5799, -0.1121,  0.6417,  0.0359],
        [ 0.4688,  0.8752, -0.2020,  0.2170],
        [-0.5156, -0.4346,  0.5025,  0.1927],
        [-0.2689, -0.5195, -0.4572, -0.4590],
        [-0.5244, -0.4596,  0.4888, -0.0131],
        [-0.5590, -0.7589,  0.3038, -0.4496]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[ 6.6243e-02,  8.2512e-05, -1.5594e-01,  3.6687e-03],
        [ 5.9339e-02,  7.0466e-05, -1.3964e-01,  3.2627e-03],
        [ 9.0818e-02,  1.0277e-04, -2.1363e-01,  4.9562e-03],
        [-1.3250e-02, -1.6817e-05,  3.1202e-02, -7.3846e-04],
        [-2.5165e-02, -3.1327e-05,  5.9233e-02, -1.3900e-03],
        [ 6.9829e-02,  9.0942e-05, -1.6447e-01,  3.9078e-03],
        [-2.8532e-03, -3.0611e-06,  6.7095e-03, -1.5467e-04],
        [ 8.4454e-02,  9.9608e-05, -1.9879e-01,  4.6629e-03],
        [-2.3582e-02, -2.8869e-05,  5.5520e-02, -1.3077e-03],
        [-4.3270e-03, -6.0550e-06,  1.0183e-02, -2.3862e-04],
        [ 6.3025e-02,  7.7511e-05, -1.4836e-01,  3.4863e-03],
        [-3.6785e-02, -4.3792e-05,  8.6568e-02, -2.0246e-03],
        [ 4.6607e-02,  5.6300e-05, -1.0972e-01,  2.5814e-03],
        [ 1.7142e-02,  1.7918e-05, -4.0420e-02,  9.7488e-04],
        [ 9.7201e-02,  1.1871e-04, -2.2879e-01,  5.3678e-03],
        [ 4.0455e-02,  5.0555e-05, -9.5287e-02,  2.2626e-03]], device='cuda:0') 

model.nns.4.bias 4 torch.Size([4])
Parameter containing:
tensor([0.0709, 0.0724, 0.0024, 0.1140], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0560, -0.0002, -0.1307,  0.0024], device='cuda:0') 

head.0.model.0.weight 240 torch.Size([10, 24])
Parameter containing:
tensor([[ 3.7866e-02,  1.7130e-01, -1.4627e-01,  3.5636e-02,  6.2647e-02,
          4.2379e-02, -1.7275e-01, -1.0657e-01, -6.8343e-02, -1.2665e-02,
          1.0567e-01, -3.6856e-03, -4.0086e-02,  1.4340e-01, -3.5940e-02,
          2.0656e-01,  6.3663e-02,  2.1817e-02, -1.1783e-01, -7.0271e-02,
          2.1845e-01,  7.5384e-02, -2.0854e-01,  2.8673e-01],
        [-2.1727e-01, -2.7042e-01, -5.7402e-02, -1.2931e-01, -6.4478e-03,
         -6.4259e-02,  1.2526e-01, -2.4918e-01, -1.6868e-01,  3.2818e-02,
          1.6352e-01,  1.4184e-01, -8.8287e-02,  1.1743e-02, -1.7981e-01,
         -6.6318e-02,  1.3956e-02,  8.2698e-02,  1.9348e-01, -2.1228e-01,
          1.6043e-01, -1.1325e-01,  5.2121e-02,  1.9819e-01],
        [ 1.4856e-01,  3.4696e-01, -3.0328e-01,  6.3279e-02,  3.1404e-01,
          1.6638e-01, -2.2062e-01,  1.0601e-01,  2.1714e-01,  1.6754e-01,
         -1.6182e-02, -3.8300e-02, -9.7092e-02,  7.9106e-02, -1.3309e-02,
         -2.6583e-02, -1.3805e-01,  6.5942e-02,  1.0140e-01, -7.1388e-02,
          2.5816e-02, -1.1873e-01, -2.7284e-01, -2.1788e-02],
        [ 6.0322e-02,  2.3795e-01, -2.1121e-01,  8.2603e-02,  2.8569e-01,
          1.7069e-01,  6.3981e-02, -1.0422e-02, -1.1074e-01,  4.1496e-02,
         -1.0971e-01, -1.6320e-01, -4.5479e-02, -1.1627e-01, -1.1989e-01,
          8.3533e-02,  1.9043e-01,  6.4199e-02, -6.1514e-02, -1.6070e-01,
         -1.0372e-01,  1.6900e-02,  1.2422e-01, -5.7043e-02],
        [ 6.8842e-02,  2.8322e-01, -3.0046e-01,  2.7687e-01,  4.2216e-02,
          1.4427e-01, -1.5141e-01,  1.4444e-01, -6.6886e-02,  1.3144e-01,
          3.3863e-04,  1.5126e-01,  1.7827e-01, -1.2875e-01, -1.3237e-01,
          1.4361e-01,  1.6585e-01, -1.4007e-01, -2.1963e-02, -1.9339e-01,
         -1.7525e-01,  2.0205e-02,  6.2026e-02,  3.3262e-02],
        [-2.2094e-01,  6.8539e-03,  1.8802e-01, -2.8811e-01, -1.7240e-01,
         -1.2788e-01,  2.2653e-01, -3.0791e-01,  5.7844e-02, -1.1234e-01,
         -1.5299e-01, -1.2508e-01,  1.8931e-01,  1.7740e-01,  1.8986e-01,
          1.1675e-01,  1.7066e-01, -1.9957e-02, -1.2710e-01,  1.1424e-01,
         -1.1914e-01, -1.4110e-01, -5.2971e-02,  3.3776e-02],
        [-4.4484e-02, -2.4060e-01,  1.6406e-02, -1.1941e-01, -1.9260e-01,
         -2.1565e-01,  1.6810e-01, -1.0324e-01,  2.0232e-01,  2.2192e-01,
          4.6356e-02,  8.7947e-02,  7.2503e-02,  3.6513e-02, -3.7617e-02,
          2.9725e-02,  6.1575e-02,  1.6917e-01, -3.8573e-02, -1.0253e-01,
         -3.2126e-02, -7.4216e-02,  1.8830e-02,  1.7095e-01],
        [ 7.6982e-02,  1.1304e-04, -8.6055e-02, -1.8478e-01, -7.8626e-02,
         -8.1433e-02,  3.4182e-02, -2.1366e-01, -1.4305e-02, -2.2996e-01,
         -4.6972e-02, -2.4816e-01,  1.0495e-01, -2.6041e-01,  2.3211e-01,
         -7.9950e-02,  5.8286e-02,  2.0695e-01, -1.0169e-01,  2.0877e-01,
          6.8961e-02, -2.5181e-01,  1.5964e-01, -3.9665e-02],
        [ 1.8987e-01,  1.9066e-01, -8.6541e-02,  5.0657e-02,  9.1452e-02,
          3.2621e-01,  2.2679e-02,  1.1259e-01, -1.3360e-01,  5.6929e-02,
         -1.9389e-01,  2.1847e-01, -7.6777e-02,  2.1469e-02, -9.0381e-02,
          7.8230e-02,  1.3702e-01, -2.6678e-02,  1.6999e-01,  1.0869e-01,
          2.1724e-01, -2.7790e-02, -9.5214e-02,  1.4556e-01],
        [ 9.3518e-02,  2.7185e-01, -1.7983e-01,  6.7597e-03,  2.4862e-01,
          2.2285e-01, -6.1914e-02,  3.6488e-01,  1.6572e-01,  2.0660e-01,
         -1.2071e-02, -1.5247e-01, -1.2984e-01, -1.2698e-01, -1.9244e-01,
         -9.1175e-02, -2.1061e-01, -2.0028e-01, -1.0437e-01, -2.2010e-01,
         -1.0216e-01,  8.8699e-02,  1.5105e-01, -4.0817e-02]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[ 1.0508e-03,  1.4263e-03, -2.3847e-03,  7.5495e-04,  1.0351e-03,
          1.4051e-03, -2.3495e-03,  7.4345e-04, -2.0445e-03, -2.7764e-03,
          4.6422e-03, -1.4669e-03, -2.7766e-03, -3.7707e-03,  6.3046e-03,
         -1.9923e-03,  4.6433e-03,  6.3056e-03, -1.0543e-02,  3.3316e-03,
         -1.4665e-03, -1.9916e-03,  3.3300e-03, -1.0522e-03],
        [-1.8627e-02, -2.5326e-02,  4.2440e-02, -1.3322e-02, -1.8883e-02,
         -2.5672e-02,  4.3012e-02, -1.3508e-02,  3.2279e-02,  4.3871e-02,
         -7.3523e-02,  2.3106e-02,  4.3869e-02,  5.9624e-02, -9.9923e-02,
          3.1402e-02, -7.3509e-02, -9.9910e-02,  1.6744e-01, -5.2619e-02,
          2.3112e-02,  3.1412e-02, -5.2643e-02,  1.6544e-02],
        [ 1.2691e-01,  1.7242e-01, -2.8872e-01,  9.0927e-02,  1.2629e-01,
          1.7159e-01, -2.8730e-01,  9.0479e-02, -2.2922e-01, -3.1143e-01,
          5.2147e-01, -1.6424e-01, -3.1144e-01, -4.2313e-01,  7.0851e-01,
         -2.2315e-01,  5.2145e-01,  7.0845e-01, -1.1863e+00,  3.7362e-01,
         -1.6423e-01, -2.2312e-01,  3.7362e-01, -1.1767e-01],
        [ 3.0593e-04,  4.1584e-04, -6.9669e-04,  2.1891e-04,  3.0941e-04,
          4.2054e-04, -7.0452e-04,  2.2145e-04, -5.3824e-04, -7.3144e-04,
          1.2255e-03, -3.8538e-04, -7.3140e-04, -9.9394e-04,  1.6653e-03,
         -5.2367e-04,  1.2254e-03,  1.6653e-03, -2.7901e-03,  8.7737e-04,
         -3.8546e-04, -5.2381e-04,  8.7765e-04, -2.7599e-04],
        [ 3.7151e-03,  5.0491e-03, -8.4560e-03,  2.6599e-03,  3.7359e-03,
          5.0771e-03, -8.5026e-03,  2.6751e-03, -6.6199e-03, -8.9954e-03,
          1.5066e-02, -4.7415e-03, -8.9951e-03, -1.2223e-02,  2.0471e-02,
         -6.4428e-03,  1.5065e-02,  2.0470e-02, -3.4284e-02,  1.0790e-02,
         -4.7420e-03, -6.4437e-03,  1.0792e-02, -3.3965e-03],
        [-5.8859e-02, -7.9978e-02,  1.3391e-01, -4.2163e-02, -5.9039e-02,
         -8.0221e-02,  1.3431e-01, -4.2294e-02,  1.0639e-01,  1.4456e-01,
         -2.4204e-01,  7.6225e-02,  1.4455e-01,  1.9641e-01, -3.2886e-01,
          1.0357e-01, -2.4203e-01, -3.2885e-01,  5.5062e-01, -1.7341e-01,
          7.6230e-02,  1.0357e-01, -1.7342e-01,  5.4616e-02],
        [-1.2000e-02, -1.6308e-02,  2.7314e-02, -8.5906e-03, -1.2067e-02,
         -1.6399e-02,  2.7467e-02, -8.6398e-03,  2.1277e-02,  2.8912e-02,
         -4.8427e-02,  1.5237e-02,  2.8911e-02,  3.9285e-02, -6.5802e-02,
          2.0704e-02, -4.8426e-02, -6.5802e-02,  1.1022e-01, -3.4680e-02,
          1.5239e-02,  2.0707e-02, -3.4684e-02,  1.0913e-02],
        [-1.4697e-03, -1.9977e-03,  3.3465e-03, -1.0518e-03, -1.4828e-03,
         -2.0154e-03,  3.3758e-03, -1.0613e-03,  2.5911e-03,  3.5212e-03,
         -5.8989e-03,  1.8554e-03,  3.5211e-03,  4.7849e-03, -8.0159e-03,
          2.5213e-03, -5.8983e-03, -8.0155e-03,  1.3428e-02, -4.2236e-03,
          1.8558e-03,  2.5219e-03, -4.2247e-03,  1.3289e-03],
        [ 2.0582e-02,  2.7959e-02, -4.6797e-02,  1.4754e-02,  2.0544e-02,
          2.7908e-02, -4.6714e-02,  1.4726e-02, -3.7849e-02, -5.1419e-02,
          8.6064e-02, -2.7127e-02, -5.1419e-02, -6.9854e-02,  1.1692e-01,
         -3.6853e-02,  8.6068e-02,  1.1693e-01, -1.9571e-01,  6.1686e-02,
         -2.7126e-02, -3.6851e-02,  6.1681e-02, -1.9441e-02],
        [ 1.2461e-01,  1.6931e-01, -2.8348e-01,  8.9278e-02,  1.2495e-01,
          1.6976e-01, -2.8426e-01,  8.9523e-02, -2.2602e-01, -3.0709e-01,
          5.1418e-01, -1.6194e-01, -3.0708e-01, -4.1722e-01,  6.9857e-01,
         -2.2002e-01,  5.1419e-01,  6.9861e-01, -1.1697e+00,  3.6841e-01,
         -1.6195e-01, -2.2003e-01,  3.6841e-01, -1.1603e-01]], device='cuda:0') 

head.0.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([-0.1845,  0.0345, -0.3341, -0.0688,  0.1192, -0.0248, -0.0333,  0.0654,
        -0.0951, -0.1088], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0005,  0.0115, -0.0701, -0.0002, -0.0021,  0.0330,  0.0069,  0.0009,
        -0.0111, -0.0691], device='cuda:0') 

head.1.model.0.weight 100 torch.Size([10, 10])
Parameter containing:
tensor([[-0.2510,  0.0750, -0.5528, -0.0346,  0.0087,  0.3727, -0.1129,  0.0281,
         -0.1497, -0.6699],
        [-0.0638, -0.2145, -0.3313, -0.0583, -0.2438,  0.2146, -0.1867, -0.0856,
         -0.0678, -0.6729],
        [-0.1532, -0.1302,  0.7550,  0.4148,  0.2829, -0.2450, -0.3377,  0.2411,
          0.1179,  0.3548],
        [ 0.0044, -0.1902, -0.6613,  0.2094, -0.1513,  0.0332, -0.1499, -0.1405,
         -0.0121, -0.6042],
        [-0.0847,  0.1855, -1.0905,  0.0080, -0.2930, -0.1094,  0.2225,  0.2958,
         -0.1060, -0.7944],
        [-0.3671, -0.1096, -0.0881, -0.1090, -0.0380, -0.0970,  0.3265,  0.1156,
         -0.2925,  0.0392],
        [ 0.1663, -0.1180,  0.7136, -0.0433,  0.4434, -0.7944,  0.0883, -0.0651,
          0.1417,  0.8965],
        [-0.0117, -0.2424,  0.4084,  0.3384, -0.1757,  0.0416, -0.4005,  0.1631,
          0.0683,  0.3978],
        [ 0.0919,  0.0599, -0.5788, -0.3431, -0.1345,  0.1884,  0.4257,  0.2136,
         -0.2629, -0.3610],
        [-0.0353, -0.1237,  0.1666,  0.0283,  0.2790,  0.0109, -0.2727,  0.0909,
         -0.1414,  0.6670]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-5.9085e-05,  4.7220e-03,  5.5284e-04, -2.8404e-04,  3.4013e-06,
         -6.0147e-04,  1.9805e-03, -7.8341e-04,  3.3506e-03,  4.1270e-04],
        [-1.1457e-04,  5.4933e-03,  3.5026e-04, -3.4807e-04, -7.0965e-05,
          3.6108e-04,  2.7541e-03, -7.9728e-04,  2.8115e-03,  2.6858e-04],
        [ 1.4255e-04, -6.8351e-03, -4.3582e-04,  4.3309e-04,  8.8300e-05,
         -4.4928e-04, -3.4268e-03,  9.9204e-04, -3.4983e-03, -3.3418e-04],
        [-1.4009e-04,  6.7168e-03,  4.2828e-04, -4.2560e-04, -8.6772e-05,
          4.4151e-04,  3.3675e-03, -9.7487e-04,  3.4377e-03,  3.2840e-04],
        [-2.6805e-03,  1.2833e-01,  8.1176e-03, -8.1327e-03, -1.6639e-03,
          8.5146e-03,  6.4379e-02, -1.8616e-02,  6.5581e-02,  6.2309e-03],
        [ 2.2107e-04,  2.1869e-03, -3.8326e-06, -6.3738e-05,  3.4518e-04,
         -5.7300e-03, -1.4781e-03, -9.8962e-04,  7.6607e-03, -1.3176e-04],
        [ 4.4923e-03, -2.3604e-01, -1.5573e-02,  1.4837e-02,  2.4444e-03,
         -6.0101e-03, -1.1417e-01,  3.5347e-02, -1.3137e-01, -1.1694e-02],
        [ 1.4745e-04, -7.0697e-03, -4.5078e-04,  4.4796e-04,  9.1330e-05,
         -4.6470e-04, -3.5444e-03,  1.0261e-03, -3.6183e-03, -3.4565e-04],
        [-1.1679e-03,  5.5883e-02,  3.5257e-03, -3.5416e-03, -7.2549e-04,
          3.7208e-03,  2.8041e-02, -8.1047e-03,  2.8543e-02,  2.7071e-03],
        [ 1.3321e-04, -6.3873e-03, -4.0727e-04,  4.0472e-04,  8.2514e-05,
         -4.1984e-04, -3.2023e-03,  9.2704e-04, -3.2691e-03, -3.1229e-04]],
       device='cuda:0') 

head.1.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([-0.3330, -0.1731, -0.2591, -0.1990,  0.0064,  0.5754, -0.0739,  0.4043,
        -0.0078,  0.2783], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0005,  0.0012, -0.0014,  0.0014,  0.0272, -0.0043, -0.0425, -0.0015,
         0.0119, -0.0014], device='cuda:0') 

head.2.model.0.weight 10 torch.Size([1, 10])
Parameter containing:
tensor([[ 0.3238,  0.2559, -0.3184,  0.3129,  0.4427, -0.4791, -0.8040, -0.3293,
          0.1935, -0.2975]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0041, -0.0086, -0.0066, -0.0080,  0.0266,  0.0106,  0.0194, -0.0068,
          0.0251, -0.0053]], device='cuda:0') 

head.2.model.0.bias 1 torch.Size([1])
Parameter containing:
tensor([0.0494], device='cuda:0', requires_grad=True) 
grad:  tensor([0.0619], device='cuda:0') 


Total parameters: 747
Total time: 18430.61372613907
Final val loss: 0.7803477287292481

#### Plotting Script ####
Prediction Results:
results/ContactGNNEnergy/22/sample1230
results/ContactGNNEnergy/22/sample1761
results/ContactGNNEnergy/22/sample40
results/ContactGNNEnergy/22/sample1751
results/ContactGNNEnergy/22/sample1718
Loss: 0.7720089793205261 +- 0.10772062729431131

