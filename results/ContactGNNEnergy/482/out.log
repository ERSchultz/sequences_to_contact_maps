#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy15', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=60, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[30], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=482, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=True, input_L_to_D_mode='subtract', use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/482', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/482/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/482/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/482/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f75624a8310>, channels=1, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 14.67 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f751d28cca0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.6385
Mean test/val loss: 0.6093
[25, 50, 75] percentiles test/val loss: [0.2909 0.4724 0.7687]

Epoch 4, loss = 0.5312
Mean test/val loss: 0.5405
[25, 50, 75] percentiles test/val loss: [0.2468 0.4129 0.6969]

Epoch 6, loss = 0.4863
Mean test/val loss: 0.5075
[25, 50, 75] percentiles test/val loss: [0.2376 0.3745 0.592 ]

Epoch 8, loss = 0.4485
Mean test/val loss: 0.4431
[25, 50, 75] percentiles test/val loss: [0.2029 0.3458 0.5411]

Epoch 10, loss = 0.4489
Mean test/val loss: 0.4313
[25, 50, 75] percentiles test/val loss: [0.202  0.3298 0.5296]

Epoch 12, loss = 0.4366
Mean test/val loss: 0.4202
[25, 50, 75] percentiles test/val loss: [0.213  0.3275 0.5116]

Epoch 14, loss = 0.4108
Mean test/val loss: 0.4311
[25, 50, 75] percentiles test/val loss: [0.2156 0.3439 0.5424]

Epoch 16, loss = 0.3948
Mean test/val loss: 0.4409
[25, 50, 75] percentiles test/val loss: [0.2419 0.3478 0.5358]

Epoch 18, loss = 0.3868
Mean test/val loss: 0.4037
[25, 50, 75] percentiles test/val loss: [0.1933 0.3157 0.4937]

Epoch 20, loss = 0.3767
Mean test/val loss: 0.3760
[25, 50, 75] percentiles test/val loss: [0.1823 0.2973 0.4594]

Epoch 22, loss = 0.3648
Mean test/val loss: 0.3594
[25, 50, 75] percentiles test/val loss: [0.1711 0.2777 0.4347]

Epoch 24, loss = 0.3502
Mean test/val loss: 0.3495
[25, 50, 75] percentiles test/val loss: [0.1683 0.275  0.4266]

Epoch 26, loss = 0.3375
Mean test/val loss: 0.3565
[25, 50, 75] percentiles test/val loss: [0.1734 0.2703 0.4185]

Epoch 28, loss = 0.3276
Mean test/val loss: 0.3377
[25, 50, 75] percentiles test/val loss: [0.1714 0.2663 0.419 ]

Epoch 30, loss = 0.3213
Mean test/val loss: 0.3634
[25, 50, 75] percentiles test/val loss: [0.1764 0.2874 0.4434]

New lr: 1e-05
Epoch 32, loss = 0.2819
Mean test/val loss: 0.3068
[25, 50, 75] percentiles test/val loss: [0.1429 0.2391 0.3827]

Epoch 34, loss = 0.2752
Mean test/val loss: 0.3028
[25, 50, 75] percentiles test/val loss: [0.1411 0.2377 0.3754]

Epoch 36, loss = 0.2708
Mean test/val loss: 0.3010
[25, 50, 75] percentiles test/val loss: [0.1392 0.2351 0.3731]

Epoch 38, loss = 0.2672
Mean test/val loss: 0.2987
[25, 50, 75] percentiles test/val loss: [0.137  0.2347 0.3685]

Epoch 40, loss = 0.2641
Mean test/val loss: 0.2964
[25, 50, 75] percentiles test/val loss: [0.1368 0.2326 0.3737]

Epoch 42, loss = 0.2612
Mean test/val loss: 0.2948
[25, 50, 75] percentiles test/val loss: [0.1346 0.2304 0.362 ]

Epoch 44, loss = 0.2587
Mean test/val loss: 0.2940
[25, 50, 75] percentiles test/val loss: [0.1357 0.2329 0.3613]

Epoch 46, loss = 0.2562
Mean test/val loss: 0.2934
[25, 50, 75] percentiles test/val loss: [0.1357 0.2295 0.361 ]

Epoch 48, loss = 0.2540
Mean test/val loss: 0.2922
[25, 50, 75] percentiles test/val loss: [0.1346 0.2283 0.3602]

Epoch 50, loss = 0.2520
Mean test/val loss: 0.2913
[25, 50, 75] percentiles test/val loss: [0.1335 0.2285 0.3584]

Epoch 52, loss = 0.2502
Mean test/val loss: 0.2904
[25, 50, 75] percentiles test/val loss: [0.1341 0.2269 0.3522]

Epoch 54, loss = 0.2485
Mean test/val loss: 0.2899
[25, 50, 75] percentiles test/val loss: [0.132  0.2267 0.3565]

Epoch 56, loss = 0.2468
Mean test/val loss: 0.2894
[25, 50, 75] percentiles test/val loss: [0.1337 0.2257 0.352 ]

Epoch 58, loss = 0.2455
Mean test/val loss: 0.2904
[25, 50, 75] percentiles test/val loss: [0.133  0.2281 0.3545]

Epoch 60, loss = 0.2441
Mean test/val loss: 0.2891
[25, 50, 75] percentiles test/val loss: [0.1327 0.2239 0.3481]


Total parameters: 26462000
Total training + validation time: 14.0 hours, 23.0 mins, and 44.30000000000291 secs
Final val loss: 0.2891368482001126

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 0.5680400729179382
dataset_04_28_23 sample324: 0.6911863088607788
dataset_04_28_23 sample3464: 0.3444632291793823
dataset_04_28_23 sample2834: 0.4335516691207886
dataset_04_28_23 sample1936: 0.2168792337179184
MSE Loss: 0.451 +- 0.166

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 6.978543758392334
dataset_04_28_23 sample2834-downsampling: 7.687747478485107
dataset_04_28_23 sample324-downsampling: 14.65893268585205
dataset_04_28_23 sample3464-downsampling: 7.792723655700684
dataset_04_28_23 sample981-downsampling: 13.393414497375488
Loss: 10.102 +- 3.241

Removing /scratch/midway3/erschultz/ContactGNNEnergy15downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 7.294364929199219
dataset_04_28_23 sample2834-regular: 7.0726423263549805
dataset_04_28_23 sample324-regular: 18.652433395385742
dataset_04_28_23 sample3464-regular: 6.506518363952637
dataset_04_28_23 sample981-regular: 12.818129539489746
Loss: 10.469 +- 4.686

Removing /scratch/midway3/erschultz/ContactGNNEnergy15regsample
