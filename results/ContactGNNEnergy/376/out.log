#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project/depablo/erschultz/dataset_02_16_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy1', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=50, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[25], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=376, pretrain_id=373, resume_training=False, k=8, m=512, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/376', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/376/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/376/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/376/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f109aa2f3a0>, channels=1, node_feature_size=1, input_m=256, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 19.676 minutes
Number of samples: 5000
Average num edges per graph:  62041.6414
Mean degree: [255.88 227.32 186.76 ... 255.99 254.62 256.  ] +- [ 0.4  28.16 34.03 ...  0.09  2.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Pre-trained model is loaded.
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f10608f4a00>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.3015
Mean test/val loss: 0.3416
[25, 50, 75] percentiles test/val loss: [0.0786 0.2023 0.4917]

Epoch 4, loss = 1.1048
Mean test/val loss: 0.8411
[25, 50, 75] percentiles test/val loss: [0.1488 0.5    1.2609]

Epoch 6, loss = 0.5204
Mean test/val loss: 0.5331
[25, 50, 75] percentiles test/val loss: [0.0879 0.3366 0.8428]

Epoch 8, loss = 0.4093
Mean test/val loss: 0.4310
[25, 50, 75] percentiles test/val loss: [0.0829 0.2709 0.6684]

Epoch 10, loss = 0.2978
Mean test/val loss: 0.3266
[25, 50, 75] percentiles test/val loss: [0.0524 0.1982 0.4847]

Epoch 12, loss = 0.2841
Mean test/val loss: 0.3270
[25, 50, 75] percentiles test/val loss: [0.0541 0.1991 0.4866]

Epoch 14, loss = 0.2875
Mean test/val loss: 0.3251
[25, 50, 75] percentiles test/val loss: [0.0508 0.1988 0.4817]

Epoch 16, loss = 0.2806
Mean test/val loss: 0.3258
[25, 50, 75] percentiles test/val loss: [0.0567 0.1991 0.4785]

Epoch 18, loss = 0.2752
Mean test/val loss: 0.3195
[25, 50, 75] percentiles test/val loss: [0.0528 0.1954 0.4753]

Epoch 20, loss = 0.2736
Mean test/val loss: 0.3251
[25, 50, 75] percentiles test/val loss: [0.0531 0.1968 0.4839]

Epoch 22, loss = 3328.1697
Mean test/val loss: 0.7661
[25, 50, 75] percentiles test/val loss: [0.2902 0.5901 1.0216]

Epoch 24, loss = 0.4811
Mean test/val loss: 0.4905
[25, 50, 75] percentiles test/val loss: [0.1057 0.3477 0.7448]

New lr: 1e-05
Epoch 26, loss = 0.3737
Mean test/val loss: 0.4156
[25, 50, 75] percentiles test/val loss: [0.0683 0.2592 0.6504]

Epoch 28, loss = 0.3284
Mean test/val loss: 0.3626
[25, 50, 75] percentiles test/val loss: [0.0594 0.2157 0.5478]

Epoch 30, loss = 0.2718
Mean test/val loss: 0.3176
[25, 50, 75] percentiles test/val loss: [0.0505 0.1949 0.4736]

Epoch 32, loss = 0.2536
Mean test/val loss: 0.3109
[25, 50, 75] percentiles test/val loss: [0.0492 0.1896 0.4642]

Epoch 34, loss = 0.2490
Mean test/val loss: 0.3092
[25, 50, 75] percentiles test/val loss: [0.0484 0.1885 0.4631]

Epoch 36, loss = 0.2466
Mean test/val loss: 0.3084
[25, 50, 75] percentiles test/val loss: [0.0484 0.1888 0.4599]

Epoch 38, loss = 0.2447
Mean test/val loss: 0.3080
[25, 50, 75] percentiles test/val loss: [0.0496 0.1888 0.4584]

Epoch 40, loss = 0.2432
Mean test/val loss: 0.3081
[25, 50, 75] percentiles test/val loss: [0.0487 0.1883 0.4589]

Epoch 42, loss = 0.2418
Mean test/val loss: 0.3077
[25, 50, 75] percentiles test/val loss: [0.0484 0.1883 0.4593]

Epoch 44, loss = 0.2406
Mean test/val loss: 0.3083
[25, 50, 75] percentiles test/val loss: [0.0487 0.1871 0.4656]

Epoch 46, loss = 0.2394
Mean test/val loss: 0.3078
[25, 50, 75] percentiles test/val loss: [0.0485 0.1872 0.461 ]

Epoch 48, loss = 0.2383
Mean test/val loss: 0.3086
[25, 50, 75] percentiles test/val loss: [0.0488 0.1879 0.4593]

Epoch 50, loss = 0.2373
Mean test/val loss: 0.3088
[25, 50, 75] percentiles test/val loss: [0.0486 0.1869 0.4613]


Total parameters: 26465972
Total training + validation time: 8.0 hours, 59.0 mins, and 7.200000000000728 secs
Final val loss: 0.30877475255168974

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_02_16_23 sample981: 0.015366200357675552
dataset_02_16_23 sample324: 0.20399512350559235
dataset_02_16_23 sample3464: 0.14348654448986053
dataset_02_16_23 sample2834: 0.3840607702732086
dataset_02_16_23 sample1936: 0.42710191011428833
Loss: 0.235 +- 0.153

Downsampling (40%) Results:
dataset_02_16_23 sample1936-downsampling: 12.417497634887695
dataset_02_16_23 sample2834-downsampling: 9.048511505126953
dataset_02_16_23 sample324-downsampling: 5.644111156463623
dataset_02_16_23 sample3464-downsampling: 3.0020368099212646
dataset_02_16_23 sample981-downsampling: 5.829682350158691
Loss: 7.188 +- 3.242

Removing /scratch/midway3/erschultz/ContactGNNEnergy1downsample
Original sampling (100%) Results:
dataset_02_16_23 sample1936-regular: 12.133861541748047
dataset_02_16_23 sample2834-regular: 8.21512508392334
dataset_02_16_23 sample324-regular: 3.827021598815918
dataset_02_16_23 sample3464-regular: 2.418834924697876
dataset_02_16_23 sample981-regular: 4.848940849304199
Loss: 6.289 +- 3.492

Removing /scratch/midway3/erschultz/ContactGNNEnergy1regsample
Upsampling (200%) Results:
