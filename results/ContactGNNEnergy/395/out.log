#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(2, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['GridSize', 'constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_03_23_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy5', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=50, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[25], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=395, pretrain_id=393, resume_training=False, k=8, m=512, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/395', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/395/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/395/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/395/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f613918d3a0>, channels=1, node_feature_size=2, input_m=256, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)', 'GridSize'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  GridSize,
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 13.526 minutes
Number of samples: 5000
Average num edges per graph:  56478.1112
Mean degree: [250.21 252.38 250.06 ... 203.21 254.09 254.71] +- [ 4.91  3.22  5.7  ... 25.76  2.92  2.32]

split sizes: train=4500, val=500, test=0, N=5000
Pre-trained model is loaded.
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f60e43abd00>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 1063.4155
Mean test/val loss: 0.6385
[25, 50, 75] percentiles test/val loss: [0.3431 0.5675 0.8353]

Epoch 4, loss = 0.4549
Mean test/val loss: 0.4254
[25, 50, 75] percentiles test/val loss: [0.2207 0.3402 0.5553]

Epoch 6, loss = 0.2822
Mean test/val loss: 0.2812
[25, 50, 75] percentiles test/val loss: [0.1255 0.2055 0.3594]

Epoch 8, loss = 0.2651
Mean test/val loss: 0.2799
[25, 50, 75] percentiles test/val loss: [0.1272 0.2088 0.3683]

Epoch 10, loss = 0.2519
Mean test/val loss: 0.2702
[25, 50, 75] percentiles test/val loss: [0.1221 0.2061 0.3528]

Epoch 12, loss = 0.2931
Mean test/val loss: 0.2930
[25, 50, 75] percentiles test/val loss: [0.129  0.2229 0.3864]

Epoch 14, loss = 0.2564
Mean test/val loss: 0.2719
[25, 50, 75] percentiles test/val loss: [0.1228 0.2003 0.3537]

Epoch 16, loss = 0.2467
Mean test/val loss: 0.2736
[25, 50, 75] percentiles test/val loss: [0.1224 0.2058 0.3664]

Epoch 18, loss = 0.2388
Mean test/val loss: 0.2677
[25, 50, 75] percentiles test/val loss: [0.1231 0.1971 0.3472]

Epoch 20, loss = 0.2869
Mean test/val loss: 0.3090
[25, 50, 75] percentiles test/val loss: [0.1415 0.2364 0.4063]

Epoch 22, loss = 0.2278
Mean test/val loss: 0.2662
[25, 50, 75] percentiles test/val loss: [0.1165 0.1961 0.3427]

Epoch 24, loss = 0.2217
Mean test/val loss: 0.2666
[25, 50, 75] percentiles test/val loss: [0.1218 0.1932 0.338 ]

New lr: 1e-05
Epoch 26, loss = 0.1978
Mean test/val loss: 0.2520
[25, 50, 75] percentiles test/val loss: [0.1091 0.182  0.3281]

Epoch 28, loss = 0.1908
Mean test/val loss: 0.2516
[25, 50, 75] percentiles test/val loss: [0.1082 0.1811 0.3238]

Epoch 30, loss = 0.1879
Mean test/val loss: 0.2505
[25, 50, 75] percentiles test/val loss: [0.1064 0.1804 0.3223]

Epoch 32, loss = 0.1857
Mean test/val loss: 0.2504
[25, 50, 75] percentiles test/val loss: [0.107  0.1786 0.325 ]

Epoch 34, loss = 0.1838
Mean test/val loss: 0.2508
[25, 50, 75] percentiles test/val loss: [0.107  0.179  0.3244]

Epoch 36, loss = 0.1820
Mean test/val loss: 0.2521
[25, 50, 75] percentiles test/val loss: [0.107  0.1797 0.3289]

Epoch 38, loss = 0.1805
Mean test/val loss: 0.2512
[25, 50, 75] percentiles test/val loss: [0.1067 0.1785 0.3213]

Epoch 40, loss = 0.1790
Mean test/val loss: 0.2513
[25, 50, 75] percentiles test/val loss: [0.1071 0.1781 0.3226]

Epoch 42, loss = 0.1776
Mean test/val loss: 0.2507
[25, 50, 75] percentiles test/val loss: [0.1055 0.1784 0.3239]

Epoch 44, loss = 0.1762
Mean test/val loss: 0.2520
[25, 50, 75] percentiles test/val loss: [0.1044 0.1769 0.3268]

Epoch 46, loss = 0.1749
Mean test/val loss: 0.2533
[25, 50, 75] percentiles test/val loss: [0.1057 0.1766 0.3248]

Epoch 48, loss = 0.1737
Mean test/val loss: 0.2520
[25, 50, 75] percentiles test/val loss: [0.1047 0.1747 0.3207]

Epoch 50, loss = 0.1725
Mean test/val loss: 0.2521
[25, 50, 75] percentiles test/val loss: [0.1046 0.1761 0.3241]


Total parameters: 26466036
Total training + validation time: 4.0 hours, 35.0 mins, and 23.799999999999272 secs
Final val loss: 0.25211522300262

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_03_23_23 sample981: 0.3616049587726593
dataset_03_23_23 sample324: 0.04924865812063217
dataset_03_23_23 sample3464: 0.34264132380485535
dataset_03_23_23 sample2834: 0.8497999310493469
dataset_03_23_23 sample1936: 0.08714201301336288
Loss: 0.338 +- 0.286

Downsampling (40%) Results:
dataset_03_23_23 sample1936-downsampling: 0.6825001239776611
dataset_03_23_23 sample2834-downsampling: 11.083637237548828
dataset_03_23_23 sample324-downsampling: 0.8929341435432434
dataset_03_23_23 sample3464-downsampling: 3.13787841796875
dataset_03_23_23 sample981-downsampling: 4.7092790603637695
Loss: 4.101 +- 3.796

Removing /scratch/midway3/erschultz/ContactGNNEnergy5downsample
Original sampling (100%) Results:
dataset_03_23_23 sample1936-regular: 0.577529788017273
dataset_03_23_23 sample2834-regular: 8.379582405090332
dataset_03_23_23 sample324-regular: 0.541395366191864
dataset_03_23_23 sample3464-regular: 3.0463452339172363
dataset_03_23_23 sample981-regular: 14.624574661254883
Loss: 5.434 +- 5.41

Removing /scratch/midway3/erschultz/ContactGNNEnergy5regsample
Upsampling (200%) Results:
