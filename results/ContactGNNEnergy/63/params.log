#### INITIAL PARAMETERS ####
act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

inner_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

out_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

head_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

encoder.module_0.weight torch.Size([100, 1])
Parameter containing:
tensor([[ 0.7645],
        [ 0.8300],
        [-0.2343],
        [ 0.9186],
        [-0.2191],
        [ 0.2018],
        [-0.4869],
        [ 0.5873],
        [ 0.8815],
        [-0.7336],
        [ 0.8692],
        [ 0.1872],
        [ 0.7388],
        [ 0.1354],
        [ 0.4822],
        [-0.1412],
        [ 0.7709],
        [ 0.1478],
        [-0.4668],
        [ 0.2549],
        [-0.4607],
        [-0.1173],
        [-0.4062],
        [ 0.6634],
        [-0.7894],
        [-0.4610],
        [-0.2824],
        [-0.6013],
        [ 0.0944],
        [-0.9877],
        [ 0.9031],
        [-0.8495],
        [ 0.7720],
        [ 0.1664],
        [-0.3247],
        [ 0.6179],
        [ 0.1559],
        [ 0.8080],
        [ 0.1093],
        [-0.3154],
        [ 0.2687],
        [-0.2712],
        [ 0.4209],
        [ 0.8928],
        [ 0.5781],
        [-0.4372],
        [ 0.5773],
        [ 0.1789],
        [ 0.5078],
        [-0.6095],
        [-0.9899],
        [-0.3864],
        [-0.7670],
        [ 0.8205],
        [ 0.2880],
        [ 0.4142],
        [ 0.3163],
        [-0.0174],
        [ 0.7826],
        [-0.7105],
        [ 0.0630],
        [-0.6825],
        [ 0.3084],
        [-0.3444],
        [ 0.3064],
        [-0.2083],
        [ 0.8294],
        [-0.5927],
        [-0.5964],
        [-0.5964],
        [ 0.8994],
        [ 0.3333],
        [ 0.9623],
        [-0.8253],
        [-0.9919],
        [-0.7824],
        [-0.6727],
        [ 0.4050],
        [ 0.3581],
        [ 0.8309],
        [-0.5164],
        [-0.6817],
        [ 0.5306],
        [-0.4042],
        [ 0.6069],
        [-0.2373],
        [ 0.5720],
        [-0.7770],
        [-0.5046],
        [ 0.3049],
        [ 0.2114],
        [-0.2550],
        [ 0.5961],
        [ 0.6798],
        [-0.7252],
        [-0.5339],
        [ 0.9157],
        [-0.3374],
        [-0.3545],
        [-0.9676]], device='cuda:0', requires_grad=True) 

encoder.module_0.bias torch.Size([100])
Parameter containing:
tensor([-0.5727,  0.2498, -0.1320, -0.7259,  0.0235, -0.6831, -0.8484, -0.5507,
        -0.8752, -0.6367,  0.9996,  0.1889,  0.3082, -0.9327, -0.6568, -0.3329,
         0.1564, -0.8799, -0.4309, -0.5987,  0.0028, -0.3721, -0.0693, -0.6776,
        -0.6864, -0.5834, -0.3423, -0.7893,  0.8385, -0.1985,  0.8604,  0.3116,
        -0.8468,  0.6920, -0.2751, -0.3833, -0.8301, -0.9942,  0.2861, -0.2184,
         0.3893, -0.8207,  0.7424, -0.7341, -0.1727,  0.2089,  0.5163,  0.8073,
         0.9110, -0.7929,  0.2517, -0.4301, -0.1096, -0.7485,  0.9109, -0.7340,
         0.5345,  0.3514,  0.3250, -0.5406,  0.9090,  0.2198,  0.1286, -0.8813,
         0.4198, -0.1500, -0.4581,  0.8589,  0.2229, -0.5533, -0.5061, -0.0478,
         0.5584, -0.2555, -0.5706, -0.3424, -0.7471,  0.3566,  0.7740, -0.9414,
         0.2323,  0.5166,  0.1813, -0.3561,  0.5219,  0.5255,  0.3739, -0.1757,
        -0.2648,  0.1070, -0.1767, -0.2980,  0.6392,  0.8594, -0.0990, -0.2239,
         0.0146, -0.0597,  0.2404,  0.2802], device='cuda:0',
       requires_grad=True) 

encoder.module_2.weight torch.Size([100, 100])
Parameter containing:
tensor([[-0.0908, -0.0369,  0.0842,  ..., -0.0078, -0.0333, -0.0324],
        [ 0.0032, -0.0212, -0.0344,  ...,  0.0108,  0.0296, -0.0462],
        [-0.0280,  0.0675,  0.0080,  ...,  0.0930, -0.0259, -0.0423],
        ...,
        [-0.0733, -0.0671, -0.0753,  ..., -0.0564,  0.0824, -0.0178],
        [ 0.0541, -0.0831, -0.0601,  ...,  0.0822,  0.0888, -0.0258],
        [ 0.0149, -0.0668, -0.0751,  ...,  0.0350, -0.0560,  0.0757]],
       device='cuda:0', requires_grad=True) 

encoder.module_2.bias torch.Size([100])
Parameter containing:
tensor([ 0.0928, -0.0271,  0.0738,  0.0253, -0.0696, -0.0261, -0.0798,  0.0302,
         0.0553, -0.0984, -0.0409,  0.0022,  0.0801, -0.0545, -0.0059, -0.0028,
        -0.0503, -0.0448, -0.0268, -0.0299, -0.0322,  0.0096, -0.0084, -0.0487,
         0.0606,  0.0715, -0.0157, -0.0189, -0.0975, -0.0731, -0.0046, -0.0191,
         0.0293, -0.0497, -0.0207,  0.0150,  0.0982,  0.0787, -0.0658, -0.0083,
        -0.0164, -0.0032,  0.0417, -0.0402, -0.0213, -0.0991, -0.0355, -0.0981,
         0.0354, -0.0770, -0.0494, -0.0725,  0.0760, -0.0294,  0.0869, -0.0497,
         0.0757, -0.0197, -0.0751,  0.0836, -0.0680, -0.0588,  0.0548, -0.0093,
        -0.0015,  0.0992, -0.0794, -0.0361,  0.0407, -0.0193,  0.0017, -0.0338,
        -0.0155,  0.0798, -0.0186,  0.0402,  0.0755,  0.0774,  0.0474,  0.0687,
        -0.0259,  0.0080, -0.0429, -0.0970,  0.0841, -0.0956, -0.0630, -0.0356,
        -0.0915, -0.0776, -0.0523,  0.0118, -0.0874, -0.0719, -0.0585, -0.0752,
         0.0235,  0.0034,  0.0219,  0.0902], device='cuda:0',
       requires_grad=True) 

encoder.module_4.weight torch.Size([16, 100])
Parameter containing:
tensor([[-0.0438, -0.0375,  0.0319,  ..., -0.0964, -0.0224, -0.0814],
        [ 0.0899, -0.0268,  0.0269,  ..., -0.0295,  0.0255,  0.0012],
        [ 0.0658,  0.0437, -0.0046,  ..., -0.0985,  0.0879, -0.0389],
        ...,
        [ 0.0305,  0.0128,  0.0279,  ..., -0.0546,  0.0095,  0.0571],
        [ 0.0206,  0.0051,  0.0390,  ...,  0.0256, -0.0076, -0.0335],
        [ 0.0351, -0.0812,  0.0986,  ...,  0.0367, -0.0375, -0.0136]],
       device='cuda:0', requires_grad=True) 

encoder.module_4.bias torch.Size([16])
Parameter containing:
tensor([ 0.0063,  0.0894,  0.0749, -0.0142, -0.0477,  0.0915,  0.0541, -0.0865,
        -0.0031, -0.0738, -0.0256, -0.0860, -0.0834, -0.0700, -0.0213,  0.0357],
       device='cuda:0', requires_grad=True) 

model.module_0.bias torch.Size([8])
Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True) 

model.module_0.lin.weight torch.Size([8, 16])
Parameter containing:
tensor([[-0.3247,  0.0521, -0.0952,  0.3915, -0.2755,  0.2295, -0.2500, -0.2565,
          0.4401,  0.0607,  0.4991, -0.4157, -0.1808, -0.4244,  0.3984,  0.2428],
        [ 0.0233,  0.4723, -0.3468, -0.3658,  0.4620, -0.1308,  0.3248,  0.2400,
          0.1357, -0.3140, -0.1653,  0.4345,  0.1970, -0.1336,  0.1616, -0.1242],
        [-0.0387,  0.0872,  0.3485,  0.4783,  0.4553, -0.1057,  0.0403, -0.4810,
         -0.0493,  0.0290, -0.3198,  0.4477, -0.2109, -0.4635, -0.2298, -0.0870],
        [-0.4161,  0.3182,  0.0718, -0.2940,  0.0440, -0.4321,  0.1577, -0.0166,
         -0.0394,  0.0407, -0.2285,  0.3341, -0.3636, -0.0075,  0.4128,  0.1054],
        [-0.3600,  0.4966, -0.2964, -0.2126,  0.3070, -0.3006,  0.0200,  0.1845,
          0.2770, -0.3092,  0.4770,  0.3720, -0.1989,  0.0030, -0.1752, -0.2577],
        [ 0.4336,  0.3717,  0.1298,  0.4498, -0.4857,  0.0369, -0.2475,  0.2710,
          0.0396, -0.3929,  0.0157,  0.2049, -0.1538, -0.0473, -0.3556,  0.4309],
        [-0.4840, -0.2959, -0.3945, -0.2223, -0.2720,  0.1577,  0.4322,  0.0217,
          0.1145,  0.3777, -0.4992,  0.0333,  0.2252,  0.0913, -0.2082, -0.1674],
        [-0.2616,  0.4948, -0.2209, -0.0858,  0.0095, -0.3754, -0.3274, -0.3374,
          0.1012, -0.3033, -0.3939, -0.2846, -0.1724, -0.1358, -0.3123,  0.1429]],
       device='cuda:0', requires_grad=True) 

model.module_2.bias torch.Size([8])
Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True) 

model.module_2.lin.weight torch.Size([8, 8])
Parameter containing:
tensor([[ 0.4312,  0.0381, -0.5545, -0.3853, -0.2228,  0.2850, -0.4980, -0.3933],
        [-0.6086, -0.4320,  0.4433, -0.2285, -0.1444,  0.0189, -0.1211, -0.2098],
        [-0.0124, -0.3070,  0.3885, -0.0246,  0.2739,  0.0738,  0.4614,  0.2979],
        [-0.3079, -0.1439,  0.1413, -0.2209, -0.4245,  0.5134,  0.4113, -0.3059],
        [ 0.1414,  0.4440, -0.3711, -0.1009, -0.5050, -0.5603,  0.4867,  0.2143],
        [-0.3980, -0.0454, -0.2848, -0.1116, -0.1324,  0.1940,  0.1060, -0.4152],
        [ 0.3068,  0.0451, -0.3198, -0.3557, -0.0135,  0.2131, -0.5655, -0.1424],
        [-0.4425, -0.5726,  0.3282, -0.2104, -0.5837, -0.1763, -0.3382,  0.3310]],
       device='cuda:0', requires_grad=True) 

model.module_4.bias torch.Size([8])
Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True) 

model.module_4.lin.weight torch.Size([8, 8])
Parameter containing:
tensor([[ 3.4406e-01, -3.7180e-01, -1.8381e-01,  2.6467e-01,  1.5596e-01,
          2.6022e-01, -1.1590e-02, -5.9014e-01],
        [ 2.9026e-01, -3.8518e-01, -5.0605e-01,  6.0559e-01,  2.6995e-01,
          3.0434e-01, -2.6830e-01,  2.2567e-01],
        [ 5.2044e-02,  4.1771e-01,  7.1633e-02,  5.4733e-01, -1.4343e-01,
          5.6510e-01,  6.0647e-01,  7.2432e-02],
        [-4.4899e-01,  2.3981e-04,  4.8744e-01, -4.1839e-01, -2.1885e-01,
          2.2144e-01,  1.2443e-01,  5.7566e-01],
        [ 1.0086e-01, -4.6830e-03,  8.0482e-02, -1.2596e-01, -5.6376e-01,
         -2.1479e-01, -5.5512e-01,  4.4806e-01],
        [ 3.7052e-02,  7.1305e-02, -4.2500e-02, -3.1421e-01, -4.3202e-01,
         -9.3731e-02,  1.8528e-01, -3.3511e-01],
        [-3.7886e-01,  3.9786e-01, -2.1262e-01,  3.4500e-01,  5.8624e-01,
          5.7557e-01, -4.7346e-01,  4.5422e-02],
        [-4.8017e-01,  2.5275e-02,  8.5160e-02, -2.6505e-01,  1.8176e-01,
         -1.9197e-01,  3.4502e-01,  5.8379e-03]], device='cuda:0',
       requires_grad=True) 

head.0.model.0.weight torch.Size([100, 16])
Parameter containing:
tensor([[ 0.1735,  0.1690,  0.0558,  ...,  0.0357, -0.2248, -0.2284],
        [ 0.1189, -0.1507,  0.1904,  ...,  0.1812,  0.2005,  0.1569],
        [-0.1938, -0.1101, -0.0982,  ...,  0.0817,  0.0427, -0.0564],
        ...,
        [-0.0464, -0.0680,  0.0612,  ...,  0.0701, -0.0682,  0.0872],
        [-0.0106, -0.1825, -0.1971,  ..., -0.1905, -0.0182,  0.0519],
        [ 0.0450,  0.2437, -0.2192,  ..., -0.0973, -0.2353,  0.0183]],
       device='cuda:0', requires_grad=True) 

head.0.model.0.bias torch.Size([100])
Parameter containing:
tensor([-0.2043, -0.0546,  0.0526, -0.0875,  0.1428, -0.2246, -0.1974,  0.1331,
        -0.1302,  0.2053, -0.0506, -0.0448,  0.2384, -0.0277, -0.2004, -0.1041,
         0.0778,  0.1703,  0.2108, -0.0918,  0.0368,  0.1821, -0.1023,  0.0167,
        -0.1212,  0.0356,  0.2432,  0.2112, -0.1644,  0.1227,  0.2352, -0.0443,
         0.0887, -0.2245,  0.1389, -0.0468,  0.2296,  0.1751, -0.1437, -0.1106,
        -0.1966, -0.2310, -0.2268,  0.1210,  0.1658, -0.1586,  0.1750, -0.0784,
         0.0746,  0.2094,  0.1940, -0.1993,  0.0984, -0.1256, -0.2147, -0.0111,
        -0.0560,  0.0525,  0.0282,  0.1447,  0.1290, -0.2241, -0.2185, -0.1580,
         0.1287,  0.2309, -0.1463,  0.0468,  0.0140,  0.0933,  0.0966,  0.0390,
         0.1663, -0.0831,  0.2387, -0.0071, -0.2266,  0.1218,  0.1760,  0.1676,
         0.0275,  0.0846,  0.0776, -0.1067, -0.0100,  0.0059, -0.1384, -0.0933,
        -0.0996, -0.0410, -0.1645,  0.1450, -0.0063,  0.1923, -0.1605,  0.0694,
        -0.0820,  0.1325, -0.1000, -0.1240], device='cuda:0',
       requires_grad=True) 

head.1.model.0.weight torch.Size([100, 100])
Parameter containing:
tensor([[ 0.0079, -0.0573,  0.0690,  ..., -0.0539,  0.0934,  0.0128],
        [-0.0236,  0.0291, -0.0061,  ...,  0.0778, -0.0952, -0.0484],
        [-0.0906, -0.0156, -0.0393,  ..., -0.0516, -0.0334,  0.0380],
        ...,
        [-0.0555, -0.0272, -0.0538,  ...,  0.0628, -0.0538,  0.0836],
        [-0.0363, -0.0947,  0.0944,  ...,  0.0079,  0.0977,  0.0581],
        [ 0.0868, -0.0117,  0.0637,  ..., -0.0805,  0.0164,  0.0073]],
       device='cuda:0', requires_grad=True) 

head.1.model.0.bias torch.Size([100])
Parameter containing:
tensor([-0.0552, -0.0724,  0.0312,  0.0207,  0.0674,  0.0515, -0.0652,  0.0501,
        -0.0917, -0.0878,  0.0398,  0.0912,  0.0456, -0.0048, -0.0480,  0.0974,
        -0.0663,  0.0900, -0.0597, -0.0923,  0.0008,  0.0282, -0.0832, -0.0320,
        -0.0050, -0.0082, -0.0490,  0.0918, -0.0732,  0.0610,  0.0281, -0.0424,
         0.0428, -0.0846, -0.0698,  0.0534, -0.0519,  0.0480, -0.0948,  0.0175,
        -0.0943,  0.0468,  0.0924,  0.0577,  0.0249,  0.0673,  0.0887,  0.0547,
         0.0421,  0.0308,  0.0217,  0.0672,  0.0791, -0.0295,  0.0188,  0.0538,
        -0.0825, -0.0764, -0.0276,  0.0146,  0.0637,  0.0499,  0.0494, -0.0219,
        -0.0269, -0.0973, -0.0006, -0.0225, -0.0722,  0.0493,  0.0612,  0.0297,
        -0.0686, -0.0240, -0.0869, -0.0162,  0.0479,  0.0789, -0.0813, -0.0202,
        -0.0489,  0.0722,  0.0953, -0.0887, -0.0427,  0.0034, -0.0895, -0.0941,
        -0.0605,  0.0733,  0.0208, -0.0472, -0.0141,  0.0917, -0.0946,  0.0392,
        -0.0034, -0.0967,  0.0870, -0.0461], device='cuda:0',
       requires_grad=True) 

head.2.model.0.weight torch.Size([1, 100])
Parameter containing:
tensor([[ 0.0752,  0.0075,  0.0229, -0.0145, -0.0806,  0.0500, -0.0344,  0.0375,
          0.0943, -0.0288,  0.0119,  0.0351, -0.0315,  0.0461, -0.0627,  0.0607,
         -0.0376, -0.0017, -0.0342,  0.0109,  0.0704,  0.0198, -0.0350,  0.0939,
          0.0911, -0.0415, -0.0594, -0.0708,  0.0175,  0.0934,  0.0318,  0.0368,
         -0.0944,  0.0402,  0.0536, -0.0307, -0.0623, -0.0121, -0.0860,  0.0920,
         -0.0606,  0.0900, -0.0992,  0.0637, -0.0418, -0.0770,  0.0281,  0.0921,
         -0.0477,  0.0140, -0.0655,  0.0652,  0.0900, -0.0273,  0.0958,  0.0518,
          0.0135, -0.0430,  0.0690,  0.0051, -0.0423, -0.0984, -0.0969,  0.0997,
         -0.0528, -0.0746,  0.0634, -0.0286, -0.0746,  0.0202, -0.0148,  0.0386,
          0.0929, -0.0252,  0.0570, -0.0279, -0.0330,  0.0334, -0.0224,  0.0269,
          0.0223, -0.0801, -0.0234,  0.0902, -0.0006,  0.0948,  0.0756, -0.0281,
         -0.0452,  0.0330, -0.0165, -0.0129, -0.0068, -0.0646,  0.0629, -0.0391,
         -0.0814, -0.0781, -0.0638,  0.0184]], device='cuda:0',
       requires_grad=True) 

head.2.model.0.bias torch.Size([1])
Parameter containing:
tensor([-0.0963], device='cuda:0', requires_grad=True) 



#### FINAL PARAMETERS ####
act.weight 1 torch.Size([1])
Parameter containing:
tensor([nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan], device='cuda:0') 

inner_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 
grad:  None 

out_act.weight 1 torch.Size([1])
Parameter containing:
tensor([nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan], device='cuda:0') 

head_act.weight 1 torch.Size([1])
Parameter containing:
tensor([nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan], device='cuda:0') 

encoder.module_0.weight 100 torch.Size([100, 1])
Parameter containing:
tensor([[nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan]], device='cuda:0', requires_grad=True) 
grad:  tensor([[nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan],
        [nan]], device='cuda:0') 

encoder.module_0.bias 100 torch.Size([100])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan], device='cuda:0') 

encoder.module_2.weight 10000 torch.Size([100, 100])
Parameter containing:
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0') 

encoder.module_2.bias 100 torch.Size([100])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan], device='cuda:0') 

encoder.module_4.weight 1600 torch.Size([16, 100])
Parameter containing:
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0') 

encoder.module_4.bias 16 torch.Size([16])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0', requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
       device='cuda:0') 

model.module_0.bias 8 torch.Size([8])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0',
       requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0') 

model.module_0.lin.weight 128 torch.Size([8, 16])
Parameter containing:
tensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]],
       device='cuda:0') 

model.module_2.bias 8 torch.Size([8])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0',
       requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0') 

model.module_2.lin.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0') 

model.module_4.bias 8 torch.Size([8])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0',
       requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0') 

model.module_4.lin.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0') 

head.0.model.0.weight 1600 torch.Size([100, 16])
Parameter containing:
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0') 

head.0.model.0.bias 100 torch.Size([100])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan], device='cuda:0') 

head.1.model.0.weight 10000 torch.Size([100, 100])
Parameter containing:
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0') 

head.1.model.0.bias 100 torch.Size([100])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan], device='cuda:0') 

head.2.model.0.weight 100 torch.Size([1, 100])
Parameter containing:
tensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan]], device='cuda:0', requires_grad=True) 
grad:  tensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan]], device='cuda:0') 

head.2.model.0.bias 1 torch.Size([1])
Parameter containing:
tensor([nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan], device='cuda:0') 

