#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_08_25_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy13', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='center_norm_log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=460, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/460', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/460/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/460/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/460/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f2ad72ec3a0>, channels=1, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 22.668 minutes
Number of samples: 5000
Average num edges per graph:  64713.4272
Mean degree: [252.9  254.92 254.73 ... 254.88 254.63 254.43] +- [3.31 0.33 0.66 ... 0.35 0.82 1.18]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f2a921d1cd0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.0062
Mean test/val loss: 0.0060
[25, 50, 75] percentiles test/val loss: [0.0037 0.0051 0.0076]

Epoch 4, loss = 0.0054
Mean test/val loss: 0.0052
[25, 50, 75] percentiles test/val loss: [0.003  0.0044 0.0065]

Epoch 6, loss = 0.0043
Mean test/val loss: 0.0041
[25, 50, 75] percentiles test/val loss: [0.0027 0.0036 0.0051]

Epoch 8, loss = 0.0039
Mean test/val loss: 0.0039
[25, 50, 75] percentiles test/val loss: [0.0025 0.0033 0.0049]

Epoch 10, loss = 0.0036
Mean test/val loss: 0.0038
[25, 50, 75] percentiles test/val loss: [0.0023 0.0032 0.0048]

Epoch 12, loss = 0.0034
Mean test/val loss: 0.0034
[25, 50, 75] percentiles test/val loss: [0.0022 0.0029 0.0042]

Epoch 14, loss = 0.0032
Mean test/val loss: 0.0033
[25, 50, 75] percentiles test/val loss: [0.002  0.0028 0.0041]

Epoch 16, loss = 0.0031
Mean test/val loss: 0.0032
[25, 50, 75] percentiles test/val loss: [0.0021 0.0028 0.004 ]

Epoch 18, loss = 0.0030
Mean test/val loss: 0.0031
[25, 50, 75] percentiles test/val loss: [0.002  0.0028 0.0038]

Epoch 20, loss = 0.0029
Mean test/val loss: 0.0030
[25, 50, 75] percentiles test/val loss: [0.0019 0.0026 0.0037]

Epoch 22, loss = 0.0028
Mean test/val loss: 0.0030
[25, 50, 75] percentiles test/val loss: [0.0019 0.0027 0.0036]

Epoch 24, loss = 0.0027
Mean test/val loss: 0.0029
[25, 50, 75] percentiles test/val loss: [0.0019 0.0024 0.0035]

Epoch 26, loss = 0.0027
Mean test/val loss: 0.0027
[25, 50, 75] percentiles test/val loss: [0.0018 0.0024 0.0034]

Epoch 28, loss = 0.0026
Mean test/val loss: 0.0027
[25, 50, 75] percentiles test/val loss: [0.0017 0.0024 0.0033]

Epoch 30, loss = 0.0025
Mean test/val loss: 0.0027
[25, 50, 75] percentiles test/val loss: [0.0018 0.0024 0.0034]

Epoch 32, loss = 0.0025
Mean test/val loss: 0.0027
[25, 50, 75] percentiles test/val loss: [0.0017 0.0024 0.0033]

Epoch 34, loss = 0.0024
Mean test/val loss: 0.0026
[25, 50, 75] percentiles test/val loss: [0.0016 0.0023 0.0032]

Epoch 36, loss = 0.0024
Mean test/val loss: 0.0026
[25, 50, 75] percentiles test/val loss: [0.0016 0.0023 0.0032]

Epoch 38, loss = 0.0024
Mean test/val loss: 0.0026
[25, 50, 75] percentiles test/val loss: [0.0017 0.0023 0.0033]

Epoch 40, loss = 0.0023
Mean test/val loss: 0.0025
[25, 50, 75] percentiles test/val loss: [0.0016 0.0022 0.003 ]

New lr: 1e-05
Epoch 42, loss = 0.0021
Mean test/val loss: 0.0023
[25, 50, 75] percentiles test/val loss: [0.0015 0.0021 0.0028]

Epoch 44, loss = 0.0020
Mean test/val loss: 0.0023
[25, 50, 75] percentiles test/val loss: [0.0015 0.0021 0.0028]

Epoch 46, loss = 0.0020
Mean test/val loss: 0.0023
[25, 50, 75] percentiles test/val loss: [0.0015 0.0021 0.0028]

Epoch 48, loss = 0.0020
Mean test/val loss: 0.0023
[25, 50, 75] percentiles test/val loss: [0.0014 0.0021 0.0028]

Epoch 50, loss = 0.0020
Mean test/val loss: 0.0023
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0028]

Epoch 52, loss = 0.0020
Mean test/val loss: 0.0023
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0028]

Epoch 54, loss = 0.0019
Mean test/val loss: 0.0023
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0028]

Epoch 56, loss = 0.0019
Mean test/val loss: 0.0023
[25, 50, 75] percentiles test/val loss: [0.0015 0.0021 0.0028]

Epoch 58, loss = 0.0019
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 60, loss = 0.0019
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 62, loss = 0.0019
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0028]

Epoch 64, loss = 0.0019
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 66, loss = 0.0019
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 68, loss = 0.0019
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 70, loss = 0.0019
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 72, loss = 0.0019
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 74, loss = 0.0018
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 76, loss = 0.0018
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 78, loss = 0.0018
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]

Epoch 80, loss = 0.0018
Mean test/val loss: 0.0022
[25, 50, 75] percentiles test/val loss: [0.0014 0.002  0.0027]


Total parameters: 26462000
Total training + validation time: 6.0 hours, 38.0 mins, and 24.099999999998545 secs
Final val loss: 0.0021956248037167825

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_08_25_23 sample981: 0.0026948098093271255
dataset_08_25_23 sample324: 0.00202769273892045
dataset_08_25_23 sample3464: 0.001407951582223177
dataset_08_25_23 sample2834: 0.0019062514184042811
dataset_08_25_23 sample1936: 0.001789941219612956
Loss: 0.002 +- 0.0

Downsampling (40%) Results:
dataset_08_25_23 sample1936-downsampling: 0.0017899414524435997
dataset_08_25_23 sample2834-downsampling: 0.002161824144423008
dataset_08_25_23 sample324-downsampling: 0.002444404875859618
dataset_08_25_23 sample3464-downsampling: 0.001594380009919405
dataset_08_25_23 sample981-downsampling: 0.0028687098529189825
Loss: 0.002 +- 0.0

Removing /scratch/midway3/erschultz/ContactGNNEnergy13downsample
Original sampling (100%) Results:
dataset_08_25_23 sample1936-regular: 0.0017017971258610487
dataset_08_25_23 sample2834-regular: 0.0019259346881881356
dataset_08_25_23 sample324-regular: 0.001979024847969413
dataset_08_25_23 sample3464-regular: 0.0014079511165618896
dataset_08_25_23 sample981-regular: 0.0026628340128809214
Loss: 0.002 +- 0.0

Removing /scratch/midway3/erschultz/ContactGNNEnergy13regsample
