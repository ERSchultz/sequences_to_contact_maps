Took 29.0 seconds to move data to scratch
#### ARCHITECTURE ####
None
Sequential(
  (0): SignedConv(3, 8, first_aggr=True)
  (1): PReLU(num_parameters=1)
  (2): SignedConv(8, 8, first_aggr=False)
  (3): PReLU(num_parameters=1)
  (4): SignedConv(8, 2, first_aggr=False)
  (5): PReLU(num_parameters=1)
)
Sequential(
  (0): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=24, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (1): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (2): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=1, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
) 

Namespace(GNN_mode=True, act='prelu', autoencoder_mode=False, batch_size=4, bottleneck=None, channels=1, classes=10, criterion=<function mse_loss at 0x7ffafc2ac040>, crop=None, cuda=True, data_folder='/scratch/midway2/erschultz/dataset_11_03_21', degree=True, delete_root=False, device=device(type='cuda'), dilation_list=None, dilation_list_head=None, dilation_list_trunk=None, down_sampling=None, encoder_hidden_sizes_list=None, gamma=0.1, gpus=1, head_act='prelu', head_architecture='concat-outer', head_hidden_sizes_list=[10, 10, 1], hidden_sizes_list=[8, 8, 2], id=37, ifile=None, ifile_folder=None, inner_act='prelu', k=4, kernel_w_list=None, log_file=<_io.TextIOWrapper name='results/ContactGNNEnergy/37/out.log' mode='a' encoding='UTF-8'>, loss='mse', lr=0.0001, m=1024, message_passing='SignedConv', milestones=None, min_subtraction=True, model_type='ContactGNNEnergy', n_epochs=100, nf=None, node_feature_size=3, num_workers=4, ofile_folder='results/ContactGNNEnergy/37', out_act='prelu', output_mode='energy', parameter_sharing=False, plot=True, plot_predictions=True, pre_transforms=['degree'], pre_transforms_processed=None, pretrained=False, print_mod=2, print_params=True, relabel_11_to_00=False, resume_training=False, root_name='ContactGNNEnergy2', save_mod=5, seed=42, shuffle=True, sparsify_threshold=0.176, sparsify_threshold_upper=None, split=[0.8, 0.1, 0.1], split_neg_pos_edges=True, split_neg_pos_edges_for_feature_augmentation=True, start_epoch=1, top_k=None, toxx=False, toxx_mode='mean', training_norm=None, transforms=None, transforms_processed=None, update_hidden_sizes_list=None, use_bias=True, use_edge_weights=False, use_node_features=False, use_parallel=False, use_scratch=True, verbose=False, weighted_LDP=False, weighted_degree=False, x_reshape=True, y_log_transform=True, y_norm=None, y_preprocessing='diag', y_reshape=True, ydtype=torch.float32)

Dataset construction time: 17.786 minutes
Mean degree: [680.5  539.53 241.97 ... 208.36 654.24 460.02] +- [153.62 174.94 107.82 ... 101.81 137.17 149.77]

#### INITIAL PARAMETERS ####
act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

inner_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

out_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

head_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1779, -0.5385, -0.3792],
        [-0.1922,  0.0903, -0.5080],
        [-0.2488, -0.3456,  0.0016],
        [-0.2148, -0.0400, -0.3912],
        [-0.3963, -0.3368, -0.1976],
        [-0.4557,  0.4841, -0.1146],
        [ 0.4968,  0.1799, -0.4889],
        [ 0.3995, -0.1589, -0.2213]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[-0.4792, -0.5740,  0.1652],
        [-0.1261,  0.2248, -0.4738],
        [ 0.4286, -0.4238, -0.0997],
        [ 0.1206,  0.2981,  0.4661],
        [ 0.5259, -0.4578,  0.1453],
        [-0.2483, -0.0633, -0.4321],
        [ 0.5259, -0.4237,  0.3086],
        [ 0.2029,  0.1876, -0.3121]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.5248,  0.1269,  0.0743, -0.5088,  0.2424, -0.0866, -0.2645,  0.4959],
       device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1287, -0.3194, -0.2922],
        [-0.0276,  0.3224, -0.1475],
        [-0.3294, -0.1977, -0.4313],
        [ 0.2059,  0.4469, -0.5435],
        [ 0.1341,  0.2983,  0.1047],
        [-0.2056,  0.3013,  0.3034],
        [ 0.2159, -0.1015, -0.1529],
        [ 0.0618, -0.1020, -0.1721]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.3690,  0.4962, -0.0572],
        [-0.1293,  0.0084, -0.0345],
        [ 0.1388,  0.1618, -0.5244],
        [-0.2131,  0.4862,  0.2249],
        [-0.0287, -0.3481, -0.3532],
        [-0.5172, -0.1882,  0.1950],
        [ 0.3681,  0.2666, -0.5103],
        [-0.3472, -0.0911,  0.5585]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.0835, -0.1495,  0.2389, -0.2199, -0.3737,  0.4214, -0.2625, -0.1157],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_l.weight torch.Size([8, 16])
Parameter containing:
tensor([[-0.0051, -0.1553, -0.0310,  0.1017, -0.2445,  0.0743, -0.1653, -0.1220,
          0.0960,  0.1988, -0.0683, -0.1026, -0.2261, -0.1289, -0.2189, -0.0572],
        [ 0.0510, -0.2342,  0.2183,  0.1568, -0.2447, -0.1194,  0.0815, -0.0514,
         -0.0272, -0.1129,  0.2008, -0.1397,  0.2073,  0.0161,  0.0503,  0.1950],
        [-0.0412, -0.1423, -0.0404,  0.2028, -0.1855,  0.0567, -0.2457,  0.1311,
          0.0924,  0.0106,  0.1073,  0.0003,  0.1383, -0.1979, -0.0367,  0.1109],
        [ 0.2490,  0.1273, -0.1818,  0.1923, -0.0557, -0.0534, -0.2272, -0.0394,
          0.1768,  0.0349, -0.1456,  0.0770, -0.0802,  0.2282, -0.2170, -0.0790],
        [-0.2414, -0.0985,  0.0788,  0.2407,  0.0420,  0.2451,  0.0489,  0.1444,
          0.2004,  0.2090, -0.1399,  0.2298,  0.1514, -0.1169, -0.1193, -0.2097],
        [ 0.0628, -0.2026,  0.1056,  0.0789, -0.2172,  0.0681, -0.0203,  0.1142,
          0.1434, -0.2485,  0.2293,  0.2097,  0.0995, -0.2285, -0.0893, -0.0725],
        [-0.0642,  0.1410,  0.0909,  0.1980, -0.0936,  0.0841,  0.0889, -0.2081,
         -0.2425, -0.1297,  0.1711, -0.2354, -0.2176,  0.1401,  0.1349,  0.2056],
        [-0.1887, -0.1830,  0.1282,  0.2174,  0.1496,  0.0392,  0.0824,  0.2373,
         -0.1613, -0.1135,  0.1749, -0.1711, -0.1379,  0.1825,  0.0789,  0.0808]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.weight torch.Size([8, 8])
Parameter containing:
tensor([[-0.1499, -0.0049,  0.3236, -0.2122,  0.0028,  0.1681, -0.2441,  0.3434],
        [-0.1766, -0.0849, -0.0957, -0.2304, -0.3469,  0.1994,  0.0939, -0.3311],
        [-0.2276,  0.3494,  0.1351,  0.1419, -0.2115, -0.1550, -0.0534, -0.0647],
        [-0.2423,  0.0291,  0.0351, -0.0448,  0.0490, -0.1401,  0.0920,  0.1333],
        [-0.1862, -0.3506,  0.1851,  0.0843, -0.1798,  0.3407, -0.1599,  0.2389],
        [ 0.1794, -0.2964,  0.2280, -0.3251, -0.1959, -0.0589, -0.2383,  0.3454],
        [-0.0709,  0.1404, -0.3157,  0.2035, -0.1099, -0.2689,  0.0517,  0.1713],
        [ 0.3060, -0.2159, -0.1740,  0.0680,  0.0959,  0.1359,  0.1941, -0.0802]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.1964,  0.2607, -0.0924,  0.2515,  0.1727,  0.3119, -0.2009, -0.1746],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_l.weight torch.Size([8, 16])
Parameter containing:
tensor([[-0.0723,  0.0127,  0.1500, -0.1427,  0.1252, -0.0896,  0.1510, -0.0119,
         -0.2190, -0.1376, -0.1809,  0.1240, -0.1676, -0.0208,  0.0539, -0.1371],
        [ 0.0721, -0.2441, -0.1789, -0.2265, -0.0756, -0.0911,  0.0358, -0.0462,
          0.1175,  0.2292,  0.0897, -0.0985, -0.2341,  0.0906, -0.1239,  0.1272],
        [ 0.1671,  0.0964,  0.2346,  0.2374,  0.0529, -0.1822,  0.2234, -0.1186,
         -0.1181,  0.2092,  0.1937,  0.0755,  0.0157, -0.2103, -0.0260,  0.2398],
        [ 0.0637,  0.0214, -0.0519, -0.0872,  0.1490,  0.0154,  0.1626, -0.0442,
          0.1092,  0.1032,  0.0399,  0.1571,  0.1567,  0.2317,  0.1922, -0.0639],
        [-0.2117,  0.0457, -0.0022, -0.0652, -0.0419,  0.0118,  0.1824,  0.0779,
         -0.0888, -0.1028, -0.0619, -0.0966,  0.2248,  0.1324,  0.2257,  0.0008],
        [ 0.0504,  0.0867, -0.2366,  0.0223, -0.0167, -0.1402, -0.1940,  0.2213,
          0.2033,  0.1159,  0.2386, -0.1015, -0.0432,  0.0947, -0.0413, -0.0491],
        [-0.2066,  0.0672, -0.1511,  0.0091,  0.2437, -0.0770, -0.0788,  0.1508,
         -0.0919, -0.0215,  0.2334, -0.1025, -0.1789, -0.1399, -0.0693, -0.1186],
        [-0.1297,  0.1010,  0.0425, -0.0800, -0.1942, -0.0787, -0.1055, -0.0814,
         -0.2255,  0.0539, -0.1837, -0.1947, -0.2043,  0.1043, -0.1505, -0.1032]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.weight torch.Size([8, 8])
Parameter containing:
tensor([[ 0.2771,  0.1877,  0.2027, -0.3357, -0.2535, -0.1335,  0.2921,  0.0362],
        [-0.2644,  0.0022, -0.2746, -0.0775, -0.0972,  0.3061,  0.1095, -0.0616],
        [ 0.0597, -0.1021,  0.1389,  0.1399,  0.0949, -0.1378,  0.3016, -0.0510],
        [-0.1376,  0.2214,  0.2882,  0.3518,  0.1047, -0.1205,  0.1796,  0.3033],
        [-0.3468, -0.0438, -0.2411,  0.0659,  0.1462, -0.0730, -0.0296,  0.1591],
        [-0.0594, -0.2969,  0.2829, -0.1779, -0.0388,  0.0333, -0.0212, -0.3326],
        [ 0.1622, -0.1606, -0.1834,  0.0845, -0.1845, -0.1634, -0.1191, -0.1328],
        [-0.1477, -0.0953,  0.0919, -0.2861, -0.2140,  0.0052,  0.0492,  0.1953]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([-0.2484,  0.1129,  0.2010,  0.1963, -0.3293, -0.1349, -0.3039, -0.2237],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2055, -0.2402,  0.1117,  0.2492,  0.1252,  0.0852, -0.2405,  0.2405,
         -0.0428, -0.2336,  0.2468, -0.1017, -0.0177,  0.2288, -0.1733, -0.1769],
        [ 0.0407, -0.0335,  0.0576, -0.2097,  0.0075, -0.1112, -0.1229, -0.2289,
          0.1326,  0.0482, -0.2114,  0.1984,  0.0754,  0.0464, -0.1468,  0.0377]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.3407,  0.2425, -0.2754,  0.3227,  0.0274,  0.1700,  0.2746,  0.3014],
        [-0.2756,  0.3096, -0.2401,  0.0265, -0.2471, -0.0775, -0.0161, -0.0423]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_r.bias torch.Size([2])
Parameter containing:
tensor([-0.0559,  0.0279], device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2466,  0.1453,  0.1399,  0.1001,  0.1935, -0.0115,  0.0199,  0.0514,
         -0.2180, -0.2014,  0.0307, -0.0978, -0.0046, -0.0574,  0.0389,  0.1627],
        [-0.0829,  0.2002,  0.1974, -0.1919, -0.1931, -0.2023, -0.1370, -0.0973,
         -0.0188, -0.0608, -0.1263, -0.0794, -0.0904,  0.2453, -0.0927, -0.1790]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.1470, -0.0204,  0.2707,  0.2209,  0.3248, -0.2589,  0.2273,  0.2967],
        [-0.1746,  0.3250,  0.2650,  0.0039,  0.1705, -0.1236, -0.3084,  0.0894]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_r.bias torch.Size([2])
Parameter containing:
tensor([ 0.1054, -0.2311], device='cuda:0', requires_grad=True) 

head.0.model.0.weight torch.Size([10, 24])
Parameter containing:
tensor([[ 9.9000e-02, -1.7437e-01,  1.7567e-01,  1.9767e-01,  5.5575e-02,
         -1.2807e-01,  9.9341e-02,  3.4786e-02,  5.5505e-02,  6.7086e-02,
          1.5541e-01, -8.7740e-02, -4.5917e-02,  5.5666e-02,  2.2242e-02,
          1.6460e-01, -1.0721e-01, -7.4335e-03,  3.8141e-02, -5.4213e-02,
          1.3915e-01,  2.2327e-02, -1.8866e-01, -2.2114e-02],
        [-9.2582e-02,  1.9835e-02, -2.3722e-02, -2.0248e-01, -3.7197e-02,
         -1.9551e-02, -6.0192e-02,  1.8755e-01, -4.4540e-02,  1.3113e-01,
          5.0565e-02, -1.7231e-01,  4.7966e-02,  1.6916e-01, -1.3352e-01,
         -1.3194e-01,  1.9981e-01,  1.6402e-01, -1.1388e-01,  1.2283e-01,
         -2.6114e-02, -2.0125e-01,  1.5337e-02,  6.5951e-02],
        [-6.1229e-02,  7.1011e-02, -1.7455e-01,  1.4146e-01,  1.7402e-01,
          1.1257e-01,  3.4597e-02,  6.7228e-02, -1.4769e-01, -5.1005e-02,
         -1.9487e-02, -1.1359e-01, -1.5077e-01,  1.3730e-01,  1.3853e-01,
         -1.8538e-01,  6.4955e-02,  8.3038e-02,  1.9391e-01,  1.1810e-01,
          1.8766e-01, -6.6828e-02,  1.4297e-01,  1.6603e-01],
        [-1.9276e-01, -1.6385e-01,  4.1316e-02,  1.1146e-01, -1.0141e-01,
          2.2481e-02, -2.9633e-04,  5.1665e-02, -1.0969e-01,  1.1513e-01,
          1.3574e-01, -1.4163e-01,  1.9774e-03,  5.6636e-04,  6.5547e-02,
          1.9016e-01,  5.9862e-02, -4.6381e-02,  1.8333e-01, -7.7676e-02,
         -5.9272e-02,  1.3937e-02, -1.5544e-01,  2.2212e-02],
        [-1.3849e-01,  2.0988e-02,  1.9557e-02,  2.8255e-02, -1.7214e-01,
         -1.9387e-01,  9.3921e-02,  1.7506e-01, -1.8113e-01,  7.5606e-02,
         -1.5026e-01,  1.2797e-02,  1.8991e-01,  1.5485e-01, -1.4924e-01,
          1.2627e-01,  1.0662e-01, -3.1310e-04,  1.9774e-01, -8.1073e-02,
         -4.7503e-02, -1.0317e-01,  2.9373e-02,  5.4049e-02],
        [ 1.6265e-02, -1.1485e-01, -9.1890e-02,  6.9433e-02, -1.7898e-01,
         -3.1789e-02, -4.5217e-03, -8.2704e-02,  7.4284e-02,  1.3157e-02,
          1.4331e-01, -1.8129e-02, -1.2883e-01,  1.4422e-01,  2.8506e-02,
         -5.8461e-02, -1.3454e-01,  4.7844e-02, -1.9468e-01,  5.3762e-02,
          1.0093e-01, -1.7906e-01, -1.3363e-01, -1.4675e-01],
        [ 1.7157e-01,  1.7353e-01,  1.2778e-02,  1.9163e-01, -6.8240e-02,
         -1.9817e-01,  7.1300e-02,  7.2315e-02,  2.0012e-01, -5.9082e-05,
          1.5644e-01,  1.2512e-01,  1.4774e-01, -2.0256e-01,  1.6809e-01,
         -1.7401e-01,  1.8300e-01, -8.4590e-03, -1.8090e-01,  5.6765e-02,
         -4.1549e-02, -1.8334e-01, -7.4003e-02,  2.1046e-02],
        [ 1.5898e-01, -6.2754e-02,  1.2124e-01,  2.5562e-02,  6.8806e-03,
          3.9058e-02, -1.3396e-01, -1.6967e-01, -6.4138e-02, -1.9021e-01,
         -9.5193e-02,  9.3909e-03, -1.3444e-01, -8.4670e-02, -3.6678e-02,
         -2.3516e-02, -1.1268e-01,  9.8084e-03, -2.8651e-02,  5.8379e-02,
          9.2198e-03, -1.0193e-01, -7.0277e-02, -2.3527e-03],
        [-1.2737e-01,  1.5980e-02, -1.4412e-02,  7.9196e-02,  4.8309e-02,
          1.5276e-01, -6.7290e-03, -1.5083e-01,  9.1245e-02, -1.3795e-01,
         -2.8057e-02, -6.6096e-02, -7.7454e-02, -7.5523e-02,  1.8757e-01,
          1.1685e-01,  5.6570e-02,  1.9166e-01, -1.8498e-01,  3.2939e-02,
          1.3068e-01,  1.3560e-01, -1.6245e-01,  7.2646e-02],
        [-1.1629e-01, -7.9759e-03, -4.2595e-02, -1.7044e-01, -1.9472e-01,
         -1.3429e-01,  9.2626e-02,  9.3374e-02, -1.7754e-01, -7.6657e-02,
          3.3342e-03, -1.7648e-01,  1.1501e-01,  1.8488e-01,  3.6102e-02,
         -1.5167e-01,  4.7599e-02,  7.4100e-02,  1.6163e-01, -1.0861e-01,
         -1.8288e-01,  8.9682e-02,  1.2708e-02, -6.6509e-02]], device='cuda:0',
       requires_grad=True) 

head.0.model.0.bias torch.Size([10])
Parameter containing:
tensor([-0.0855, -0.1052,  0.1652, -0.0352,  0.1472,  0.1822,  0.0259,  0.0435,
        -0.0139,  0.1402], device='cuda:0', requires_grad=True) 

head.1.model.0.weight torch.Size([10, 10])
Parameter containing:
tensor([[-0.2849,  0.1258, -0.0515,  0.1444, -0.0014, -0.1171, -0.0341,  0.1708,
         -0.2196, -0.1999],
        [-0.0708, -0.1147,  0.1242,  0.2128, -0.0339,  0.2990, -0.1321, -0.1775,
         -0.1416, -0.2179],
        [-0.2217, -0.2818, -0.2803,  0.0825,  0.1929,  0.2969,  0.2694, -0.0182,
          0.0614, -0.1892],
        [ 0.1222, -0.3032,  0.1492,  0.0580,  0.0972,  0.1158, -0.1452,  0.2714,
          0.1509,  0.2077],
        [ 0.0418,  0.1986,  0.2128,  0.1433,  0.2409, -0.0574,  0.2079,  0.0729,
          0.1903,  0.3080],
        [ 0.0716, -0.1174, -0.0315,  0.0890,  0.0533, -0.0864,  0.2478,  0.1900,
         -0.1964, -0.0258],
        [-0.0304, -0.1982,  0.0461, -0.0971, -0.1633, -0.1017, -0.1128,  0.3025,
          0.1213,  0.3112],
        [ 0.0867,  0.0716,  0.1300,  0.0543, -0.2482, -0.1870, -0.0766,  0.0048,
          0.1191,  0.1218],
        [ 0.2509,  0.0644, -0.1079, -0.2378, -0.2316, -0.1889,  0.0954,  0.1708,
          0.2767, -0.1000],
        [-0.0249, -0.0939, -0.0012,  0.1015, -0.0069,  0.0146,  0.0401,  0.1178,
         -0.0959, -0.1886]], device='cuda:0', requires_grad=True) 

head.1.model.0.bias torch.Size([10])
Parameter containing:
tensor([ 0.0746, -0.0374, -0.1433,  0.1328,  0.0029, -0.0460, -0.1531, -0.0416,
        -0.2689,  0.0719], device='cuda:0', requires_grad=True) 

head.2.model.0.weight torch.Size([1, 10])
Parameter containing:
tensor([[ 0.0047,  0.1919,  0.0204,  0.0253,  0.0861,  0.2406, -0.1494,  0.1888,
          0.0773, -0.2110]], device='cuda:0', requires_grad=True) 

head.2.model.0.bias torch.Size([1])
Parameter containing:
tensor([0.1101], device='cuda:0', requires_grad=True) 



#### TRAINING/VALIDATION ####
Epoch 2, loss = 1.2003
Mean test/val loss: 1.1761

Epoch 4, loss = 0.9302
Mean test/val loss: 0.9044

Epoch 6, loss = 0.8547
Mean test/val loss: 0.8303

Epoch 8, loss = 0.7706
Mean test/val loss: 0.7597

Epoch 10, loss = 0.7559
Mean test/val loss: 0.7491

Epoch 12, loss = 0.7501
Mean test/val loss: 0.7438

Epoch 14, loss = 0.7456
Mean test/val loss: 0.7390

Epoch 16, loss = 0.7404
Mean test/val loss: 0.7336

Epoch 18, loss = 0.7343
Mean test/val loss: 0.7272

Epoch 20, loss = 0.7265
Mean test/val loss: 0.7182

Epoch 22, loss = 0.7182
Mean test/val loss: 0.7099

Epoch 24, loss = 0.7119
Mean test/val loss: 0.7044

Epoch 26, loss = 0.7078
Mean test/val loss: 0.7002

Epoch 28, loss = 0.7052
Mean test/val loss: 0.6979

Epoch 30, loss = 0.7031
Mean test/val loss: 0.6969

Epoch 32, loss = 0.7012
Mean test/val loss: 0.6943

Epoch 34, loss = 0.6995
Mean test/val loss: 0.6925

Epoch 36, loss = 0.6980
Mean test/val loss: 0.6911

Epoch 38, loss = 0.6963
Mean test/val loss: 0.6892

Epoch 40, loss = 0.6946
Mean test/val loss: 0.6884

Epoch 42, loss = 0.6928
Mean test/val loss: 0.6857

Epoch 44, loss = 0.6909
Mean test/val loss: 0.6837

Epoch 46, loss = 0.6890
Mean test/val loss: 0.6815

Epoch 48, loss = 0.6870
Mean test/val loss: 0.6793

Epoch 50, loss = 0.6849
Mean test/val loss: 0.6791

Epoch 52, loss = 0.6828
Mean test/val loss: 0.6747

Epoch 54, loss = 0.6805
Mean test/val loss: 0.6734

Epoch 56, loss = 0.6780
Mean test/val loss: 0.6698

Epoch 58, loss = 0.6757
Mean test/val loss: 0.6675

Epoch 60, loss = 0.6734
Mean test/val loss: 0.6648

Epoch 62, loss = 0.6711
Mean test/val loss: 0.6623

Epoch 64, loss = 0.6688
Mean test/val loss: 0.6600

Epoch 66, loss = 0.6667
Mean test/val loss: 0.6582

Epoch 68, loss = 0.6648
Mean test/val loss: 0.6561

Epoch 70, loss = 0.6631
Mean test/val loss: 0.6541

Epoch 72, loss = 0.6613
Mean test/val loss: 0.6540

Epoch 74, loss = 0.6599
Mean test/val loss: 0.6505

Epoch 76, loss = 0.6584
Mean test/val loss: 0.6496

Epoch 78, loss = 0.6569
Mean test/val loss: 0.6476

Epoch 80, loss = 0.6553
Mean test/val loss: 0.6463

Epoch 82, loss = 0.6539
Mean test/val loss: 0.6442

Epoch 84, loss = 0.6522
Mean test/val loss: 0.6439

Epoch 86, loss = 0.6506
Mean test/val loss: 0.6415

Epoch 88, loss = 0.6489
Mean test/val loss: 0.6395

Epoch 90, loss = 0.6472
Mean test/val loss: 0.6377

Epoch 92, loss = 0.6454
Mean test/val loss: 0.6357

Epoch 94, loss = 0.6439
Mean test/val loss: 0.6343

Epoch 96, loss = 0.6420
Mean test/val loss: 0.6333

Epoch 98, loss = 0.6404
Mean test/val loss: 0.6310

Epoch 100, loss = 0.6391
Mean test/val loss: 0.6293

#### FINAL PARAMETERS ####
act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.3261], device='cuda:0', requires_grad=True) 
grad:  tensor([0.4013], device='cuda:0') 

inner_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.5085], device='cuda:0', requires_grad=True) 
grad:  tensor([0.0126], device='cuda:0') 

out_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.6181], device='cuda:0', requires_grad=True) 
grad:  tensor([0.1245], device='cuda:0') 

head_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.3014], device='cuda:0', requires_grad=True) 
grad:  tensor([0.0708], device='cuda:0') 

model.nns.0.lin_pos_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.3557, -0.6844, -0.1938],
        [-0.2612,  0.1601, -0.5368],
        [-0.0667, -0.1567,  0.0703],
        [-0.3661,  0.2294, -0.4119],
        [-0.4380, -0.0293, -0.2443],
        [-0.4155,  0.4812, -0.0777],
        [ 0.6357,  0.7056, -0.3793],
        [ 0.3800, -0.4007, -0.2887]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0306,  0.0167,  0.0231],
        [-0.0067, -0.0038, -0.0053],
        [ 0.0842,  0.0435,  0.0586],
        [-0.0144, -0.0079, -0.0106],
        [-0.0519, -0.0295, -0.0378],
        [-0.0030, -0.0018, -0.0019],
        [-0.0555, -0.0314, -0.0375],
        [ 0.0841,  0.0481,  0.0587]], device='cuda:0') 

model.nns.0.lin_pos_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[-1.0564, -0.9233,  0.1542],
        [-0.2341,  0.1540, -0.3916],
        [ 0.5299, -0.8419,  0.1594],
        [-0.1065,  0.1582,  0.9779],
        [ 0.5834, -0.6992,  0.6633],
        [-0.3468,  0.2238, -0.6543],
        [ 0.2912, -0.6458,  0.7572],
        [ 0.5145,  0.3472, -0.4943]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0032, -0.0158,  0.0024],
        [-0.0053, -0.0029, -0.0045],
        [ 0.0575, -0.0026,  0.0555],
        [-0.0264, -0.0115, -0.0222],
        [-0.0891, -0.0388, -0.0736],
        [-0.0010, -0.0010, -0.0002],
        [-0.0719, -0.0092, -0.0699],
        [ 0.1009,  0.0269,  0.0926]], device='cuda:0') 

model.nns.0.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.6962,  0.0639,  0.1852, -0.5774,  0.3416, -0.0755, -0.1679,  0.5577],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0381, -0.0085,  0.1211, -0.0214, -0.0758, -0.0050, -0.0814,  0.1215],
       device='cuda:0') 

model.nns.0.lin_neg_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[-0.0589, -0.5163, -0.5295],
        [-0.2565,  0.3230, -0.2265],
        [-0.8931, -0.2624, -0.8631],
        [-0.0547,  0.4913, -0.7828],
        [ 0.1744,  0.2830,  0.2220],
        [ 0.2869,  0.3922,  0.7245],
        [ 0.1621, -0.2645, -0.0901],
        [ 0.2971,  0.5981, -0.0411]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0897, -0.0099,  0.0944],
        [-0.0046, -0.0057, -0.0020],
        [-0.0020, -0.0085,  0.0021],
        [ 0.0267,  0.0009,  0.0251],
        [ 0.0065,  0.0065,  0.0028],
        [-0.0063,  0.0279, -0.0189],
        [-0.0307,  0.0042, -0.0314],
        [-0.0521, -0.0044, -0.0480]], device='cuda:0') 

model.nns.0.lin_neg_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.5888,  0.4351,  0.2843],
        [-0.0988, -0.1754,  0.0216],
        [ 0.4520, -0.0092, -0.2014],
        [-0.1969,  0.5180,  0.2726],
        [-0.2877, -0.3626, -0.5969],
        [-0.9016, -0.0738, -0.0422],
        [ 0.2709,  0.5331, -0.7413],
        [-0.3834, -0.6977,  0.6524]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0995,  0.1046,  0.0434],
        [-0.0013,  0.0042, -0.0035],
        [ 0.0049,  0.0166, -0.0032],
        [ 0.0246,  0.0191,  0.0129],
        [ 0.0035, -0.0064,  0.0063],
        [-0.0329, -0.0569, -0.0034],
        [-0.0449, -0.0448, -0.0213],
        [-0.0323, -0.0202, -0.0162]], device='cuda:0') 

model.nns.0.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.0897, -0.2339,  0.1769, -0.3918, -0.5257,  0.4968, -0.3284, -0.1223],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.1267, -0.0069, -0.0035,  0.0376,  0.0092, -0.0099, -0.0392, -0.0780],
       device='cuda:0') 

model.nns.2.lin_pos_l.weight 128 torch.Size([8, 16])
Parameter containing:
tensor([[ 1.0315e-01, -2.1443e-01,  2.2789e-01, -7.2378e-03, -1.2550e-02,
         -2.9754e-02,  4.4603e-02, -6.2276e-02,  2.6226e-01,  7.8131e-02,
         -1.9641e-01, -1.7683e-01, -3.3633e-01, -4.8338e-02, -2.6605e-01,
         -2.8525e-01],
        [ 2.9693e-01, -4.6613e-01,  4.4325e-01, -1.1698e-01, -1.4355e-02,
         -3.9173e-01,  3.5672e-01,  3.0574e-01, -1.7034e-01, -4.4328e-01,
         -1.4944e-01, -5.8585e-01,  1.8778e-01,  3.8315e-01, -1.6422e-03,
          1.1238e-01],
        [-5.3730e-01, -7.8702e-02, -1.2113e-01,  3.6773e-01, -2.5376e-01,
          1.3023e-01, -4.1314e-01,  6.5712e-02,  5.1870e-01,  1.0088e-01,
          3.4858e-01,  2.4659e-01, -1.5335e-01, -4.9982e-01,  5.4035e-03,
          1.6286e-01],
        [ 2.4772e-01,  1.2215e-01, -1.4435e-01,  1.4591e-01, -6.6869e-04,
         -8.0304e-02, -1.5684e-01,  2.5426e-02,  1.5658e-01, -2.4834e-02,
         -2.2310e-01,  1.5428e-02, -8.6636e-02,  3.1334e-01, -2.1729e-01,
         -2.3081e-01],
        [-2.3983e-01, -1.5788e-01,  2.8422e-01,  1.5374e-01,  2.5641e-01,
          1.5639e-01,  2.3437e-01,  1.9812e-01,  4.4566e-01,  1.0159e-01,
         -2.3252e-01,  1.8722e-01, -1.6392e-04, -8.0251e-02, -2.1711e-01,
         -4.2319e-01],
        [ 5.7060e-01, -1.9011e-01,  2.7676e-01, -6.7696e-02, -1.2095e-01,
          4.2355e-02,  1.3580e-01,  1.2548e-01,  2.1733e-01, -3.6363e-01,
          1.1555e-01,  1.3860e-01,  6.5226e-02, -1.3204e-01, -1.7080e-02,
         -3.1922e-01],
        [-4.4828e-02, -2.4348e-02,  3.9941e-01,  8.1697e-02,  3.5039e-01,
         -7.3493e-02,  4.8257e-01, -8.6586e-02, -3.4593e-01, -2.6438e-01,
         -1.4664e-01, -4.6906e-01, -3.1744e-01,  5.1612e-01, -2.2786e-01,
          3.1827e-01],
        [-2.9230e-01, -2.1013e-01,  1.4622e-01,  1.9710e-01,  2.3671e-01,
          5.3801e-03,  1.6024e-01,  2.9309e-01, -1.9047e-01, -1.5376e-01,
          9.8069e-02, -2.2254e-01, -1.6916e-01,  2.8064e-01, -4.2945e-02,
          9.7132e-02]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0063, -0.0113,  0.0121, -0.0088,  0.0170, -0.0125,  0.0314,  0.0424,
          0.0230, -0.0116, -0.0134, -0.0113, -0.0154,  0.0251, -0.0019, -0.0009],
        [-0.0004, -0.0033,  0.0056, -0.0024,  0.0065, -0.0034,  0.0151,  0.0078,
         -0.0128,  0.0002, -0.0059, -0.0020, -0.0004,  0.0203, -0.0087,  0.0208],
        [ 0.0006,  0.0022, -0.0035,  0.0017, -0.0045,  0.0024, -0.0084, -0.0072,
          0.0015,  0.0010,  0.0031,  0.0018,  0.0019, -0.0088,  0.0034, -0.0071],
        [-0.0006, -0.0011,  0.0014, -0.0004,  0.0017, -0.0010,  0.0054,  0.0013,
         -0.0085,  0.0010, -0.0021, -0.0001,  0.0010,  0.0087, -0.0042,  0.0111],
        [-0.0037, -0.0053,  0.0041, -0.0042,  0.0062, -0.0059,  0.0112,  0.0216,
          0.0193, -0.0071, -0.0054, -0.0059, -0.0088,  0.0061,  0.0032, -0.0108],
        [-0.0068, -0.0153,  0.0210, -0.0124,  0.0284, -0.0174,  0.0492,  0.0577,
          0.0229, -0.0139, -0.0189, -0.0150, -0.0202,  0.0397, -0.0088,  0.0127],
        [ 0.0028,  0.0075, -0.0122,  0.0056, -0.0165,  0.0088, -0.0261, -0.0267,
         -0.0111,  0.0066,  0.0094,  0.0072,  0.0100, -0.0188,  0.0050, -0.0090],
        [ 0.0020,  0.0052, -0.0087,  0.0048, -0.0117,  0.0063, -0.0164, -0.0231,
         -0.0162,  0.0063,  0.0058,  0.0059,  0.0091, -0.0085,  0.0007,  0.0028]],
       device='cuda:0') 

model.nns.2.lin_pos_r.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[-0.6088,  0.0269,  0.2903, -0.4593, -0.2510,  0.1461, -0.5194,  0.5933],
        [-0.7959,  0.0600, -0.4497, -0.6699, -0.7438,  0.2670, -0.1244, -0.0760],
        [ 0.3777,  0.3383,  0.4247,  0.2756,  0.1132, -0.0926,  0.1752, -0.2306],
        [-0.6459,  0.1153, -0.2270, -0.2542, -0.3252, -0.0555, -0.1178,  0.2418],
        [-0.5483, -0.3554,  0.1581, -0.1179, -0.3461,  0.2911, -0.4279,  0.4846],
        [-0.3851, -0.2098,  0.2761, -0.4460, -0.2957, -0.0747, -0.4450,  0.5580],
        [-0.8679,  0.1208, -0.6313, -0.1888, -0.4515, -0.2864, -0.2528,  0.5995],
        [-0.0730, -0.1902, -0.4590, -0.0743, -0.2145,  0.1641,  0.0046,  0.0327]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-3.1894e-03, -1.4086e-02,  3.1504e-02, -3.4391e-03,  4.6144e-02,
         -1.7344e-02,  6.5381e-02,  2.7060e-02],
        [-2.1506e-02, -6.4476e-03,  4.5343e-04,  3.9061e-03,  1.5956e-02,
         -9.1043e-03,  9.9017e-03,  2.8864e-02],
        [ 6.1784e-03,  3.0748e-03, -2.3208e-03, -3.5908e-05, -7.3654e-03,
          4.0399e-03, -7.2355e-03, -1.2776e-02],
        [-1.4767e-02, -2.7709e-03, -4.1205e-03,  3.0869e-03,  4.5835e-03,
         -3.9760e-03,  1.6057e-03,  1.4893e-02],
        [ 5.4043e-03, -6.2579e-03,  1.9930e-02, -2.2731e-03,  2.4623e-02,
         -7.4718e-03,  3.8809e-02,  2.9577e-03],
        [-7.7217e-03, -1.8323e-02,  3.4777e-02, -7.2168e-03,  5.2345e-02,
         -2.2573e-02,  7.1340e-02,  5.1223e-02],
        [-5.0165e-03,  6.8106e-03, -1.4685e-02,  7.8718e-03, -1.3849e-02,
          7.4298e-03, -2.3383e-02, -2.1889e-02],
        [-1.0292e-02,  4.3882e-03, -1.5963e-02,  7.0986e-03, -1.3243e-02,
          4.8366e-03, -2.2634e-02, -1.0695e-02]], device='cuda:0') 

model.nns.2.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.2692,  0.4301, -0.1343,  0.2853,  0.2583,  0.3474, -0.0056, -0.1191],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0521,  0.0154, -0.0109,  0.0037,  0.0235,  0.0750, -0.0363, -0.0282],
       device='cuda:0') 

model.nns.2.lin_neg_l.weight 128 torch.Size([8, 16])
Parameter containing:
tensor([[-1.5055e-01,  1.0310e-01,  2.4900e-01, -7.2570e-02,  1.9719e-01,
         -1.7744e-01,  2.2232e-01,  1.3209e-01,  2.5121e-01, -3.2833e-02,
         -2.2919e-01,  2.1413e-01, -1.6409e-01,  1.1059e-01,  5.2587e-02,
         -2.9762e-01],
        [ 1.9851e-02, -2.5120e-01, -1.9403e-01, -2.2578e-01, -5.0605e-02,
         -1.6040e-02,  1.4437e-01, -2.9531e-01, -2.0937e-01,  1.7497e-01,
          3.5622e-01, -1.8501e-02,  8.3982e-02, -1.8358e-02, -2.3403e-02,
          1.5321e-01],
        [ 1.6874e-01,  6.5458e-02,  2.5722e-01,  2.1582e-01,  5.2474e-02,
         -1.1225e-01,  4.3813e-01, -6.1044e-01, -6.2782e-01,  1.7249e-01,
          2.9980e-01,  1.3882e-01,  2.1418e-01, -3.2860e-01, -3.1401e-02,
          3.3669e-01],
        [ 3.7075e-02,  9.5220e-02,  5.4852e-02, -2.1751e-02,  1.9598e-01,
         -7.7074e-02,  2.7537e-01, -2.5401e-02,  4.9410e-01,  1.8074e-01,
          2.6465e-02,  2.7231e-01,  2.3759e-01,  3.1908e-01,  1.9929e-01,
         -2.1605e-01],
        [ 1.3150e-02, -5.2187e-03,  1.1804e-01, -8.4683e-02, -1.4277e-01,
         -5.4814e-02,  5.0476e-01, -5.6312e-01, -3.1771e-01, -1.6092e-01,
          3.2696e-02,  5.7366e-02,  3.8660e-01,  3.0611e-02,  2.3001e-01,
         -9.7651e-03],
        [ 1.0119e-01,  2.4783e-02, -3.2559e-01, -5.5509e-02, -8.3797e-02,
         -9.1011e-02, -4.3963e-01,  6.7570e-01,  6.8893e-01,  1.5749e-01,
          2.2678e-01, -3.6804e-01, -2.0934e-01,  1.5602e-01,  8.0905e-03,
          3.1637e-02],
        [-3.2394e-01,  1.5892e-01, -7.1981e-02,  7.4170e-02,  3.3953e-01,
         -1.4597e-01,  2.4517e-04,  3.3484e-01,  3.1965e-01,  8.9828e-02,
          1.3645e-01, -4.2318e-02, -2.1898e-01,  1.2924e-03, -7.2121e-02,
         -2.5485e-01],
        [ 2.0700e-01, -8.4610e-02, -7.7196e-04, -2.6264e-01, -3.7205e-01,
         -9.1958e-02,  3.0001e-01, -6.9992e-01, -5.0413e-01, -1.2499e-01,
         -9.1538e-02, -2.1997e-01, -5.0972e-02, -6.2756e-02, -9.4974e-02,
          2.1578e-03]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0102,  0.0060,  0.0079,  0.0062,  0.0085, -0.0163,  0.0028, -0.0041,
          0.0018,  0.0070, -0.0133,  0.0040, -0.0186,  0.0084, -0.0259, -0.0215],
        [ 0.0147, -0.0083, -0.0101, -0.0084, -0.0118,  0.0224, -0.0033,  0.0032,
         -0.0046, -0.0083,  0.0124, -0.0062,  0.0198, -0.0103,  0.0270,  0.0360],
        [ 0.0168, -0.0097, -0.0122, -0.0098, -0.0139,  0.0271, -0.0041,  0.0048,
         -0.0046, -0.0098,  0.0137, -0.0076,  0.0212, -0.0117,  0.0319,  0.0403],
        [-0.0104,  0.0062,  0.0084,  0.0065,  0.0089, -0.0175,  0.0031, -0.0048,
          0.0012,  0.0075, -0.0156,  0.0041, -0.0214,  0.0091, -0.0293, -0.0214],
        [-0.0253,  0.0156,  0.0221,  0.0166,  0.0223, -0.0443,  0.0090, -0.0167,
         -0.0012,  0.0210, -0.0549,  0.0083, -0.0727,  0.0265, -0.0934, -0.0453],
        [-0.0100,  0.0064,  0.0079,  0.0065,  0.0085, -0.0187,  0.0019, -0.0004,
          0.0044,  0.0054, -0.0030,  0.0062, -0.0057,  0.0061, -0.0115, -0.0305],
        [-0.0110,  0.0061,  0.0076,  0.0062,  0.0086, -0.0157,  0.0025, -0.0025,
          0.0033,  0.0067, -0.0103,  0.0041, -0.0154,  0.0080, -0.0215, -0.0241],
        [-0.0235,  0.0137,  0.0188,  0.0144,  0.0199, -0.0373,  0.0077, -0.0137,
          0.0014,  0.0177, -0.0415,  0.0077, -0.0562,  0.0220, -0.0740, -0.0438]],
       device='cuda:0') 

model.nns.2.lin_neg_r.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[ 0.2087,  0.2958,  0.3826, -0.2803, -0.1643, -0.2522,  0.3439,  0.2645],
        [-0.2560, -0.0981, -0.3642, -0.0879, -0.1127,  0.3667,  0.4195, -0.3728],
        [-0.0494, -0.2142, -0.0568,  0.1313,  0.0987,  0.0354,  0.4391, -0.2108],
        [-0.2784,  0.3008,  0.4015,  0.3544,  0.2050, -0.1754,  0.2557,  0.5717],
        [-0.6637, -0.1591, -0.5513, -0.2584,  0.2531,  0.3315,  0.4902, -0.0019],
        [ 0.3619, -0.3238,  0.4520, -0.1235, -0.2931, -0.2043, -0.3652, -0.2955],
        [ 0.1853, -0.0508, -0.0012,  0.1758, -0.1239, -0.3190, -0.0919,  0.1033],
        [-0.4882, -0.2215, -0.2160, -0.6659, -0.1419,  0.3130, -0.1005,  0.6473]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0014,  0.0056,  0.0093,  0.0072,  0.0057, -0.0253,  0.0029, -0.0041],
        [-0.0253, -0.0047, -0.0149, -0.0120, -0.0006,  0.0577, -0.0096,  0.0198],
        [-0.0199, -0.0058, -0.0159, -0.0129, -0.0039,  0.0575, -0.0115,  0.0235],
        [-0.0062,  0.0065,  0.0093,  0.0074,  0.0073, -0.0230,  0.0019, -0.0013],
        [-0.0393,  0.0216,  0.0232,  0.0194,  0.0235, -0.0451, -0.0059,  0.0245],
        [ 0.0148,  0.0019,  0.0092,  0.0076,  0.0031, -0.0332,  0.0126, -0.0275],
        [ 0.0064,  0.0046,  0.0102,  0.0071,  0.0037, -0.0316,  0.0047, -0.0090],
        [-0.0130,  0.0162,  0.0222,  0.0179,  0.0149, -0.0563,  0.0004,  0.0092]],
       device='cuda:0') 

model.nns.2.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([-0.3278,  0.1307,  0.2302,  0.1292, -0.2779, -0.0428, -0.3840, -0.1402],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0311,  0.0446,  0.0518, -0.0328, -0.0833, -0.0334, -0.0310, -0.0725],
       device='cuda:0') 

model.nns.4.lin_pos_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 0.1633, -0.2321,  0.0354,  0.2650,  0.0598,  0.0559, -0.3882,  0.3231,
         -0.1448,  0.0105,  0.5203, -0.0998,  0.1953, -0.0479, -0.2901, -0.0536],
        [ 0.0436, -0.0041,  0.0134, -0.2038, -0.0119, -0.1191,  0.1391, -0.2159,
          0.1617,  0.0680, -0.1011,  0.3194,  0.6062, -0.3602, -0.1620,  0.5213]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0022,  0.0015,  0.0005, -0.0002, -0.0004, -0.0025, -0.0021,  0.0011,
         -0.0025,  0.0005, -0.0020,  0.0005,  0.0067, -0.0154, -0.0035,  0.0295],
        [-0.0212, -0.0353,  0.0095, -0.0116, -0.0200, -0.0187, -0.0494, -0.0156,
          0.0029, -0.0157, -0.0107,  0.0044,  0.0061, -0.0370,  0.0006,  0.0511]],
       device='cuda:0') 

model.nns.4.lin_pos_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[ 0.6718,  0.7560, -0.5413,  0.6475,  0.3483,  0.4606,  0.6343,  0.5633],
        [-0.6628,  0.1052, -0.1161, -0.0883, -0.6054, -0.4158, -0.2257, -0.0088]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0085,  0.0165, -0.0092,  0.0146,  0.0037,  0.0021,  0.0497,  0.0094],
        [ 0.0208,  0.0397, -0.0164,  0.0248,  0.0076,  0.0078,  0.0929,  0.0216]],
       device='cuda:0') 

model.nns.4.lin_pos_r.bias 2 torch.Size([2])
Parameter containing:
tensor([-0.0529, -0.0242], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0020, -0.0160], device='cuda:0') 

model.nns.4.lin_neg_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2484,  0.1997,  0.1069,  0.1233,  0.0773,  0.2881, -0.0013, -0.2604,
         -0.3469, -0.1172, -0.0297, -0.0196, -0.1965, -0.2227,  0.2887,  0.1657],
        [-0.1848,  0.2207,  0.2822, -0.3063, -0.3160, -0.2401, -0.2359, -0.2126,
          0.0777,  0.0422, -0.2559,  0.0343, -0.0273,  0.3249, -0.0821, -0.1477]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0307, -0.0563, -0.0328,  0.0128, -0.0109, -0.0203,  0.0281, -0.0172,
         -0.0428, -0.0711,  0.0191, -0.0177, -0.0510, -0.0451, -0.0810, -0.0277],
        [-0.0514,  0.0952,  0.0592, -0.0208,  0.0205,  0.0291, -0.0474,  0.0273,
          0.0880,  0.1284, -0.0321,  0.0421,  0.1021,  0.0911,  0.1462,  0.0499]],
       device='cuda:0') 

model.nns.4.lin_neg_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[-0.0202,  0.4590,  0.5652,  0.1043,  0.6229, -0.7139,  0.0314,  0.3987],
        [-0.3259,  0.4887,  0.4520, -0.2258,  0.0642, -0.3732, -0.4242, -0.1721]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0380, -0.0858, -0.0523,  0.0146, -0.0455,  0.0049,  0.0360, -0.0380],
        [-0.0697,  0.1547,  0.0774, -0.0182,  0.1248, -0.0514, -0.0686,  0.1192]],
       device='cuda:0') 

model.nns.4.lin_neg_r.bias 2 torch.Size([2])
Parameter containing:
tensor([ 0.1664, -0.1779], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0847,  0.1430], device='cuda:0') 

head.0.model.0.weight 240 torch.Size([10, 24])
Parameter containing:
tensor([[ 0.1159, -0.4480,  0.1822,  0.3382, -0.0233,  0.0134,  0.0351,  0.0490,
         -0.0632, -0.0249,  0.1526,  0.1021,  0.2054, -0.0238,  0.0851,  0.0647,
         -0.1139,  0.1586, -0.4661, -0.5207,  0.1688, -0.1818, -0.2808,  0.0627],
        [-0.2425, -0.0928, -0.0459, -0.1487, -0.0491,  0.0350,  0.0538,  0.0794,
         -0.2315,  0.1327,  0.0417,  0.0845,  0.3340,  0.0908, -0.2055, -0.3480,
          0.3742,  0.0484, -0.1514, -0.0560, -0.1272, -0.3084,  0.1066,  0.1057],
        [-0.1768,  0.4382, -0.1300,  0.2009,  0.1213,  0.0436, -0.1014,  0.2743,
         -0.2980,  0.2832,  0.0488, -0.3760, -0.1875,  0.0240,  0.0045, -0.0813,
         -0.0822,  0.0936,  0.1269,  0.2847,  0.0986,  0.1636,  0.1448,  0.2834],
        [-0.3049, -0.3054,  0.0255,  0.2405, -0.1097,  0.0859,  0.0064, -0.0226,
         -0.2460,  0.0705,  0.0748,  0.1395,  0.2647, -0.0656,  0.0770, -0.0332,
          0.1568, -0.0411, -0.0080, -0.3885, -0.1508, -0.0882, -0.0800,  0.0982],
        [-0.2196, -0.1245,  0.0236,  0.1140, -0.2227, -0.0381,  0.1210,  0.0522,
         -0.2895,  0.0247, -0.2024,  0.2492,  0.4777,  0.0108, -0.0678,  0.0108,
          0.2177,  0.0261, -0.0852, -0.4206, -0.1228, -0.1675,  0.0636,  0.0572],
        [ 0.0070,  0.0321, -0.0771, -0.1802, -0.3197, -0.0063, -0.0450, -0.3054,
          0.1488, -0.0082,  0.0666, -0.3343, -0.3681,  0.3853, -0.0636,  0.0980,
         -0.1285, -0.0834,  0.1764,  0.4191,  0.0534, -0.0710,  0.0062, -0.3575],
        [ 0.1427, -0.0253, -0.0573,  0.2713, -0.1077, -0.0510, -0.0073, -0.0278,
          0.1500, -0.1075, -0.0060,  0.3227,  0.3890, -0.3108,  0.3950, -0.2378,
          0.2018,  0.1483, -0.5859, -0.3508, -0.0727, -0.2911, -0.1426,  0.0222],
        [ 0.1954,  0.0938,  0.0701, -0.0628,  0.0872, -0.1499, -0.3468, -0.1158,
          0.0455, -0.1727, -0.0533, -0.1672, -0.4380,  0.1229, -0.1387,  0.0121,
         -0.2988,  0.0615,  0.1555,  0.2491,  0.0464, -0.0392, -0.1327, -0.0222],
        [-0.2248, -0.0189,  0.0609,  0.2717,  0.1347,  0.1751,  0.1341, -0.0566,
          0.0045, -0.1193, -0.0257,  0.1902,  0.2231, -0.3381,  0.2342, -0.0074,
          0.1383,  0.3300, -0.3820, -0.1354,  0.0792,  0.1485, -0.0570,  0.2456],
        [-0.2242, -0.0604, -0.1148, -0.0891, -0.0793, -0.1918,  0.1694,  0.0829,
         -0.3371, -0.0257, -0.0099,  0.1423,  0.4155,  0.0034, -0.0061, -0.4099,
          0.1462,  0.0890,  0.1315, -0.3082, -0.2285,  0.0362,  0.0205,  0.0097]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 1.0781e-01, -2.4346e-02,  5.4175e-02,  5.0043e-02,  2.2876e-01,
         -3.6458e-02, -5.0597e-03,  3.6599e-02,  6.6649e-01, -1.4228e-01,
          2.4578e-01,  2.6445e-01, -9.4408e-02,  2.2260e-02, -4.4356e-02,
         -4.3727e-02, -3.8995e-02,  3.0811e-03,  1.5312e-02,  7.4170e-04,
          8.3322e-02, -2.0937e-02,  5.1644e-02,  4.5186e-02],
        [-3.0505e-04, -5.0766e-04,  3.1473e-03,  6.2358e-04, -2.7942e-04,
          9.1501e-04, -5.8474e-03, -2.6305e-03,  1.5860e-02, -4.9879e-03,
          1.3476e-02,  7.8736e-03,  5.3453e-05,  5.4145e-04, -2.4806e-03,
         -7.9017e-04, -1.1672e-02,  1.6871e-03, -1.5430e-04, -3.8252e-03,
         -3.3199e-03, -3.7017e-05,  2.7640e-03, -2.8002e-04],
        [-1.2347e-03,  3.3101e-03, -1.8742e-02, -7.5781e-03, -2.6097e-02,
          1.1744e-03,  1.7514e-02,  4.0256e-03, -7.5902e-02,  2.6125e-02,
         -8.1016e-02, -5.3440e-02,  1.0834e-03, -3.0748e-03,  1.4611e-02,
          6.9789e-03,  4.5547e-02, -5.9904e-03, -3.3580e-03,  1.1004e-02,
          1.1713e-02,  1.2414e-03, -1.6941e-02, -3.9105e-03],
        [ 1.4022e-03, -1.0978e-03,  5.2301e-03,  2.4636e-03,  7.9060e-03,
         -4.7490e-04, -5.2354e-03, -8.9807e-04,  2.6970e-02, -8.3147e-03,
          2.3017e-02,  1.6502e-02, -1.0559e-03,  1.0152e-03, -4.1728e-03,
         -2.2399e-03, -1.3564e-02,  1.8211e-03,  6.8273e-04, -3.3478e-03,
         -2.5624e-03, -4.8913e-04,  4.7753e-03,  1.4242e-03],
        [-6.4113e-04, -1.7612e-03,  1.0764e-02,  4.7888e-03,  1.6572e-02,
         -1.0969e-03, -9.3411e-03, -1.4180e-03,  4.2205e-02, -1.5286e-02,
          4.7992e-02,  3.2614e-02,  3.4876e-04,  1.7308e-03, -8.6878e-03,
         -4.3971e-03, -2.8934e-02,  3.7984e-03,  1.9678e-03, -6.0442e-03,
         -8.6055e-03, -5.3305e-04,  9.9268e-03,  2.8202e-03],
        [ 4.8917e-02, -3.2098e-03, -2.9057e-02, -2.4780e-03, -9.8854e-04,
         -7.0508e-03,  3.2069e-02,  1.6876e-02,  3.1438e-02,  1.8848e-02,
         -1.3593e-01, -5.4748e-02, -3.7687e-02,  1.1965e-03,  2.3976e-02,
          3.7354e-03,  1.2417e-01, -1.8031e-02, -5.6156e-03,  2.3719e-02,
          7.8411e-02, -7.9126e-03, -2.6595e-02,  4.1206e-03],
        [-1.5723e-03, -6.5614e-03,  3.9790e-02,  1.9952e-02,  7.7247e-02,
         -7.6408e-03, -2.7184e-02,  5.8146e-04,  1.5330e-01, -5.6569e-02,
          1.8144e-01,  1.2846e-01,  4.6474e-04,  6.5350e-03, -3.2686e-02,
         -1.8117e-02, -1.0052e-01,  1.2921e-02,  8.6786e-03, -1.7595e-02,
         -2.9294e-02, -2.3569e-03,  3.7201e-02,  1.3614e-02],
        [ 1.4097e-02,  3.0255e-03, -2.8613e-02, -1.0503e-02, -3.5401e-02,
          9.1531e-04,  2.6246e-02,  6.3306e-03, -7.3752e-02,  3.5455e-02,
         -1.2741e-01, -7.8947e-02, -9.3700e-03, -3.4782e-03,  2.3132e-02,
          9.9925e-03,  8.7247e-02, -1.1421e-02, -5.7768e-03,  1.7369e-02,
          3.5892e-02, -3.5939e-04, -2.6485e-02, -5.1601e-03],
        [-7.8756e-04, -6.3677e-03,  3.4127e-02,  1.2163e-02,  3.1177e-02,
          1.9839e-03, -3.8859e-02, -1.2526e-02,  1.3635e-01, -5.2565e-02,
          1.6355e-01,  9.8672e-02,  4.1283e-03,  5.6400e-03, -2.8776e-02,
         -1.1734e-02, -1.0498e-01,  1.4095e-02,  3.4635e-03, -2.5654e-02,
         -2.9815e-02, -1.9452e-03,  3.1356e-02,  4.9587e-03],
        [-3.4926e-03, -1.3953e-04,  3.9679e-03, -1.6746e-04, -6.0098e-03,
          2.3907e-03, -8.6856e-03, -4.9167e-03,  1.2181e-02, -5.1362e-03,
          1.7210e-02,  6.7597e-03,  2.6176e-03,  2.9300e-04, -3.1057e-03,
         -2.0291e-04, -1.8967e-02,  2.8377e-03, -4.2844e-04, -5.9210e-03,
         -8.2784e-03,  6.1962e-04,  3.4119e-03, -1.5039e-03]], device='cuda:0') 

head.0.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([-0.1224, -0.2540,  0.3426, -0.1376,  0.0005,  0.0652, -0.0572,  0.1285,
         0.0111,  0.0695], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0418, -0.0016, -0.0001,  0.0003,  0.0007,  0.0099,  0.0074,  0.0004,
        -0.0045, -0.0034], device='cuda:0') 

head.1.model.0.weight 100 torch.Size([10, 10])
Parameter containing:
tensor([[-0.7510,  0.0388, -0.0584,  0.0592, -0.1445,  0.2424, -0.1619,  0.3440,
         -0.7301, -0.2723],
        [ 0.0659, -0.0551, -0.1618,  0.2859,  0.0900,  0.1402, -0.1038, -0.2548,
         -0.0544, -0.1349],
        [-0.0599, -0.2505, -0.5906,  0.1515,  0.3305,  0.0314,  0.3704, -0.1267,
          0.2613, -0.1098],
        [-0.0440, -0.3384,  0.3913,  0.0155,  0.0109,  0.2153, -0.1959,  0.3182,
          0.1815,  0.1558],
        [-0.0011,  0.3202, -0.1111,  0.2877,  0.5053, -0.5462,  0.3061, -0.1617,
          0.4001,  0.5466],
        [ 0.2743, -0.0736, -0.3121,  0.1640,  0.1816, -0.2294,  0.3179,  0.1171,
         -0.1074,  0.0489],
        [-0.2246, -0.2693,  0.3620, -0.1861, -0.2906,  0.0685, -0.1415,  0.3911,
          0.0258,  0.2205],
        [ 0.0748,  0.2361, -0.0880,  0.2240,  0.0508, -0.6452, -0.0176, -0.2158,
          0.3226,  0.3884],
        [ 0.4607,  0.1232, -0.3829, -0.1511, -0.0844, -0.3688,  0.1534,  0.0795,
          0.4070, -0.0125],
        [-0.1700, -0.1565,  0.2825,  0.0227, -0.1313,  0.1397,  0.0264,  0.1968,
         -0.1465, -0.2687]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0187, -0.0028,  0.0020, -0.0118, -0.0036,  0.0185,  0.0051, -0.0002,
         -0.0057, -0.0113],
        [ 0.0050, -0.0023, -0.0036, -0.0012, -0.0033, -0.0030,  0.0053,  0.0047,
          0.0025, -0.0021],
        [ 0.0236, -0.0113, -0.0170, -0.0063, -0.0168, -0.0164,  0.0262,  0.0220,
          0.0149, -0.0102],
        [-0.0099,  0.0036,  0.0061,  0.0008,  0.0050,  0.0070, -0.0082, -0.0085,
         -0.0046,  0.0025],
        [ 0.0114, -0.0060, -0.0110, -0.0013, -0.0054, -0.0014,  0.0119,  0.0140,
         -0.0030, -0.0055],
        [ 0.0408, -0.0207, -0.0296, -0.0132, -0.0314, -0.0304,  0.0483,  0.0388,
          0.0293, -0.0195],
        [-0.0205,  0.0091,  0.0143,  0.0045,  0.0134,  0.0135, -0.0214, -0.0187,
         -0.0120,  0.0079],
        [ 0.0130, -0.0066, -0.0121, -0.0017, -0.0063, -0.0017,  0.0141,  0.0150,
         -0.0019, -0.0062],
        [ 0.0203, -0.0095, -0.0145, -0.0051, -0.0138, -0.0132,  0.0222,  0.0187,
          0.0116, -0.0086],
        [-0.0259,  0.0117,  0.0184,  0.0060,  0.0171,  0.0159, -0.0273, -0.0239,
         -0.0137,  0.0107]], device='cuda:0') 

head.1.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([-0.0829, -0.1927, -0.1802,  0.2614,  0.0191, -0.1880,  0.0224, -0.0206,
        -0.3898,  0.2632], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0067,  0.0010,  0.0079, -0.0007, -0.0082,  0.0195, -0.0050, -0.0081,
         0.0056, -0.0056], device='cuda:0') 

head.2.model.0.weight 10 torch.Size([1, 10])
Parameter containing:
tensor([[-0.4740,  0.2269,  0.3306, -0.1701,  0.6286,  0.5614, -0.2746,  0.6296,
          0.2797, -0.3487]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0504, -0.0079,  0.0451, -0.0086, -0.0095,  0.0591, -0.0021, -0.0087,
          0.1003, -0.0004]], device='cuda:0') 

head.2.model.0.bias 1 torch.Size([1])
Parameter containing:
tensor([-0.0436], device='cuda:0', requires_grad=True) 
grad:  tensor([0.0144], device='cuda:0') 


Total parameters: 987
Total training + validation time: 10.0 hours
Final val loss: 0.6292776107788086

#### Plotting Script ####
Prediction Results:
results/ContactGNNEnergy/37/sample1230: 0.602175772190094
results/ContactGNNEnergy/37/sample1761: 0.6250904202461243
results/ContactGNNEnergy/37/sample40: 0.5209927558898926
results/ContactGNNEnergy/37/sample1751: 0.7022546529769897
results/ContactGNNEnergy/37/sample1718: 0.47181054949760437
Loss: 0.584464830160141 +- 0.0806947948264432

