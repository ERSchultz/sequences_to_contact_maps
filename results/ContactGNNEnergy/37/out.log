Took 860.0 seconds to move data to scratch
#### ARCHITECTURE ####
Sequential(
  (0): SignedConv(3, 8, first_aggr=True)
  (1): PReLU(num_parameters=1)
  (2): SignedConv(8, 8, first_aggr=False)
  (3): PReLU(num_parameters=1)
  (4): SignedConv(8, 2, first_aggr=False)
)
Sequential(
  (0): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=24, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (1): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (2): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=1, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
) 

Namespace(GNN_mode=True, act='prelu', autoencoder_mode=False, batch_size=4, bottleneck=None, channels=1, classes=10, criterion=<function mse_loss at 0x7faf6bca3040>, crop=None, cuda=True, data_folder='/scratch/midway2/erschultz/dataset_10_08_21', degree=True, delete_root=False, device=device(type='cuda'), dilation_list=None, dilation_list_head=None, dilation_list_trunk=None, down_sampling=None, gamma=0.1, gpus=1, head_act='prelu', head_architecture='concat-outer', head_hidden_sizes_list=[10, 10, 1], hidden_sizes_list=[8, 8, 2], id=37, ifile=None, ifile_folder=None, inner_act='prelu', k=4, kernel_w_list=None, log_file=<_io.TextIOWrapper name='results/ContactGNNEnergy/37/out.log' mode='a' encoding='UTF-8'>, loss='mse', lr=0.0001, m=1024, message_passing='SignedConv', milestones=None, min_subtraction=True, model_type='ContactGNNEnergy', n_epochs=100, nf=None, node_feature_size=3, num_workers=4, ofile_folder='results/ContactGNNEnergy/37', out_act='prelu', output_mode='energy', parameter_sharing=False, plot=True, plot_predictions=True, pre_transforms=['degree'], pre_transforms_processed=None, pretrained=False, print_mod=2, print_params=True, relabel_11_to_00=False, resume_training=False, root_name='ContactGNNEnergy2', save_mod=5, seed=42, shuffle=True, sparsify_threshold=0.176, sparsify_threshold_upper=None, split=[0.8, 0.1, 0.1], split_neg_pos_edges=True, split_neg_pos_edges_for_feature_augmentation=True, start_epoch=1, top_k=None, toxx=False, toxx_mode='mean', training_norm=None, transforms=None, transforms_processed=None, use_bias=True, use_edge_weights=False, use_node_features=False, use_parallel=False, use_scratch=True, verbose=False, weighted_LDP=False, weighted_degree=False, x_reshape=True, y_log_transform=True, y_norm=None, y_preprocessing='diag', y_reshape=True, ydtype=torch.float32)

#### INITIAL PARAMETERS ####
act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

inner_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

out_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

head_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1779, -0.5385, -0.3792],
        [-0.1922,  0.0903, -0.5080],
        [-0.2488, -0.3456,  0.0016],
        [-0.2148, -0.0400, -0.3912],
        [-0.3963, -0.3368, -0.1976],
        [-0.4557,  0.4841, -0.1146],
        [ 0.4968,  0.1799, -0.4889],
        [ 0.3995, -0.1589, -0.2213]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[-0.4792, -0.5740,  0.1652],
        [-0.1261,  0.2248, -0.4738],
        [ 0.4286, -0.4238, -0.0997],
        [ 0.1206,  0.2981,  0.4661],
        [ 0.5259, -0.4578,  0.1453],
        [-0.2483, -0.0633, -0.4321],
        [ 0.5259, -0.4237,  0.3086],
        [ 0.2029,  0.1876, -0.3121]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.5248,  0.1269,  0.0743, -0.5088,  0.2424, -0.0866, -0.2645,  0.4959],
       device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1287, -0.3194, -0.2922],
        [-0.0276,  0.3224, -0.1475],
        [-0.3294, -0.1977, -0.4313],
        [ 0.2059,  0.4469, -0.5435],
        [ 0.1341,  0.2983,  0.1047],
        [-0.2056,  0.3013,  0.3034],
        [ 0.2159, -0.1015, -0.1529],
        [ 0.0618, -0.1020, -0.1721]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.3690,  0.4962, -0.0572],
        [-0.1293,  0.0084, -0.0345],
        [ 0.1388,  0.1618, -0.5244],
        [-0.2131,  0.4862,  0.2249],
        [-0.0287, -0.3481, -0.3532],
        [-0.5172, -0.1882,  0.1950],
        [ 0.3681,  0.2666, -0.5103],
        [-0.3472, -0.0911,  0.5585]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.0835, -0.1495,  0.2389, -0.2199, -0.3737,  0.4214, -0.2625, -0.1157],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_l.weight torch.Size([8, 16])
Parameter containing:
tensor([[-0.0051, -0.1553, -0.0310,  0.1017, -0.2445,  0.0743, -0.1653, -0.1220,
          0.0960,  0.1988, -0.0683, -0.1026, -0.2261, -0.1289, -0.2189, -0.0572],
        [ 0.0510, -0.2342,  0.2183,  0.1568, -0.2447, -0.1194,  0.0815, -0.0514,
         -0.0272, -0.1129,  0.2008, -0.1397,  0.2073,  0.0161,  0.0503,  0.1950],
        [-0.0412, -0.1423, -0.0404,  0.2028, -0.1855,  0.0567, -0.2457,  0.1311,
          0.0924,  0.0106,  0.1073,  0.0003,  0.1383, -0.1979, -0.0367,  0.1109],
        [ 0.2490,  0.1273, -0.1818,  0.1923, -0.0557, -0.0534, -0.2272, -0.0394,
          0.1768,  0.0349, -0.1456,  0.0770, -0.0802,  0.2282, -0.2170, -0.0790],
        [-0.2414, -0.0985,  0.0788,  0.2407,  0.0420,  0.2451,  0.0489,  0.1444,
          0.2004,  0.2090, -0.1399,  0.2298,  0.1514, -0.1169, -0.1193, -0.2097],
        [ 0.0628, -0.2026,  0.1056,  0.0789, -0.2172,  0.0681, -0.0203,  0.1142,
          0.1434, -0.2485,  0.2293,  0.2097,  0.0995, -0.2285, -0.0893, -0.0725],
        [-0.0642,  0.1410,  0.0909,  0.1980, -0.0936,  0.0841,  0.0889, -0.2081,
         -0.2425, -0.1297,  0.1711, -0.2354, -0.2176,  0.1401,  0.1349,  0.2056],
        [-0.1887, -0.1830,  0.1282,  0.2174,  0.1496,  0.0392,  0.0824,  0.2373,
         -0.1613, -0.1135,  0.1749, -0.1711, -0.1379,  0.1825,  0.0789,  0.0808]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.weight torch.Size([8, 8])
Parameter containing:
tensor([[-0.1499, -0.0049,  0.3236, -0.2122,  0.0028,  0.1681, -0.2441,  0.3434],
        [-0.1766, -0.0849, -0.0957, -0.2304, -0.3469,  0.1994,  0.0939, -0.3311],
        [-0.2276,  0.3494,  0.1351,  0.1419, -0.2115, -0.1550, -0.0534, -0.0647],
        [-0.2423,  0.0291,  0.0351, -0.0448,  0.0490, -0.1401,  0.0920,  0.1333],
        [-0.1862, -0.3506,  0.1851,  0.0843, -0.1798,  0.3407, -0.1599,  0.2389],
        [ 0.1794, -0.2964,  0.2280, -0.3251, -0.1959, -0.0589, -0.2383,  0.3454],
        [-0.0709,  0.1404, -0.3157,  0.2035, -0.1099, -0.2689,  0.0517,  0.1713],
        [ 0.3060, -0.2159, -0.1740,  0.0680,  0.0959,  0.1359,  0.1941, -0.0802]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.1964,  0.2607, -0.0924,  0.2515,  0.1727,  0.3119, -0.2009, -0.1746],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_l.weight torch.Size([8, 16])
Parameter containing:
tensor([[-0.0723,  0.0127,  0.1500, -0.1427,  0.1252, -0.0896,  0.1510, -0.0119,
         -0.2190, -0.1376, -0.1809,  0.1240, -0.1676, -0.0208,  0.0539, -0.1371],
        [ 0.0721, -0.2441, -0.1789, -0.2265, -0.0756, -0.0911,  0.0358, -0.0462,
          0.1175,  0.2292,  0.0897, -0.0985, -0.2341,  0.0906, -0.1239,  0.1272],
        [ 0.1671,  0.0964,  0.2346,  0.2374,  0.0529, -0.1822,  0.2234, -0.1186,
         -0.1181,  0.2092,  0.1937,  0.0755,  0.0157, -0.2103, -0.0260,  0.2398],
        [ 0.0637,  0.0214, -0.0519, -0.0872,  0.1490,  0.0154,  0.1626, -0.0442,
          0.1092,  0.1032,  0.0399,  0.1571,  0.1567,  0.2317,  0.1922, -0.0639],
        [-0.2117,  0.0457, -0.0022, -0.0652, -0.0419,  0.0118,  0.1824,  0.0779,
         -0.0888, -0.1028, -0.0619, -0.0966,  0.2248,  0.1324,  0.2257,  0.0008],
        [ 0.0504,  0.0867, -0.2366,  0.0223, -0.0167, -0.1402, -0.1940,  0.2213,
          0.2033,  0.1159,  0.2386, -0.1015, -0.0432,  0.0947, -0.0413, -0.0491],
        [-0.2066,  0.0672, -0.1511,  0.0091,  0.2437, -0.0770, -0.0788,  0.1508,
         -0.0919, -0.0215,  0.2334, -0.1025, -0.1789, -0.1399, -0.0693, -0.1186],
        [-0.1297,  0.1010,  0.0425, -0.0800, -0.1942, -0.0787, -0.1055, -0.0814,
         -0.2255,  0.0539, -0.1837, -0.1947, -0.2043,  0.1043, -0.1505, -0.1032]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.weight torch.Size([8, 8])
Parameter containing:
tensor([[ 0.2771,  0.1877,  0.2027, -0.3357, -0.2535, -0.1335,  0.2921,  0.0362],
        [-0.2644,  0.0022, -0.2746, -0.0775, -0.0972,  0.3061,  0.1095, -0.0616],
        [ 0.0597, -0.1021,  0.1389,  0.1399,  0.0949, -0.1378,  0.3016, -0.0510],
        [-0.1376,  0.2214,  0.2882,  0.3518,  0.1047, -0.1205,  0.1796,  0.3033],
        [-0.3468, -0.0438, -0.2411,  0.0659,  0.1462, -0.0730, -0.0296,  0.1591],
        [-0.0594, -0.2969,  0.2829, -0.1779, -0.0388,  0.0333, -0.0212, -0.3326],
        [ 0.1622, -0.1606, -0.1834,  0.0845, -0.1845, -0.1634, -0.1191, -0.1328],
        [-0.1477, -0.0953,  0.0919, -0.2861, -0.2140,  0.0052,  0.0492,  0.1953]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([-0.2484,  0.1129,  0.2010,  0.1963, -0.3293, -0.1349, -0.3039, -0.2237],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2055, -0.2402,  0.1117,  0.2492,  0.1252,  0.0852, -0.2405,  0.2405,
         -0.0428, -0.2336,  0.2468, -0.1017, -0.0177,  0.2288, -0.1733, -0.1769],
        [ 0.0407, -0.0335,  0.0576, -0.2097,  0.0075, -0.1112, -0.1229, -0.2289,
          0.1326,  0.0482, -0.2114,  0.1984,  0.0754,  0.0464, -0.1468,  0.0377]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.3407,  0.2425, -0.2754,  0.3227,  0.0274,  0.1700,  0.2746,  0.3014],
        [-0.2756,  0.3096, -0.2401,  0.0265, -0.2471, -0.0775, -0.0161, -0.0423]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_r.bias torch.Size([2])
Parameter containing:
tensor([-0.0559,  0.0279], device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2466,  0.1453,  0.1399,  0.1001,  0.1935, -0.0115,  0.0199,  0.0514,
         -0.2180, -0.2014,  0.0307, -0.0978, -0.0046, -0.0574,  0.0389,  0.1627],
        [-0.0829,  0.2002,  0.1974, -0.1919, -0.1931, -0.2023, -0.1370, -0.0973,
         -0.0188, -0.0608, -0.1263, -0.0794, -0.0904,  0.2453, -0.0927, -0.1790]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.1470, -0.0204,  0.2707,  0.2209,  0.3248, -0.2589,  0.2273,  0.2967],
        [-0.1746,  0.3250,  0.2650,  0.0039,  0.1705, -0.1236, -0.3084,  0.0894]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_r.bias torch.Size([2])
Parameter containing:
tensor([ 0.1054, -0.2311], device='cuda:0', requires_grad=True) 

head.0.model.0.weight torch.Size([10, 24])
Parameter containing:
tensor([[ 9.9000e-02, -1.7437e-01,  1.7567e-01,  1.9767e-01,  5.5575e-02,
         -1.2807e-01,  9.9341e-02,  3.4786e-02,  5.5505e-02,  6.7086e-02,
          1.5541e-01, -8.7740e-02, -4.5917e-02,  5.5666e-02,  2.2242e-02,
          1.6460e-01, -1.0721e-01, -7.4335e-03,  3.8141e-02, -5.4213e-02,
          1.3915e-01,  2.2327e-02, -1.8866e-01, -2.2114e-02],
        [-9.2582e-02,  1.9835e-02, -2.3722e-02, -2.0248e-01, -3.7197e-02,
         -1.9551e-02, -6.0192e-02,  1.8755e-01, -4.4540e-02,  1.3113e-01,
          5.0565e-02, -1.7231e-01,  4.7966e-02,  1.6916e-01, -1.3352e-01,
         -1.3194e-01,  1.9981e-01,  1.6402e-01, -1.1388e-01,  1.2283e-01,
         -2.6114e-02, -2.0125e-01,  1.5337e-02,  6.5951e-02],
        [-6.1229e-02,  7.1011e-02, -1.7455e-01,  1.4146e-01,  1.7402e-01,
          1.1257e-01,  3.4597e-02,  6.7228e-02, -1.4769e-01, -5.1005e-02,
         -1.9487e-02, -1.1359e-01, -1.5077e-01,  1.3730e-01,  1.3853e-01,
         -1.8538e-01,  6.4955e-02,  8.3038e-02,  1.9391e-01,  1.1810e-01,
          1.8766e-01, -6.6828e-02,  1.4297e-01,  1.6603e-01],
        [-1.9276e-01, -1.6385e-01,  4.1316e-02,  1.1146e-01, -1.0141e-01,
          2.2481e-02, -2.9633e-04,  5.1665e-02, -1.0969e-01,  1.1513e-01,
          1.3574e-01, -1.4163e-01,  1.9774e-03,  5.6636e-04,  6.5547e-02,
          1.9016e-01,  5.9862e-02, -4.6381e-02,  1.8333e-01, -7.7676e-02,
         -5.9272e-02,  1.3937e-02, -1.5544e-01,  2.2212e-02],
        [-1.3849e-01,  2.0988e-02,  1.9557e-02,  2.8255e-02, -1.7214e-01,
         -1.9387e-01,  9.3921e-02,  1.7506e-01, -1.8113e-01,  7.5606e-02,
         -1.5026e-01,  1.2797e-02,  1.8991e-01,  1.5485e-01, -1.4924e-01,
          1.2627e-01,  1.0662e-01, -3.1310e-04,  1.9774e-01, -8.1073e-02,
         -4.7503e-02, -1.0317e-01,  2.9373e-02,  5.4049e-02],
        [ 1.6265e-02, -1.1485e-01, -9.1890e-02,  6.9433e-02, -1.7898e-01,
         -3.1789e-02, -4.5217e-03, -8.2704e-02,  7.4284e-02,  1.3157e-02,
          1.4331e-01, -1.8129e-02, -1.2883e-01,  1.4422e-01,  2.8506e-02,
         -5.8461e-02, -1.3454e-01,  4.7844e-02, -1.9468e-01,  5.3762e-02,
          1.0093e-01, -1.7906e-01, -1.3363e-01, -1.4675e-01],
        [ 1.7157e-01,  1.7353e-01,  1.2778e-02,  1.9163e-01, -6.8240e-02,
         -1.9817e-01,  7.1300e-02,  7.2315e-02,  2.0012e-01, -5.9082e-05,
          1.5644e-01,  1.2512e-01,  1.4774e-01, -2.0256e-01,  1.6809e-01,
         -1.7401e-01,  1.8300e-01, -8.4590e-03, -1.8090e-01,  5.6765e-02,
         -4.1549e-02, -1.8334e-01, -7.4003e-02,  2.1046e-02],
        [ 1.5898e-01, -6.2754e-02,  1.2124e-01,  2.5562e-02,  6.8806e-03,
          3.9058e-02, -1.3396e-01, -1.6967e-01, -6.4138e-02, -1.9021e-01,
         -9.5193e-02,  9.3909e-03, -1.3444e-01, -8.4670e-02, -3.6678e-02,
         -2.3516e-02, -1.1268e-01,  9.8084e-03, -2.8651e-02,  5.8379e-02,
          9.2198e-03, -1.0193e-01, -7.0277e-02, -2.3527e-03],
        [-1.2737e-01,  1.5980e-02, -1.4412e-02,  7.9196e-02,  4.8309e-02,
          1.5276e-01, -6.7290e-03, -1.5083e-01,  9.1245e-02, -1.3795e-01,
         -2.8057e-02, -6.6096e-02, -7.7454e-02, -7.5523e-02,  1.8757e-01,
          1.1685e-01,  5.6570e-02,  1.9166e-01, -1.8498e-01,  3.2939e-02,
          1.3068e-01,  1.3560e-01, -1.6245e-01,  7.2646e-02],
        [-1.1629e-01, -7.9759e-03, -4.2595e-02, -1.7044e-01, -1.9472e-01,
         -1.3429e-01,  9.2626e-02,  9.3374e-02, -1.7754e-01, -7.6657e-02,
          3.3342e-03, -1.7648e-01,  1.1501e-01,  1.8488e-01,  3.6102e-02,
         -1.5167e-01,  4.7599e-02,  7.4100e-02,  1.6163e-01, -1.0861e-01,
         -1.8288e-01,  8.9682e-02,  1.2708e-02, -6.6509e-02]], device='cuda:0',
       requires_grad=True) 

head.0.model.0.bias torch.Size([10])
Parameter containing:
tensor([-0.0855, -0.1052,  0.1652, -0.0352,  0.1472,  0.1822,  0.0259,  0.0435,
        -0.0139,  0.1402], device='cuda:0', requires_grad=True) 

head.1.model.0.weight torch.Size([10, 10])
Parameter containing:
tensor([[-0.2849,  0.1258, -0.0515,  0.1444, -0.0014, -0.1171, -0.0341,  0.1708,
         -0.2196, -0.1999],
        [-0.0708, -0.1147,  0.1242,  0.2128, -0.0339,  0.2990, -0.1321, -0.1775,
         -0.1416, -0.2179],
        [-0.2217, -0.2818, -0.2803,  0.0825,  0.1929,  0.2969,  0.2694, -0.0182,
          0.0614, -0.1892],
        [ 0.1222, -0.3032,  0.1492,  0.0580,  0.0972,  0.1158, -0.1452,  0.2714,
          0.1509,  0.2077],
        [ 0.0418,  0.1986,  0.2128,  0.1433,  0.2409, -0.0574,  0.2079,  0.0729,
          0.1903,  0.3080],
        [ 0.0716, -0.1174, -0.0315,  0.0890,  0.0533, -0.0864,  0.2478,  0.1900,
         -0.1964, -0.0258],
        [-0.0304, -0.1982,  0.0461, -0.0971, -0.1633, -0.1017, -0.1128,  0.3025,
          0.1213,  0.3112],
        [ 0.0867,  0.0716,  0.1300,  0.0543, -0.2482, -0.1870, -0.0766,  0.0048,
          0.1191,  0.1218],
        [ 0.2509,  0.0644, -0.1079, -0.2378, -0.2316, -0.1889,  0.0954,  0.1708,
          0.2767, -0.1000],
        [-0.0249, -0.0939, -0.0012,  0.1015, -0.0069,  0.0146,  0.0401,  0.1178,
         -0.0959, -0.1886]], device='cuda:0', requires_grad=True) 

head.1.model.0.bias torch.Size([10])
Parameter containing:
tensor([ 0.0746, -0.0374, -0.1433,  0.1328,  0.0029, -0.0460, -0.1531, -0.0416,
        -0.2689,  0.0719], device='cuda:0', requires_grad=True) 

head.2.model.0.weight torch.Size([1, 10])
Parameter containing:
tensor([[ 0.0047,  0.1919,  0.0204,  0.0253,  0.0861,  0.2406, -0.1494,  0.1888,
          0.0773, -0.2110]], device='cuda:0', requires_grad=True) 

head.2.model.0.bias torch.Size([1])
Parameter containing:
tensor([0.1101], device='cuda:0', requires_grad=True) 



#### TRAINING/VALIDATION ####
Epoch 2, loss = 1.7964
Mean test/val loss: 1.7500

Epoch 4, loss = 1.6987
Mean test/val loss: 1.7292

Epoch 6, loss = 1.6675
Mean test/val loss: 1.6851

Epoch 8, loss = 1.5851
Mean test/val loss: 1.5665

Epoch 10, loss = 1.5140
Mean test/val loss: 1.5071

Epoch 12, loss = 1.4898
Mean test/val loss: 1.4837

Epoch 14, loss = 1.4702
Mean test/val loss: 1.4670

Epoch 16, loss = 1.4539
Mean test/val loss: 1.4528

Epoch 18, loss = 1.4355
Mean test/val loss: 1.4354

Epoch 20, loss = 1.4134
Mean test/val loss: 1.4163

Epoch 22, loss = 1.3905
Mean test/val loss: 1.3968

Epoch 24, loss = 1.3708
Mean test/val loss: 1.3787

Epoch 26, loss = 1.3539
Mean test/val loss: 1.3633

Epoch 28, loss = 1.3394
Mean test/val loss: 1.3486

Epoch 30, loss = 1.3260
Mean test/val loss: 1.3372

Epoch 32, loss = 1.3142
Mean test/val loss: 1.3251

Epoch 34, loss = 1.3033
Mean test/val loss: 1.3141

Epoch 36, loss = 1.2923
Mean test/val loss: 1.3023

Epoch 38, loss = 1.2814
Mean test/val loss: 1.2959

Epoch 40, loss = 1.2702
Mean test/val loss: 1.2797

Epoch 42, loss = 1.2595
Mean test/val loss: 1.2694

Epoch 44, loss = 1.2494
Mean test/val loss: 1.2606

Epoch 46, loss = 1.2410
Mean test/val loss: 1.2513

Epoch 48, loss = 1.2330
Mean test/val loss: 1.2443

Epoch 50, loss = 1.2265
Mean test/val loss: 1.2377

Epoch 52, loss = 1.2202
Mean test/val loss: 1.2320

Epoch 54, loss = 1.2148
Mean test/val loss: 1.2282

Epoch 56, loss = 1.2096
Mean test/val loss: 1.2225

Epoch 58, loss = 1.2046
Mean test/val loss: 1.2167

Epoch 60, loss = 1.1993
Mean test/val loss: 1.2110

Epoch 62, loss = 1.1942
Mean test/val loss: 1.2100

Epoch 64, loss = 1.1889
Mean test/val loss: 1.2000

Epoch 66, loss = 1.1839
Mean test/val loss: 1.1956

Epoch 68, loss = 1.1786
Mean test/val loss: 1.1885

Epoch 70, loss = 1.1741
Mean test/val loss: 1.1833

Epoch 72, loss = 1.1693
Mean test/val loss: 1.1797

Epoch 74, loss = 1.1644
Mean test/val loss: 1.1743

Epoch 76, loss = 1.1599
Mean test/val loss: 1.1721

Epoch 78, loss = 1.1557
Mean test/val loss: 1.1659

Epoch 80, loss = 1.1517
Mean test/val loss: 1.1602

Epoch 82, loss = 1.1473
Mean test/val loss: 1.1569

Epoch 84, loss = 1.1429
Mean test/val loss: 1.1517

Epoch 86, loss = 1.1393
Mean test/val loss: 1.1475

Epoch 88, loss = 1.1352
Mean test/val loss: 1.1454

Epoch 90, loss = 1.1320
Mean test/val loss: 1.1441

Epoch 92, loss = 1.1289
Mean test/val loss: 1.1399

Epoch 94, loss = 1.1245
Mean test/val loss: 1.1316

Epoch 96, loss = 1.1207
Mean test/val loss: 1.1284

Epoch 98, loss = 1.1173
Mean test/val loss: 1.1243

Epoch 100, loss = 1.1143
Mean test/val loss: 1.1185

#### FINAL PARAMETERS ####
act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.3079], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.8824], device='cuda:0') 

inner_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.5335], device='cuda:0', requires_grad=True) 
grad:  tensor([0.3616], device='cuda:0') 

out_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.6647], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.3362], device='cuda:0') 

head_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.4361], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.4475], device='cuda:0') 

model.nns.0.lin_pos_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.4068, -0.3523, -0.0975],
        [-0.1676,  0.2790, -0.5400],
        [-0.1708, -0.0340, -0.0201],
        [-0.2134,  0.2428, -0.4845],
        [-0.3893, -0.1031, -0.2929],
        [-0.4984,  0.2717, -0.0840],
        [ 0.4774,  0.4526, -0.5958],
        [ 0.3967, -0.2610, -0.2638]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0107,  0.0052, -0.0139],
        [-0.0132, -0.0022, -0.0114],
        [-0.0262, -0.0107, -0.0203],
        [ 0.1481,  0.0993,  0.1139],
        [ 0.0506,  0.0401,  0.0362],
        [ 0.0479,  0.0275,  0.0373],
        [ 0.0786,  0.0548,  0.0602],
        [-0.1643, -0.0971, -0.1264]], device='cuda:0') 

model.nns.0.lin_pos_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[-1.0142, -0.9533, -0.1280],
        [-0.2365,  0.2418, -0.5110],
        [ 0.3854, -0.6895,  0.1224],
        [ 0.3152,  0.0389,  0.9569],
        [ 0.5062, -0.9151,  0.3858],
        [-0.2776,  0.1434, -0.6533],
        [ 0.3630, -0.7148,  0.4080],
        [ 0.3863,  0.3564, -0.2651]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0485,  0.0185, -0.0597],
        [-0.0355,  0.0255, -0.0469],
        [-0.0827, -0.0030, -0.0820],
        [ 0.1109,  0.0662,  0.0839],
        [-0.0109,  0.0293, -0.0249],
        [ 0.0481,  0.0229,  0.0393],
        [ 0.0241,  0.0335,  0.0114],
        [-0.1293, -0.0954, -0.0879]], device='cuda:0') 

model.nns.0.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.6694,  0.1310,  0.2471, -0.3767,  0.2889, -0.1926, -0.2283,  0.4852],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0399, -0.0267, -0.0574,  0.1986,  0.0459,  0.0686,  0.0955, -0.2294],
       device='cuda:0') 

model.nns.0.lin_neg_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[-0.0566, -0.5340, -0.5071],
        [ 0.1947,  0.4811,  0.0890],
        [-0.2813, -0.4902, -0.3349],
        [ 0.5301,  0.7422, -0.2204],
        [ 0.3226,  0.4386,  0.2998],
        [-0.1496,  0.3455,  0.3854],
        [ 0.3174,  0.0459, -0.0757],
        [ 0.1095,  0.0021, -0.0777]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.1402, -0.0519, -0.1167],
        [ 0.0180,  0.0036,  0.0156],
        [-0.0808, -0.0387, -0.0624],
        [-0.1054, -0.0455, -0.0920],
        [-0.0063, -0.0055, -0.0054],
        [ 0.1068,  0.0398,  0.0904],
        [-0.1896, -0.0540, -0.1672],
        [ 0.0624,  0.0256,  0.0522]], device='cuda:0') 

model.nns.0.lin_neg_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.4804,  0.8624,  0.0020],
        [-0.4017, -0.4020, -0.2727],
        [ 0.4082,  0.6589, -0.2919],
        [-0.3130,  0.4494, -0.0285],
        [-0.1943, -0.7208, -0.5078],
        [-0.3840, -0.0753,  0.3184],
        [ 0.3620,  0.1264, -0.6056],
        [-0.4719, -0.3260,  0.4743]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.1990, -0.1460, -0.1502],
        [ 0.0371,  0.0268,  0.0288],
        [-0.1420, -0.0534, -0.1282],
        [ 0.0015,  0.0131,  0.0137],
        [ 0.0160,  0.0081,  0.0157],
        [ 0.1305,  0.0740,  0.1024],
        [-0.1579, -0.1536, -0.0778],
        [ 0.0694,  0.0378,  0.0555]], device='cuda:0') 

model.nns.0.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.0156, -0.1335,  0.4243, -0.1595, -0.3416,  0.5101, -0.2809, -0.1120],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.2355,  0.0393, -0.1562, -0.0965,  0.0061,  0.1673, -0.2336,  0.0968],
       device='cuda:0') 

model.nns.2.lin_pos_l.weight 128 torch.Size([8, 16])
Parameter containing:
tensor([[ 0.2187, -0.1675,  0.2159,  0.2538,  0.1891,  0.0587,  0.1519, -0.1996,
          0.4789, -0.0253,  0.1669, -0.1653, -0.4834, -0.2172, -0.4326, -0.2146],
        [ 0.2804, -0.3172,  0.5656,  0.5486,  0.3151, -0.2305,  0.3859, -0.0316,
          0.5731, -0.6047,  0.3691, -0.5672, -0.3435, -0.0709, -0.3155, -0.0538],
        [-0.7214, -0.1091, -0.7045, -0.1821, -1.3283,  0.0564, -0.9569,  0.4074,
          0.1219,  0.0184,  0.1142,  0.9456,  0.1264, -0.0468,  0.5255, -0.2083],
        [ 0.5492,  0.1253,  0.0075,  0.2148,  0.2754, -0.0470,  0.0624, -0.1501,
          0.4495, -0.0988,  0.0362,  0.0596, -0.2372,  0.1284, -0.3604, -0.1463],
        [-0.1179, -0.0661,  0.1520,  0.5096,  0.2963,  0.2647,  0.1636,  0.0936,
          0.5414, -0.0124,  0.0831,  0.0563, -0.1088, -0.2227, -0.3673, -0.3496],
        [ 0.2765, -0.1532,  0.2405, -0.0015,  0.0046,  0.0991,  0.1137,  0.0631,
          0.4439, -0.4155,  0.4991,  0.0043, -0.0819, -0.3409, -0.1985, -0.1831],
        [ 0.1728,  0.2436,  0.2624,  0.3106,  0.2520,  0.1644,  0.2784, -0.3543,
          0.4110, -0.6067,  0.5138, -0.4213, -0.7358, -0.1089,  0.0103, -0.0590],
        [ 0.1398, -0.1742,  0.3120,  0.3440,  0.5657,  0.0692,  0.2131,  0.1133,
          0.1479, -0.3586,  0.3878, -0.7049, -0.3686,  0.0064, -0.2072, -0.0023]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0132,  0.0058, -0.0081, -0.0126, -0.0116,  0.0120, -0.0081, -0.0358,
         -0.0212,  0.0100, -0.0172,  0.0045,  0.0129, -0.0192,  0.0055,  0.0023],
        [-0.0061, -0.0181,  0.0211,  0.0038,  0.0073, -0.0337,  0.0243,  0.0855,
         -0.0036, -0.0043,  0.0056,  0.0409, -0.0058,  0.0824, -0.0027, -0.0064],
        [-0.0030,  0.0117, -0.0166,  0.0035, -0.0067,  0.0226, -0.0124, -0.0593,
          0.0246, -0.0002,  0.0118, -0.0253,  0.0001, -0.0643,  0.0037,  0.0022],
        [ 0.0163,  0.0133, -0.0167, -0.0154, -0.0155,  0.0256, -0.0178, -0.0703,
         -0.0304,  0.0144, -0.0280, -0.0074,  0.0184, -0.0484,  0.0065,  0.0059],
        [-0.0031, -0.0084,  0.0089,  0.0023,  0.0027, -0.0151,  0.0113,  0.0373,
          0.0091, -0.0040,  0.0110,  0.0163, -0.0049,  0.0325, -0.0003, -0.0042],
        [ 0.0103,  0.0109, -0.0138, -0.0096, -0.0121,  0.0208, -0.0116, -0.0571,
         -0.0223,  0.0114, -0.0231, -0.0051,  0.0144, -0.0392,  0.0047,  0.0052],
        [-0.0137, -0.0164,  0.0172,  0.0081,  0.0064, -0.0322,  0.0233,  0.0869,
          0.0024, -0.0057,  0.0081,  0.0391, -0.0080,  0.0785, -0.0038, -0.0062],
        [ 0.0073, -0.0098,  0.0124, -0.0040,  0.0034, -0.0156,  0.0107,  0.0320,
         -0.0029, -0.0009,  0.0039,  0.0182, -0.0004,  0.0338,  0.0015, -0.0040]],
       device='cuda:0') 

model.nns.2.lin_pos_r.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[-0.5046, -0.2175,  0.3108, -0.1278, -0.0937, -0.0020, -0.2461,  0.3923],
        [-0.6417, -0.1740, -0.3478, -0.5408, -0.6202,  0.1597, -0.1557, -0.1317],
        [ 0.1692,  0.5099,  0.2901,  0.0058,  0.0078, -0.0910,  0.2371, -0.0958],
        [-0.5671, -0.3259,  0.0941,  0.1580,  0.0299, -0.4189,  0.1027,  0.1602],
        [-0.4285, -0.3624, -0.0177, -0.1079, -0.4463,  0.3438, -0.3349,  0.2927],
        [-0.2116, -0.4635,  0.3272, -0.0021, -0.2213, -0.1750, -0.2265,  0.4008],
        [-0.5951,  0.3489, -0.6967,  0.0968, -0.4773, -0.0332, -0.2761,  0.3574],
        [ 0.0765, -0.3094, -0.2467,  0.0806, -0.0036,  0.0868,  0.1199, -0.1212]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0179, -0.0099,  0.0566,  0.0517,  0.0868, -0.0054,  0.0575, -0.0564],
        [-0.0097, -0.0284,  0.0612,  0.0489,  0.0739, -0.0459,  0.0606,  0.0806],
        [ 0.0201,  0.0246, -0.0599, -0.0650, -0.0861,  0.0389, -0.0584, -0.0647],
        [ 0.0154, -0.0006,  0.0368,  0.0418,  0.0661,  0.0101,  0.0370, -0.0847],
        [ 0.0055, -0.0124,  0.0302,  0.0166,  0.0342, -0.0192,  0.0314,  0.0265],
        [ 0.0119,  0.0033,  0.0151,  0.0209,  0.0329,  0.0124,  0.0155, -0.0642],
        [-0.0211, -0.0212,  0.0320,  0.0326,  0.0336, -0.0383,  0.0353,  0.0897],
        [ 0.0141, -0.0277,  0.0889,  0.0646,  0.1157, -0.0351,  0.0910,  0.0052]],
       device='cuda:0') 

model.nns.2.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.1636,  0.3399,  0.0502,  0.1899,  0.1367,  0.2773, -0.3174, -0.2612],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0379,  0.1152, -0.0868, -0.0830,  0.0491, -0.0690,  0.1103,  0.0493],
       device='cuda:0') 

model.nns.2.lin_neg_l.weight 128 torch.Size([8, 16])
Parameter containing:
tensor([[ 0.0943, -0.0770,  0.3817,  0.0960,  0.0348, -0.1416,  0.2649, -0.0151,
         -0.2530, -0.1570, -0.2455,  0.1958, -0.2629, -0.0054,  0.0034, -0.2209],
        [-0.0075, -0.2160, -0.3578, -0.4600, -0.0269, -0.1675, -0.2833,  0.0908,
         -0.1286,  0.1537,  0.4345,  0.5471,  0.0746, -0.0472,  0.0862,  0.1830],
        [ 0.0819,  0.1668,  0.0882, -0.0985,  0.1468, -0.1988,  0.1780, -0.1030,
         -0.1287,  0.2426,  0.1463,  0.0187, -0.1146, -0.1894, -0.0536,  0.2657],
        [ 0.0029,  0.0423, -0.0330, -0.0439,  0.1560, -0.0244,  0.0650,  0.0871,
          0.0198,  0.1072,  0.0925,  0.9954,  0.2347,  0.2198,  0.1831, -0.1077],
        [-0.4543,  0.2345, -0.3095, -0.5088,  0.1601, -0.0558, -0.0273,  0.3690,
         -0.4084, -0.1218,  0.0307,  0.6072,  0.2465,  0.0236,  0.3343,  0.0271],
        [ 0.2290, -0.1388, -0.0882, -0.1345, -0.1910, -0.0304, -0.4981,  0.0671,
          0.6748,  0.0079,  0.2629, -0.6922,  0.0313,  0.0783, -0.0412, -0.0682],
        [-0.1706,  0.0311, -0.0220,  0.2236,  0.1959, -0.0799, -0.0237,  0.1837,
         -0.0733, -0.0124,  0.1464, -0.0528, -0.2522, -0.1181, -0.1674, -0.1635],
        [-0.2335,  0.1661, -0.0059, -0.0480, -0.1466, -0.0810, -0.2480,  0.0804,
         -0.4115,  0.0198, -0.1067,  0.8165, -0.1327,  0.0451, -0.0826, -0.1146]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-7.3627e-04, -4.7534e-04,  2.2458e-04, -1.2155e-03, -4.4392e-04,
          1.6668e-03, -2.0221e-04, -1.3479e-04,  1.1738e-04, -1.1099e-03,
          3.0201e-03,  2.0336e-03,  4.1762e-03, -1.5838e-03,  1.6905e-03,
          2.1177e-03],
        [-1.3443e-02,  3.9338e-03, -1.0431e-02, -1.5210e-03,  5.0479e-03,
         -3.8091e-03,  1.1310e-04,  1.8350e-03,  3.6912e-03,  4.8238e-03,
         -1.6973e-02, -1.7914e-02, -2.4479e-02,  6.9839e-03, -2.1298e-02,
         -2.7049e-03],
        [-1.3852e-01,  6.2011e-02, -1.5630e-01, -9.9091e-02,  7.9620e-02,
         -2.7963e-01,  1.4304e-02,  4.2410e-02,  3.0627e-02,  8.5535e-02,
         -1.4494e-01, -7.6465e-02, -1.2904e-01,  1.5138e-01, -1.4908e-01,
         -3.3869e-01],
        [ 6.4296e-02, -3.0332e-02,  7.6259e-02,  5.1661e-02, -3.9196e-02,
          1.4626e-01, -7.7068e-03, -2.1276e-02, -1.3587e-02, -4.2033e-02,
          6.6684e-02,  2.9455e-02,  5.4087e-02, -7.5578e-02,  6.4212e-02,
          1.7788e-01],
        [-5.1370e-03,  1.1271e-03, -3.6537e-03, -1.1133e-03,  1.4787e-03,
         -2.9270e-04, -1.3151e-04,  6.3372e-04,  2.3553e-03,  9.3932e-04,
         -2.7493e-03, -4.6256e-03, -4.5434e-03,  1.5004e-03, -4.9451e-03,
         -1.2862e-03],
        [-1.3104e-02,  4.0076e-03, -1.6785e-02, -1.9839e-02,  6.5364e-03,
         -3.3940e-02,  1.4493e-03,  4.7238e-03, -2.3903e-03,  2.8318e-03,
          6.4243e-03,  1.8084e-02,  2.2580e-02,  8.7542e-03,  8.8658e-03,
         -4.0047e-02],
        [ 1.3976e-02, -6.8001e-03,  1.6371e-02,  1.1306e-02, -8.6827e-03,
          3.2431e-02, -1.7085e-03, -4.6484e-03, -2.4389e-03, -1.0128e-02,
          1.8141e-02,  9.0956e-03,  1.6380e-02, -1.7627e-02,  1.8689e-02,
          3.7466e-02],
        [ 3.5785e-03, -2.3740e-03,  5.4009e-03,  4.9327e-03, -3.0545e-03,
          1.4649e-02, -8.3692e-04, -1.7595e-03,  3.1369e-04, -3.8769e-03,
          6.0236e-03,  8.3338e-04,  3.7708e-03, -6.9306e-03,  5.2183e-03,
          1.6280e-02]], device='cuda:0') 

model.nns.2.lin_neg_r.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[-2.2932e-01,  6.0531e-01, -9.2170e-02, -7.4074e-01,  1.4459e-01,
         -3.2341e-02, -2.3570e-01,  4.3021e-01],
        [-4.5236e-01,  1.5170e-01, -5.2367e-01,  4.6372e-01,  1.4391e-01,
          3.6180e-01,  4.5780e-01, -1.9033e-01],
        [ 3.4597e-01, -3.5595e-01,  3.1056e-01,  1.2247e-01, -1.0936e-01,
         -2.3088e-01,  6.0715e-01, -1.6648e-01],
        [-4.4616e-01,  4.1331e-01,  1.1248e-01,  8.3976e-01,  3.1405e-01,
         -6.6600e-02,  2.9763e-01,  3.9254e-01],
        [-4.4993e-01, -9.6302e-02, -3.5635e-01,  4.0334e-01,  1.8615e-01,
         -7.8039e-02,  2.3727e-01,  1.5202e-01],
        [ 2.9216e-01, -5.5980e-01,  5.1907e-01, -6.4481e-01, -3.5760e-01,
         -2.8821e-04, -4.4788e-01, -4.5116e-01],
        [-2.3835e-01,  9.3069e-02, -4.0057e-01, -2.1445e-01,  4.9096e-02,
         -5.0775e-02, -6.4162e-01,  1.4419e-01],
        [-4.3945e-01, -5.2363e-03, -8.3456e-02,  8.2009e-02, -5.7432e-02,
          9.5364e-02,  1.4449e-01,  3.1997e-01]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[ 3.2436e-03, -6.8451e-04,  4.5229e-03,  1.9551e-03, -8.7595e-04,
          6.5723e-04,  1.0251e-03, -1.1739e-03],
        [-1.9558e-02,  5.1782e-04, -2.6575e-02, -2.0413e-02,  1.5017e-03,
         -1.1424e-03, -7.3768e-03,  6.8390e-03],
        [-1.7262e-01,  6.1549e-02, -1.9742e-01, -1.4266e-01,  8.1411e-02,
         -2.7105e-01, -4.0813e-04,  5.3380e-02],
        [ 6.9083e-02, -2.9723e-02,  8.1774e-02,  6.2855e-02, -3.9285e-02,
          1.4571e-01, -5.3833e-03, -2.2779e-02],
        [-5.8331e-03, -3.0591e-04, -6.8611e-03, -8.7147e-03,  1.7721e-05,
         -1.7871e-04, -2.5466e-03,  1.9749e-03],
        [ 4.5913e-04,  7.5486e-03,  6.4760e-03,  6.0669e-03,  1.0230e-02,
         -3.8032e-02,  1.3125e-02, -2.5363e-03],
        [ 2.3621e-02, -8.3331e-03,  2.5853e-02,  1.3393e-02, -1.0693e-02,
          2.9513e-02,  9.0626e-05, -6.5382e-03],
        [ 6.7330e-03, -3.9434e-03,  6.8178e-03,  4.3241e-04, -4.8188e-03,
          1.3594e-02, -1.8032e-03, -1.5587e-03]], device='cuda:0') 

model.nns.2.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([-0.3165,  0.0937,  0.1916,  0.1513, -0.3842, -0.0502, -0.3246, -0.2448],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0035, -0.0098, -0.4716,  0.2446, -0.0015, -0.0520,  0.0542,  0.0237],
       device='cuda:0') 

model.nns.4.lin_pos_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 0.0664, -0.4298,  0.2553,  0.1457, -0.0244, -0.0225, -0.9880, -0.1341,
         -0.0084, -0.5333,  0.4532, -0.5099, -0.2714,  0.8849, -0.1803, -0.2679],
        [ 0.0081,  0.0638,  0.3855, -0.2165, -0.0107, -0.1050, -0.4153,  0.0474,
          0.0984,  0.5548, -0.4041,  0.8078,  0.4116, -0.6345, -0.1678,  0.2079]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.1547, -0.1352, -0.0432, -0.2270, -0.1225, -0.2436,  0.0243,  0.0054,
          0.0736, -0.0473, -0.1171,  0.0068,  0.0820, -0.0796,  0.0731,  0.0511],
        [ 0.0077,  0.0120, -0.0070,  0.0052,  0.0033,  0.0104,  0.0027,  0.0042,
         -0.0014,  0.0078, -0.0054,  0.0017,  0.0010, -0.0095,  0.0005,  0.0004]],
       device='cuda:0') 

model.nns.4.lin_pos_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[ 0.5925,  0.4808, -0.7641,  0.5097,  0.1611,  0.3637,  0.4875,  0.4561],
        [-0.5713, -0.2198, -0.0173, -0.0691, -0.5869, -0.3058, -0.3056, -0.2851]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.2149, -0.3483, -0.0206, -0.2006, -0.2487, -0.3019, -0.0545, -0.0313],
        [ 0.0040, -0.0135,  0.0005,  0.0149, -0.0032,  0.0025, -0.0029, -0.0056]],
       device='cuda:0') 

model.nns.4.lin_pos_r.bias 2 torch.Size([2])
Parameter containing:
tensor([-0.0784,  0.0660], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.2983,  0.0099], device='cuda:0') 

model.nns.4.lin_neg_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 0.4161,  0.1594, -0.0564,  0.2029,  0.3773, -0.0334,  0.1520,  0.1705,
         -0.4790, -0.2931,  0.4233, -0.3157, -0.1607, -0.3060,  0.0373, -0.2917],
        [-0.0513,  0.2221,  0.1570, -0.2624, -0.1696, -0.2215, -0.1308, -0.1210,
         -0.2146, -0.4011,  0.1083, -0.1597, -0.2274,  0.0396, -0.3952, -0.6045]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0476, -0.0222, -0.0855, -0.0077,  0.0474, -0.0563,  0.0487,  0.0314,
         -0.0776, -0.0390, -0.0388, -0.1348, -0.0443, -0.1333,  0.0302,  0.0068],
        [ 0.1039, -0.0680, -0.1669, -0.0235,  0.0941, -0.0933,  0.1021,  0.0641,
         -0.1801, -0.0878, -0.0810, -0.3099, -0.0760, -0.3168,  0.0741, -0.0043]],
       device='cuda:0') 

model.nns.4.lin_neg_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[ 0.2150,  0.1060,  0.2864, -0.0266,  0.3976, -0.3063,  0.3085,  0.3470],
        [-0.2483,  0.2204,  0.6072, -0.2064,  0.0602, -0.1541, -0.3941, -0.0946]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0529, -0.0570, -0.0916, -0.0657,  0.0363, -0.0199,  0.0548,  0.0246],
        [ 0.1298, -0.0652, -0.2455, -0.0994,  0.0896, -0.1085,  0.1327,  0.0681]],
       device='cuda:0') 

model.nns.4.lin_neg_r.bias 2 torch.Size([2])
Parameter containing:
tensor([ 0.0016, -0.2193], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.1703, -0.3854], device='cuda:0') 

head.0.model.0.weight 240 torch.Size([10, 24])
Parameter containing:
tensor([[ 0.2068, -0.3928,  0.1289,  0.1227,  0.0579, -0.2520,  0.0545, -0.1557,
         -0.1881,  0.2357,  0.0684, -0.2796,  0.0671,  0.0306,  0.1988,  0.2378,
         -0.3407,  0.2913,  0.0531, -0.3096, -0.1550,  0.2198, -0.2826, -0.9834],
        [-0.0958, -0.0718,  0.0835, -0.2554, -0.0684, -0.1117,  0.0587,  0.0882,
         -0.2765,  0.2668, -0.0206, -0.3468,  0.2047,  0.1240,  0.0268, -0.0270,
          0.1279,  0.2938, -0.2612, -0.0514, -0.2970, -0.0522, -0.1351, -0.7507],
        [ 0.0497, -0.1667, -0.2450,  0.0587,  0.2555, -0.1281, -0.0200, -0.0340,
         -0.3022, -0.0436, -0.3086, -0.2922, -0.1226,  0.2779,  0.5481, -0.0942,
         -0.2202,  0.4541,  0.2868, -0.0834, -0.0737,  0.0515, -0.0712, -0.6114],
        [-0.1723, -0.3287,  0.2251, -0.1308, -0.0843, -0.1774,  0.1856, -0.1703,
         -0.2766,  0.0982,  0.0412, -0.2959,  0.0222,  0.2063,  0.3052,  0.3160,
         -0.0185,  0.1411, -0.0103, -0.0192, -0.3279,  0.1625, -0.1527, -0.5294],
        [-0.0851, -0.1574,  0.1515, -0.1156, -0.1269, -0.4196,  0.2077, -0.1206,
         -0.3332,  0.0485, -0.3082, -0.1647,  0.2364,  0.3283,  0.1541,  0.2916,
         -0.0206,  0.2218,  0.0749, -0.1203, -0.2927,  0.0191,  0.0854, -0.5355],
        [ 0.0252, -0.0034, -0.1123,  0.2194, -0.2712,  0.1502, -0.0792, -0.1415,
          0.2857, -0.0973,  0.3418,  0.1868, -0.2588,  0.1708, -0.2195, -0.1690,
         -0.0705, -0.0910, -0.1067,  0.1256,  0.3524, -0.3025,  0.1742,  0.7574],
        [ 0.1474,  0.2678,  0.2186,  0.2996, -0.0692, -0.1112,  0.2551,  0.2295,
          0.4574, -0.1867,  0.2911,  0.4066, -0.0488, -0.0949, -0.0250, -0.3621,
          0.3140, -0.1767, -0.3681,  0.2052,  0.3084, -0.4110,  0.0403,  1.0125],
        [ 0.1355,  0.0577,  0.0317,  0.0037,  0.0036,  0.1621, -0.2445, -0.1559,
          0.1417, -0.2972,  0.0026,  0.1420, -0.2606, -0.0714, -0.2154, -0.0717,
         -0.0274, -0.1308,  0.1121,  0.3107,  0.2331, -0.1938,  0.1683,  0.8095],
        [-0.0998, -0.1054,  0.1794,  0.0329,  0.0453,  0.0251,  0.1878, -0.2662,
         -0.0622, -0.1002, -0.1198, -0.1879, -0.0076, -0.0185,  0.3679,  0.1828,
         -0.0405,  0.3426, -0.3964, -0.1337, -0.1175,  0.2585, -0.2892, -0.6497],
        [-0.1023, -0.0957,  0.1976, -0.2946, -0.2108, -0.2281,  0.3396, -0.0789,
         -0.3762,  0.0093, -0.0807, -0.3477,  0.2293,  0.1941,  0.1914, -0.0225,
         -0.0372,  0.1936, -0.1108, -0.1857, -0.4607,  0.2597, -0.0498, -0.8293]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 1.1980e-01, -4.7070e-02, -1.7764e-02,  8.5763e-03,  1.2006e-01,
         -4.7447e-02, -1.8277e-02,  8.9911e-03,  3.1802e-01, -1.4002e-01,
         -6.8240e-02,  2.2601e-02, -1.4115e-01,  6.5631e-02,  2.7998e-02,
         -1.0814e-02, -6.9439e-02,  2.8416e-02,  6.6646e-03, -6.4520e-03,
          2.4391e-02, -1.1444e-02, -6.5802e-03,  6.7964e-03],
        [ 1.8222e-02, -7.3394e-03, -3.0374e-03,  1.2900e-03,  1.8205e-02,
         -7.3570e-03, -3.1011e-03,  1.3366e-03,  4.7151e-02, -2.0912e-02,
         -1.0597e-02,  3.2994e-03, -2.1050e-02,  9.8161e-03,  4.4465e-03,
         -1.5709e-03, -1.0782e-02,  4.5206e-03,  1.3448e-03, -9.6601e-04,
          3.5278e-03, -1.6496e-03, -9.7775e-04,  9.7327e-04],
        [ 6.0635e-02, -2.3321e-02, -5.1189e-03,  5.8229e-03,  6.0796e-02,
         -2.3484e-02, -5.3932e-03,  6.0971e-03,  1.7622e-01, -7.7599e-02,
         -3.3390e-02,  1.5000e-02, -7.8185e-02,  3.6467e-02,  1.3404e-02,
         -7.1168e-03, -3.4041e-02,  1.3671e-02,  2.0896e-04, -4.3323e-03,
          1.6087e-02, -7.4905e-03, -4.4276e-03,  4.1354e-03],
        [-1.6076e-04,  8.8971e-04,  4.6002e-03,  1.2283e-03, -1.4968e-04,
          9.2169e-04,  4.5762e-03,  1.2426e-03,  1.6774e-02, -7.1199e-03,
          1.8650e-03,  3.2614e-03, -7.1501e-03,  3.4166e-03, -1.2390e-03,
         -1.5354e-03,  1.7690e-03, -1.1629e-03, -3.8868e-03, -8.9824e-04,
          3.4229e-03, -1.5817e-03, -8.8894e-04,  7.8397e-04],
        [ 9.4560e-03, -3.5438e-03, -5.7071e-04,  8.4933e-04,  1.0694e-02,
         -4.2271e-03, -6.5093e-04,  8.8129e-04,  3.0459e-02, -1.3471e-02,
         -5.7314e-03,  2.4922e-03, -1.3563e-02,  6.4086e-03,  2.3822e-03,
         -1.1581e-03, -5.0315e-03,  1.9824e-03, -2.1562e-04, -6.3343e-04,
          2.8922e-03, -1.3379e-03, -6.3305e-04,  8.2980e-04],
        [-4.1905e-02,  1.6515e-02,  8.9836e-03, -1.5623e-03, -5.1934e-02,
          2.1164e-02,  8.9956e-03, -4.6914e-03, -1.1729e-01,  5.1833e-02,
          3.1164e-02, -5.6600e-03,  5.2235e-02, -2.4357e-02, -1.3167e-02,
          2.7602e-03,  2.4176e-02, -9.9642e-03, -4.3062e-03,  1.2231e-03,
         -1.0393e-02,  4.9347e-03,  3.4476e-03, -2.2904e-03],
        [-1.4331e-01,  6.4211e-02,  4.4351e-02, -6.6329e-03, -1.4490e-01,
          6.5554e-02,  4.4592e-02, -6.8372e-03, -3.0082e-01,  1.3824e-01,
          9.5026e-02, -1.3047e-02,  1.3961e-01, -6.5317e-02, -4.3627e-02,
          5.6195e-03,  9.4455e-02, -4.2938e-02, -2.8808e-02,  4.6999e-03,
         -1.3842e-02,  5.9056e-03,  4.7527e-03, -3.8446e-03],
        [-4.5962e-02,  1.8901e-02,  1.1119e-02, -2.2633e-03, -4.6290e-02,
          1.9247e-02,  1.1290e-02, -2.4651e-03, -1.0633e-01,  4.7067e-02,
          2.8191e-02, -5.8483e-03,  4.7545e-02, -2.1966e-02, -1.2095e-02,
          2.7968e-03,  2.8362e-02, -1.2049e-02, -6.2605e-03,  1.7223e-03,
         -6.4541e-03,  3.0328e-03,  1.8225e-03, -1.8836e-03],
        [ 1.3992e-02, -5.3666e-03,  1.3467e-04,  9.6946e-04,  1.4554e-02,
         -5.5831e-03,  1.0267e-04,  9.9592e-04,  4.6984e-02, -2.1193e-02,
         -7.6658e-03,  3.0325e-03, -2.1172e-02,  1.0201e-02,  3.0974e-03,
         -1.4546e-03, -7.4014e-03,  3.0121e-03, -1.0626e-03, -7.5732e-04,
          3.3516e-03, -1.5652e-03, -7.4502e-04,  1.1276e-03],
        [ 1.1702e-02, -4.1439e-03,  2.2482e-04,  1.4106e-03,  1.1606e-02,
         -4.0905e-03,  1.6218e-04,  1.4039e-03,  3.8251e-02, -1.6627e-02,
         -5.7733e-03,  3.7435e-03, -1.6731e-02,  7.8053e-03,  2.0919e-03,
         -1.8013e-03, -6.0350e-03,  2.2266e-03, -1.0284e-03, -1.0594e-03,
          3.9142e-03, -1.8448e-03, -1.0264e-03,  1.0135e-03]], device='cuda:0') 

head.0.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([-0.2170, -0.3312, -0.0141, -0.3201, -0.1016,  0.3546,  0.0065,  0.2414,
        -0.3322, -0.2314], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0408,  0.0064,  0.0163, -0.0049,  0.0025, -0.0180, -0.0694, -0.0201,
         0.0023,  0.0020], device='cuda:0') 

head.1.model.0.weight 100 torch.Size([10, 10])
Parameter containing:
tensor([[-1.0294, -0.0534, -0.5769, -0.0471, -0.2465,  0.1453,  0.5842,  0.3366,
         -0.3860, -0.4257],
        [ 0.2529,  0.0151,  0.3487,  0.4030,  0.1730,  0.1008, -0.5126, -0.2605,
          0.1441, -0.0261],
        [-1.0057, -0.4351, -0.5568, -0.0702,  0.0214,  0.5106,  0.7391,  0.1234,
         -0.0816, -0.3563],
        [-0.4435, -0.3208, -0.1145,  0.0082,  0.0095,  0.2180,  0.2610,  0.2755,
          0.0228,  0.1446],
        [ 0.4643,  0.2465,  0.4016,  0.2530,  0.4015, -0.1970, -0.2043,  0.0609,
          0.4005,  0.4306],
        [ 0.3352,  0.0019,  0.1942,  0.2587,  0.2497, -0.2607, -0.1248,  0.1110,
          0.0286,  0.1608],
        [-0.7048, -0.3598, -0.4659, -0.2689, -0.3950,  0.1333,  0.4948,  0.4532,
          0.0064,  0.1033],
        [ 0.4504,  0.1659,  0.3742,  0.2112, -0.0725, -0.3380, -0.4882, -0.0480,
          0.3896,  0.2892],
        [ 0.5439,  0.1849,  0.1168, -0.0926, -0.0658, -0.3840, -0.3323,  0.0627,
          0.5034,  0.0597],
        [-0.5951, -0.2001, -0.2334, -0.0317, -0.1627,  0.1831,  0.4670,  0.2132,
         -0.2997, -0.3412]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 7.3095e-04,  2.6299e-02, -3.6468e-02,  1.7867e-02,  1.3112e-02,
         -3.0998e-02, -2.2002e-02, -4.4428e-02,  3.7068e-03,  2.5826e-02],
        [-1.6509e-02,  1.3806e-03, -3.1075e-02,  9.7562e-05, -4.1598e-03,
          9.2100e-03,  2.0439e-02, -1.4547e-03,  2.1885e-03,  2.0390e-04],
        [ 1.6656e-03,  2.9138e-02, -3.8571e-02,  1.9392e-02,  1.4707e-02,
         -3.5764e-02, -2.7186e-02, -4.9140e-02,  3.2765e-03,  2.8424e-02],
        [ 3.3655e-03,  5.0562e-03, -1.2713e-03,  3.5783e-03,  3.4616e-03,
         -8.0167e-03, -8.2662e-03, -8.8699e-03,  3.3846e-04,  5.1509e-03],
        [-1.0926e-02,  2.4455e-03, -2.2956e-02,  1.1080e-03, -2.0500e-03,
          4.7394e-03,  1.2586e-02, -3.5393e-03,  1.6762e-03,  1.6528e-03],
        [-1.6733e-02,  4.2354e-03, -3.5701e-02,  2.0313e-03, -2.8699e-03,
          6.6727e-03,  1.8810e-02, -6.2227e-03,  2.5840e-03,  3.0128e-03],
        [ 1.1542e-03,  2.6256e-02, -3.5084e-02,  1.7407e-02,  1.3192e-02,
         -3.2047e-02, -2.3939e-02, -4.4410e-02,  2.9462e-03,  2.5557e-02],
        [-1.6029e-02,  3.4525e-03, -3.4463e-02,  1.4296e-03, -3.2689e-03,
          7.7357e-03,  1.8893e-02, -4.8211e-03,  2.2988e-03,  2.2834e-03],
        [-4.3479e-03, -6.5314e-03,  1.6419e-03, -4.6224e-03, -4.4716e-03,
          1.0356e-02,  1.0678e-02,  1.1458e-02, -4.3719e-04, -6.6539e-03],
        [ 1.0513e-02,  1.8254e-02, -6.5132e-03,  1.2842e-02,  1.2160e-02,
         -2.8391e-02, -2.8270e-02, -3.1831e-02,  1.3348e-03,  1.8430e-02]],
       device='cuda:0') 

head.1.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([ 0.1704, -0.3840, -0.0290,  0.3833, -0.2712, -0.2440, -0.1433, -0.3321,
        -0.6338,  0.4003], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0238, -0.0174, -0.0232, -0.0018, -0.0131, -0.0204, -0.0213, -0.0192,
         0.0023, -0.0073], device='cuda:0') 

head.2.model.0.weight 10 torch.Size([1, 10])
Parameter containing:
tensor([[-0.4551,  0.5947, -0.5458, -0.1413,  0.3504,  0.5220, -0.4809,  0.5371,
          0.4187, -0.4900]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0747, -0.0300,  0.0881,  0.0649, -0.0371, -0.0229,  0.0714, -0.0422,
         -0.0275,  0.0930]], device='cuda:0') 

head.2.model.0.bias 1 torch.Size([1])
Parameter containing:
tensor([-0.1634], device='cuda:0', requires_grad=True) 
grad:  tensor([0.0124], device='cuda:0') 


Total parameters: 987
Total time: 34358.90133690834
Final val loss: 1.1185475662350655

#### Plotting Script ####
Prediction Results:
results/ContactGNNEnergy/37/sample132
results/ContactGNNEnergy/37/sample790
results/ContactGNNEnergy/37/sample1523
results/ContactGNNEnergy/37/sample282
results/ContactGNNEnergy/37/sample1982
Loss: 1.1791672587394715 +- 0.3878747192752542

