#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 Sequential(
  (0): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=132, out_features=32, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy1', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=426, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=[32], update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/426', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/426/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/426/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/426/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f1542502430>, channels=1, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'GeneticDistance(norm=True)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=4, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 14.18 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f1504346ac0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.6036
Mean test/val loss: 0.5951
[25, 50, 75] percentiles test/val loss: [0.2889 0.4992 0.7605]

Epoch 4, loss = 0.5356
Mean test/val loss: 0.5517
[25, 50, 75] percentiles test/val loss: [0.2958 0.4485 0.6805]

Epoch 6, loss = 0.4857
Mean test/val loss: 0.4956
[25, 50, 75] percentiles test/val loss: [0.2412 0.4039 0.6246]

Epoch 8, loss = 0.4536
Mean test/val loss: 0.4475
[25, 50, 75] percentiles test/val loss: [0.2008 0.3467 0.5623]

Epoch 10, loss = 0.4232
Mean test/val loss: 0.4408
[25, 50, 75] percentiles test/val loss: [0.235  0.3425 0.5246]

Epoch 12, loss = 0.3953
Mean test/val loss: 0.4147
[25, 50, 75] percentiles test/val loss: [0.1861 0.3124 0.5046]

Epoch 14, loss = 0.3764
Mean test/val loss: 0.4112
[25, 50, 75] percentiles test/val loss: [0.2155 0.3156 0.4959]

Epoch 16, loss = 0.3614
Mean test/val loss: 0.3869
[25, 50, 75] percentiles test/val loss: [0.1992 0.3066 0.457 ]

Epoch 18, loss = 0.3523
Mean test/val loss: 0.3634
[25, 50, 75] percentiles test/val loss: [0.173  0.2843 0.4383]

Epoch 20, loss = 0.3403
Mean test/val loss: 0.3641
[25, 50, 75] percentiles test/val loss: [0.1649 0.2765 0.4395]

Epoch 22, loss = 0.3288
Mean test/val loss: 0.3526
[25, 50, 75] percentiles test/val loss: [0.1802 0.272  0.4093]

Epoch 24, loss = 0.3175
Mean test/val loss: 0.3409
[25, 50, 75] percentiles test/val loss: [0.1565 0.2645 0.4035]

Epoch 26, loss = 0.3260
Mean test/val loss: 0.3270
[25, 50, 75] percentiles test/val loss: [0.1548 0.2498 0.3958]

Epoch 28, loss = 0.3042
Mean test/val loss: 0.3489
[25, 50, 75] percentiles test/val loss: [0.1876 0.2781 0.4221]

Epoch 30, loss = 0.2962
Mean test/val loss: 0.3185
[25, 50, 75] percentiles test/val loss: [0.1462 0.2459 0.385 ]

Epoch 32, loss = 0.2926
Mean test/val loss: 0.3712
[25, 50, 75] percentiles test/val loss: [0.2071 0.2814 0.4314]

Epoch 34, loss = 0.2838
Mean test/val loss: 0.3111
[25, 50, 75] percentiles test/val loss: [0.1466 0.2401 0.3732]

Epoch 36, loss = 0.2776
Mean test/val loss: 0.3069
[25, 50, 75] percentiles test/val loss: [0.1421 0.236  0.3732]

Epoch 38, loss = 0.2883
Mean test/val loss: 0.3070
[25, 50, 75] percentiles test/val loss: [0.1459 0.2383 0.3686]

Epoch 40, loss = 0.2682
Mean test/val loss: 0.3030
[25, 50, 75] percentiles test/val loss: [0.1422 0.2323 0.37  ]

New lr: 1e-05
Epoch 42, loss = 0.2457
Mean test/val loss: 0.2878
[25, 50, 75] percentiles test/val loss: [0.1322 0.2209 0.3507]

Epoch 44, loss = 0.2421
Mean test/val loss: 0.2865
[25, 50, 75] percentiles test/val loss: [0.1336 0.219  0.3513]

Epoch 46, loss = 0.2398
Mean test/val loss: 0.2858
[25, 50, 75] percentiles test/val loss: [0.1315 0.2167 0.3504]

Epoch 48, loss = 0.2379
Mean test/val loss: 0.2845
[25, 50, 75] percentiles test/val loss: [0.1309 0.2185 0.3479]

Epoch 50, loss = 0.2361
Mean test/val loss: 0.2839
[25, 50, 75] percentiles test/val loss: [0.1295 0.218  0.3472]

Epoch 52, loss = 0.2346
Mean test/val loss: 0.2836
[25, 50, 75] percentiles test/val loss: [0.1293 0.2174 0.3475]

Epoch 54, loss = 0.2330
Mean test/val loss: 0.2838
[25, 50, 75] percentiles test/val loss: [0.1311 0.2172 0.3465]

Epoch 56, loss = 0.2317
Mean test/val loss: 0.2831
[25, 50, 75] percentiles test/val loss: [0.1298 0.2169 0.347 ]

Epoch 58, loss = 0.2303
Mean test/val loss: 0.2829
[25, 50, 75] percentiles test/val loss: [0.1287 0.216  0.3452]

Epoch 60, loss = 0.2290
Mean test/val loss: 0.2824
[25, 50, 75] percentiles test/val loss: [0.1287 0.2167 0.3429]

Epoch 62, loss = 0.2278
Mean test/val loss: 0.2819
[25, 50, 75] percentiles test/val loss: [0.1292 0.2158 0.345 ]

Epoch 64, loss = 0.2266
Mean test/val loss: 0.2820
[25, 50, 75] percentiles test/val loss: [0.1285 0.2155 0.3427]

Epoch 66, loss = 0.2255
Mean test/val loss: 0.2815
[25, 50, 75] percentiles test/val loss: [0.1274 0.2141 0.3438]

Epoch 68, loss = 0.2244
Mean test/val loss: 0.2815
[25, 50, 75] percentiles test/val loss: [0.1282 0.2134 0.3436]

Epoch 70, loss = 0.2234
Mean test/val loss: 0.2812
[25, 50, 75] percentiles test/val loss: [0.1286 0.2143 0.3421]

Epoch 72, loss = 0.2224
Mean test/val loss: 0.2808
[25, 50, 75] percentiles test/val loss: [0.1278 0.2137 0.3412]

Epoch 74, loss = 0.2214
Mean test/val loss: 0.2813
[25, 50, 75] percentiles test/val loss: [0.1291 0.2139 0.3418]

Epoch 76, loss = 0.2204
Mean test/val loss: 0.2805
[25, 50, 75] percentiles test/val loss: [0.1286 0.2139 0.3417]

Epoch 78, loss = 0.2195
Mean test/val loss: 0.2804
[25, 50, 75] percentiles test/val loss: [0.1274 0.2135 0.3412]

Epoch 80, loss = 0.2186
Mean test/val loss: 0.2807
[25, 50, 75] percentiles test/val loss: [0.129  0.2142 0.3398]


Total parameters: 26473684
Total training + validation time: 7.0 hours, 44.0 mins, and 0.2999999999992724 secs
Final val loss: 0.28070316089317204

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 0.6016281843185425
dataset_04_28_23 sample324: 0.5855458974838257
dataset_04_28_23 sample3464: 0.4519265294075012
dataset_04_28_23 sample2834: 0.4193965494632721
dataset_04_28_23 sample1936: 0.2085718810558319
Loss: 0.453 +- 0.142

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 7.166248798370361
dataset_04_28_23 sample2834-downsampling: 7.273066997528076
dataset_04_28_23 sample324-downsampling: 13.627201080322266
dataset_04_28_23 sample3464-downsampling: 11.630165100097656
dataset_04_28_23 sample981-downsampling: 15.290279388427734
Loss: 10.997 +- 3.295

Removing /scratch/midway3/erschultz/ContactGNNEnergy1downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 6.696657180786133
dataset_04_28_23 sample2834-regular: 6.414519309997559
dataset_04_28_23 sample324-regular: 11.964973449707031
dataset_04_28_23 sample3464-regular: 8.47471809387207
dataset_04_28_23 sample981-regular: 10.099117279052734
Loss: 8.73 +- 2.093

Removing /scratch/midway3/erschultz/ContactGNNEnergy1regsample
