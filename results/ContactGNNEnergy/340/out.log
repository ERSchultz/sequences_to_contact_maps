#### ARCHITECTURE ####
Node Encoder:
 None 

Edge Encoder:
 None 

Linear:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(9, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 Bilinear 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=True, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_18_22', '/project2/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy9', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=2, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=340, pretrained=False, resume_training=False, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=False, message_passing='weighted_GAT', head_architecture='bilinear_triu', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/340', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/340/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/340/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/340/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7fef2f99ba60>, channels=1, node_feature_size=9, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 83.224 minutes
Average num edges per graph:  222294.36527196653
Mean degree: [362.66 512.   449.47 ... 329.12 511.93 511.26] +- [70.54  0.   53.89 ... 80.99  0.29  1.69]

split sizes: train=4302, val=478, test=0, N=4780
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.7545
Mean test/val loss: 0.7265
[25, 50, 75] quantiles test/val loss: [0.5414 0.7196 0.8934]

Epoch 4, loss = 0.6758
Mean test/val loss: 0.6568
[25, 50, 75] quantiles test/val loss: [0.4689 0.6453 0.8301]

Epoch 6, loss = 0.6492
Mean test/val loss: 0.6181
[25, 50, 75] quantiles test/val loss: [0.4561 0.6089 0.7752]

Epoch 8, loss = 0.6259
Mean test/val loss: 0.5978
[25, 50, 75] quantiles test/val loss: [0.4297 0.5958 0.7514]

Epoch 10, loss = 0.6006
Mean test/val loss: 0.5769
[25, 50, 75] quantiles test/val loss: [0.4061 0.5765 0.7377]

Epoch 12, loss = 0.5832
Mean test/val loss: 0.5958
[25, 50, 75] quantiles test/val loss: [0.4187 0.5704 0.7372]

Epoch 14, loss = 0.5677
Mean test/val loss: 0.5397
[25, 50, 75] quantiles test/val loss: [0.3789 0.539  0.695 ]

Epoch 16, loss = 0.5588
Mean test/val loss: 0.5304
[25, 50, 75] quantiles test/val loss: [0.3827 0.5245 0.679 ]

Epoch 18, loss = 0.5476
Mean test/val loss: 0.5209
[25, 50, 75] quantiles test/val loss: [0.362  0.5102 0.6888]

Epoch 20, loss = 0.5317
Mean test/val loss: 0.5279
[25, 50, 75] quantiles test/val loss: [0.338  0.5077 0.7018]

Epoch 22, loss = 0.5169
Mean test/val loss: 0.5129
[25, 50, 75] quantiles test/val loss: [0.3536 0.503  0.6612]

Epoch 24, loss = 0.5494
Mean test/val loss: 0.4984
[25, 50, 75] quantiles test/val loss: [0.3433 0.4975 0.6397]

Epoch 26, loss = 0.5070
Mean test/val loss: 0.4857
[25, 50, 75] quantiles test/val loss: [0.3508 0.4869 0.6083]

Epoch 28, loss = 0.4984
Mean test/val loss: 0.4873
[25, 50, 75] quantiles test/val loss: [0.342  0.4692 0.6217]

Epoch 30, loss = 0.4895
Mean test/val loss: 0.4776
[25, 50, 75] quantiles test/val loss: [0.3397 0.4832 0.6116]

Epoch 32, loss = 0.4873
Mean test/val loss: 0.4876
[25, 50, 75] quantiles test/val loss: [0.36   0.4711 0.6387]

Epoch 34, loss = 0.4718
Mean test/val loss: 0.4633
[25, 50, 75] quantiles test/val loss: [0.3033 0.4591 0.5977]

Epoch 36, loss = 0.4644
Mean test/val loss: 0.4641
[25, 50, 75] quantiles test/val loss: [0.3048 0.468  0.6138]

Epoch 38, loss = 0.4579
Mean test/val loss: 0.4671
[25, 50, 75] quantiles test/val loss: [0.3206 0.4655 0.5877]

Epoch 40, loss = 0.4570
Mean test/val loss: 0.4490
[25, 50, 75] quantiles test/val loss: [0.3161 0.4488 0.5851]

Epoch 42, loss = 0.4451
Mean test/val loss: 0.4465
[25, 50, 75] quantiles test/val loss: [0.3061 0.4353 0.5778]

Epoch 44, loss = 0.4389
Mean test/val loss: 0.4368
[25, 50, 75] quantiles test/val loss: [0.3293 0.4292 0.5591]

Epoch 46, loss = 0.4337
Mean test/val loss: 0.4416
[25, 50, 75] quantiles test/val loss: [0.2878 0.4514 0.5759]

Epoch 48, loss = 0.9752
Mean test/val loss: 0.6410
[25, 50, 75] quantiles test/val loss: [0.4763 0.6555 0.8033]

Epoch 50, loss = 0.5810
Mean test/val loss: 0.5360
[25, 50, 75] quantiles test/val loss: [0.4016 0.5435 0.6739]

Epoch 52, loss = 0.5199
Mean test/val loss: 0.5089
[25, 50, 75] quantiles test/val loss: [0.3569 0.503  0.6611]

Epoch 54, loss = 0.4848
Mean test/val loss: 0.4732
[25, 50, 75] quantiles test/val loss: [0.348  0.494  0.6061]

Epoch 56, loss = 0.4378
Mean test/val loss: 0.4335
[25, 50, 75] quantiles test/val loss: [0.3077 0.4129 0.5661]

Epoch 58, loss = 0.4165
Mean test/val loss: 0.4240
[25, 50, 75] quantiles test/val loss: [0.3095 0.4084 0.5268]

Epoch 60, loss = 0.4105
Mean test/val loss: 0.4189
[25, 50, 75] quantiles test/val loss: [0.2877 0.4273 0.5459]

Epoch 62, loss = 0.4073
Mean test/val loss: 0.4188
[25, 50, 75] quantiles test/val loss: [0.2862 0.4062 0.5423]

Epoch 64, loss = 0.4052
Mean test/val loss: 0.4162
[25, 50, 75] quantiles test/val loss: [0.2806 0.4055 0.5403]

Epoch 66, loss = 0.4034
Mean test/val loss: 0.4161
[25, 50, 75] quantiles test/val loss: [0.2848 0.3987 0.5386]

Epoch 68, loss = 0.4019
Mean test/val loss: 0.4149
[25, 50, 75] quantiles test/val loss: [0.29   0.4088 0.5367]

Epoch 70, loss = 0.4005
Mean test/val loss: 0.4148
[25, 50, 75] quantiles test/val loss: [0.2762 0.4084 0.5551]

Epoch 72, loss = 0.3993
Mean test/val loss: 0.4144
[25, 50, 75] quantiles test/val loss: [0.2788 0.4067 0.551 ]

Epoch 74, loss = 0.3981
Mean test/val loss: 0.4136
[25, 50, 75] quantiles test/val loss: [0.2696 0.3906 0.5453]

Epoch 76, loss = 0.3970
Mean test/val loss: 0.4134
[25, 50, 75] quantiles test/val loss: [0.2771 0.4029 0.5228]

Epoch 78, loss = 0.3959
Mean test/val loss: 0.4125
[25, 50, 75] quantiles test/val loss: [0.2855 0.3916 0.5474]

Epoch 80, loss = 0.3948
Mean test/val loss: 0.4116
[25, 50, 75] quantiles test/val loss: [0.2805 0.4122 0.5492]

Epoch 82, loss = 0.3939
Mean test/val loss: 0.4122
[25, 50, 75] quantiles test/val loss: [0.2754 0.4066 0.5207]

Epoch 84, loss = 0.3930
Mean test/val loss: 0.4109
[25, 50, 75] quantiles test/val loss: [0.2762 0.4013 0.5538]

Epoch 86, loss = 0.3919
Mean test/val loss: 0.4109
[25, 50, 75] quantiles test/val loss: [0.2553 0.409  0.5539]

Epoch 88, loss = 0.3910
Mean test/val loss: 0.4100
[25, 50, 75] quantiles test/val loss: [0.2816 0.3987 0.5348]

Epoch 90, loss = 0.3902
Mean test/val loss: 0.4098
[25, 50, 75] quantiles test/val loss: [0.2788 0.4111 0.5215]

Epoch 92, loss = 0.3893
Mean test/val loss: 0.4096
[25, 50, 75] quantiles test/val loss: [0.282  0.3947 0.5396]

Epoch 94, loss = 0.3885
#### ARCHITECTURE ####
Node Encoder:
 None 

Edge Encoder:
 None 

Linear:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(9, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 Bilinear 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=True, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_18_22', '/project2/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy9', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=2, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=340, pretrained=False, resume_training=True, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=False, message_passing='weighted_GAT', head_architecture='bilinear_triu', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/340', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/340/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/340/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/340/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f5a54667a60>, channels=1, node_feature_size=9, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 0.115 minutes
Average num edges per graph:  nan
split sizes: train=4302, val=478, test=0, N=4780
Partially-trained model is loaded.
Starting at epoch 96
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 96, loss = 0.3876
Mean test/val loss: 0.4088
[25, 50, 75] quantiles test/val loss: [0.2785 0.4116 0.5326]

Epoch 98, loss = 0.3868
Mean test/val loss: 0.4096
[25, 50, 75] quantiles test/val loss: [0.2969 0.4113 0.5208]

Epoch 100, loss = 0.3860
Mean test/val loss: 0.4082
[25, 50, 75] quantiles test/val loss: [0.2568 0.4129 0.5345]


Total parameters: 43348628
Total training + validation time: 2.0 hours, 25.0 mins, and 47.29999999999927 secs
Final val loss: 0.4082143086332158

split sizes: train=4302, val=478, test=0, N=4780
#### Plotting Script ####
Prediction Results:
dataset_11_21_22 sample939: 0.4166434407234192
dataset_11_18_22 sample203: 0.7076714038848877
dataset_11_21_22 sample743: 0.6301577091217041
dataset_11_21_22 sample45: 0.1796656996011734
dataset_11_18_22 sample559: 0.41966378688812256
Loss: 0.471 +- 0.185

Downsampling (40%) Results:
dataset_11_18_22 sample203-downsampling: 6.210926055908203
dataset_11_18_22 sample45-downsampling: 16.717342376708984
dataset_11_18_22 sample559-downsampling: 3.818624258041382
dataset_11_18_22 sample743-downsampling: 9.592192649841309
dataset_11_18_22 sample939-downsampling: 3.497493028640747
Loss: 6.207 +- 4.457

Removing /project2/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy9downsample
Original sampling (100%) Results:
dataset_11_18_22 sample203-regular: 5.797214508056641
dataset_11_18_22 sample45-regular: 14.194534301757812
dataset_11_18_22 sample559-regular: 3.24564790725708
dataset_11_18_22 sample743-regular: 9.091367721557617
dataset_11_18_22 sample939-regular: 3.170340061187744
Loss: 5.623 +- 3.907

Removing /project2/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy9regsample
Upsampling (200%) Results:
dataset_11_18_22 sample203-upsampling: 5.575457572937012
dataset_11_18_22 sample45-upsampling: 13.35716724395752
dataset_11_18_22 sample559-upsampling: 3.193068027496338
dataset_11_18_22 sample743-upsampling: 9.315652847290039
dataset_11_18_22 sample939-upsampling: 3.1479523181915283
Loss: 5.45 +- 3.718

Removing /project2/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy9upsample
