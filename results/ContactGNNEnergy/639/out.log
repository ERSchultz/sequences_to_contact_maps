#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 None 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(10, 16, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(128, 16, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(128, 16, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(128, 16, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'AdjPCs_10'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project/depablo/erschultz/dataset_12_12_23_imr90'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy8', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='log_inf', sweep_choices=None, y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, max_sample=5000, start_epoch=1, n_epochs=70, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse_log', loss_k=2, lambda1=1.0, lambda2=1.0, w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=639, pretrain_id=None, resume_training=False, k=10, m=512, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=False, input_L_to_D_mode='meandist', use_sign_net=False, use_sign_plus=False, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 1000, 1000, 128], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[16, 16, 16, 16], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/639', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/639/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/639/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/639/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_log at 0x7f09076755e0>, node_feature_size=10, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)'], node_transforms=['AdjPCs(k=10, normalize=False)'], edge_dim=2, transforms_processed=None, diag=True, corr=False, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  AdjPCs(k=10, normalize=False)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 13.344 minutes
Number of samples: 5000
Average num edges per graph:  62346.308
Mean degree: [254.87 255.   255.   ... 214.69 254.65 239.73] +- [ 0.48  0.    0.   ... 35.84  1.01 17.39]

split sizes: train=4500, val=500, test=0, N=5000
First 100 val samples: [1634, 255, 831, 1651, 2956, 3283, 4352, 2250, 3009, 1764, 1710, 4907, 3304, 1520, 1317, 4459, 326, 2156, 391, 2904, 410, 2749, 1122, 727, 3100, 3736, 3464, 2072, 1523, 1972, 137, 4307, 2714, 4189, 1956, 78, 4182, 1798, 2700, 796, 1407, 4226, 4875, 4932, 1206, 1423, 2869, 4977, 4767, 3435, 3216, 3760, 1735, 280, 166, 4269, 4171, 1582, 324, 139, 2743, 3570, 2986, 147, 1649, 3455, 4454, 3912, 1512, 795, 3025, 566, 4772, 618, 4186, 1989, 4410, 2996, 981, 4611, 4751, 2933, 1253, 3135, 2825, 2811, 4830, 3426, 4179, 4638, 3229, 195, 3988, 3947, 2033, 3343, 2770, 2441, 1398, 2143, 1619, 3956]
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f08e14ebee0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 1.0016
Mean test/val loss: 1.0097
[25, 50, 75] percentiles test/val loss: [0.6282 0.9262 1.2851]

Epoch 4, loss = 0.8843
Mean test/val loss: 0.8857
[25, 50, 75] percentiles test/val loss: [0.5043 0.7941 1.139 ]

Epoch 6, loss = 0.8097
Mean test/val loss: 0.8134
[25, 50, 75] percentiles test/val loss: [0.465  0.7383 1.0291]

Epoch 8, loss = 0.7642
Mean test/val loss: 0.8289
[25, 50, 75] percentiles test/val loss: [0.5004 0.7551 1.0535]

Epoch 10, loss = 0.7264
Mean test/val loss: 0.8539
[25, 50, 75] percentiles test/val loss: [0.471  0.746  1.1065]

Epoch 12, loss = 0.7033
Mean test/val loss: 0.7337
[25, 50, 75] percentiles test/val loss: [0.4222 0.6563 0.9275]

Epoch 14, loss = 0.6772
Mean test/val loss: 0.7237
[25, 50, 75] percentiles test/val loss: [0.4136 0.6526 0.9324]

Epoch 16, loss = 0.6562
Mean test/val loss: 0.6913
[25, 50, 75] percentiles test/val loss: [0.3916 0.6137 0.8804]

Epoch 18, loss = 0.6253
Mean test/val loss: 0.6539
[25, 50, 75] percentiles test/val loss: [0.3624 0.5805 0.8495]

Epoch 20, loss = 0.6076
Mean test/val loss: 0.6547
[25, 50, 75] percentiles test/val loss: [0.3751 0.5767 0.8332]

Epoch 22, loss = 0.5852
Mean test/val loss: 0.6493
[25, 50, 75] percentiles test/val loss: [0.3609 0.5786 0.8458]

Epoch 24, loss = 0.5755
Mean test/val loss: 0.6666
[25, 50, 75] percentiles test/val loss: [0.3711 0.5896 0.8477]

Epoch 26, loss = 0.5546
Mean test/val loss: 0.6335
[25, 50, 75] percentiles test/val loss: [0.3459 0.553  0.8028]

Epoch 28, loss = 0.5419
Mean test/val loss: 0.6174
[25, 50, 75] percentiles test/val loss: [0.3335 0.5444 0.7898]

Epoch 30, loss = 0.5471
Mean test/val loss: 0.6054
[25, 50, 75] percentiles test/val loss: [0.3291 0.5265 0.7743]

Epoch 32, loss = 0.5151
Mean test/val loss: 0.6150
[25, 50, 75] percentiles test/val loss: [0.3428 0.5284 0.7762]

Epoch 34, loss = 0.5040
Mean test/val loss: 0.6093
[25, 50, 75] percentiles test/val loss: [0.3239 0.5213 0.7704]

Epoch 36, loss = 0.4933
Mean test/val loss: 0.5941
[25, 50, 75] percentiles test/val loss: [0.3173 0.5215 0.7404]

Epoch 38, loss = 0.4838
Mean test/val loss: 0.5888
[25, 50, 75] percentiles test/val loss: [0.3107 0.5132 0.7549]

Epoch 40, loss = 0.4712
Mean test/val loss: 0.5897
[25, 50, 75] percentiles test/val loss: [0.314  0.5065 0.7455]

New lr: 1e-05
Epoch 42, loss = 0.4249
Mean test/val loss: 0.5656
[25, 50, 75] percentiles test/val loss: [0.292  0.4917 0.7228]

Epoch 44, loss = 0.4172
Mean test/val loss: 0.5649
[25, 50, 75] percentiles test/val loss: [0.2908 0.4875 0.72  ]

Epoch 46, loss = 0.4118
Mean test/val loss: 0.5661
[25, 50, 75] percentiles test/val loss: [0.2921 0.4871 0.7235]

Epoch 48, loss = 0.4074
Mean test/val loss: 0.5664
[25, 50, 75] percentiles test/val loss: [0.2928 0.4925 0.7304]

Epoch 50, loss = 0.4033
Mean test/val loss: 0.5661
[25, 50, 75] percentiles test/val loss: [0.2904 0.4873 0.7356]

Epoch 52, loss = 0.3995
Mean test/val loss: 0.5659
[25, 50, 75] percentiles test/val loss: [0.2931 0.4885 0.719 ]

Epoch 54, loss = 0.3959
Mean test/val loss: 0.5679
[25, 50, 75] percentiles test/val loss: [0.2937 0.4856 0.7348]

Epoch 56, loss = 0.3924
Mean test/val loss: 0.5690
[25, 50, 75] percentiles test/val loss: [0.2936 0.4874 0.7324]

Epoch 58, loss = 0.3891
Mean test/val loss: 0.5702
[25, 50, 75] percentiles test/val loss: [0.291  0.485  0.7282]

Epoch 60, loss = 0.3858
Mean test/val loss: 0.5693
[25, 50, 75] percentiles test/val loss: [0.2884 0.4841 0.736 ]

Epoch 62, loss = 0.3826
Mean test/val loss: 0.5709
[25, 50, 75] percentiles test/val loss: [0.2917 0.49   0.7334]

Epoch 64, loss = 0.3795
Mean test/val loss: 0.5727
[25, 50, 75] percentiles test/val loss: [0.2895 0.4907 0.7393]

Epoch 66, loss = 0.3765
Mean test/val loss: 0.5718
[25, 50, 75] percentiles test/val loss: [0.2917 0.4868 0.7383]

Epoch 68, loss = 0.3735
Mean test/val loss: 0.5749
[25, 50, 75] percentiles test/val loss: [0.2899 0.4873 0.7455]

Epoch 70, loss = 0.3706
Mean test/val loss: 0.5742
[25, 50, 75] percentiles test/val loss: [0.2894 0.4879 0.7384]


Total parameters: 51447348
Total training + validation time: 4.0 hours, 31.0 mins, and 13.799999999999272 secs
Final val loss: 0.5741770138591528

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_12_12_23_imr90 sample981: 0.15146715939044952
dataset_12_12_23_imr90 sample324: 0.5995268821716309
dataset_12_12_23_imr90 sample3464: 0.6510629653930664
dataset_12_12_23_imr90 sample2834: 0.28956252336502075
dataset_12_12_23_imr90 sample1936: 0.09369312226772308
MSE_log: 0.357 +- 0.229

Downsampling (200k) Results:
Original sampling (400k) Results:
