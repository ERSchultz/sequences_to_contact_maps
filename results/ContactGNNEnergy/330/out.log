#### ARCHITECTURE ####
Node Encoder:
 None 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(9, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 Bilinear 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=True, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_18_22', '/project2/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy9', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=330, pretrained=False, resume_training=False, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, message_passing='weighted_GAT', head_architecture='bilinear_triu', head_architecture_2='fc-fill', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000, 1024], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/330', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/330/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/330/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/330/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f1b20bf5a60>, channels=1, node_feature_size=9, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 76.302 minutes
Average num edges per graph:  222294.36527196653
Mean degree: [362.66 512.   449.47 ... 329.12 511.93 511.26] +- [70.54  0.   53.89 ... 80.99  0.29  1.69]

split sizes: train=4302, val=478, test=0, N=4780
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 2, loss = 10.6341
Mean test/val loss: 10.6304
[25, 50, 75] quantiles test/val loss: [ 6.3175  9.0231 12.5924]

Epoch 4, loss = 9.4575
Mean test/val loss: 10.3271
[25, 50, 75] quantiles test/val loss: [ 5.5307  8.2335 11.3793]

Epoch 6, loss = 8.7158
Mean test/val loss: 8.3821
[25, 50, 75] quantiles test/val loss: [ 5.0487  7.2871 10.0799]

Epoch 8, loss = 8.2666
Mean test/val loss: 8.6055
[25, 50, 75] quantiles test/val loss: [ 5.5468  7.7858 10.5187]

Epoch 10, loss = 7.8645
Mean test/val loss: 8.2549
[25, 50, 75] quantiles test/val loss: [5.0471 7.2955 9.8473]

Epoch 12, loss = 7.7460
Mean test/val loss: 7.8713
[25, 50, 75] quantiles test/val loss: [4.8157 6.8205 9.409 ]

Epoch 14, loss = 7.5415
Mean test/val loss: 7.8986
[25, 50, 75] quantiles test/val loss: [4.5325 6.8453 9.9366]

Epoch 16, loss = 7.3929
Mean test/val loss: 10.1584
[25, 50, 75] quantiles test/val loss: [ 7.7016  9.5175 11.4495]

Epoch 18, loss = 7.3337
Mean test/val loss: 7.3203
[25, 50, 75] quantiles test/val loss: [4.5059 6.4407 8.9434]

Epoch 20, loss = 7.3281
Mean test/val loss: 7.3623
[25, 50, 75] quantiles test/val loss: [4.4067 6.5079 9.1534]

Epoch 22, loss = 7.0491
Mean test/val loss: 7.7986
[25, 50, 75] quantiles test/val loss: [4.6892 6.7973 9.2207]

Epoch 24, loss = 6.9013
Mean test/val loss: 7.4011
[25, 50, 75] quantiles test/val loss: [4.5234 6.6137 9.1346]

Epoch 26, loss = 6.8010
Mean test/val loss: 6.9980
[25, 50, 75] quantiles test/val loss: [4.2777 6.213  8.6778]

Epoch 28, loss = 6.7317
Mean test/val loss: 7.0362
[25, 50, 75] quantiles test/val loss: [4.1031 6.0636 8.5404]

Epoch 30, loss = 6.5246
Mean test/val loss: 6.6301
[25, 50, 75] quantiles test/val loss: [4.051  5.8721 8.0666]

Epoch 32, loss = 6.6685
Mean test/val loss: 7.2900
[25, 50, 75] quantiles test/val loss: [4.3465 6.5708 9.0061]

Epoch 34, loss = 6.6881
Mean test/val loss: 6.9826
[25, 50, 75] quantiles test/val loss: [4.2022 6.2245 8.3494]

Epoch 36, loss = 6.0272
Mean test/val loss: 6.4810
[25, 50, 75] quantiles test/val loss: [3.717  5.7235 7.8099]

Epoch 38, loss = 6.0887
Mean test/val loss: 6.4295
[25, 50, 75] quantiles test/val loss: [3.8581 5.612  7.7335]

Epoch 40, loss = 6.2437
Mean test/val loss: 6.8426
[25, 50, 75] quantiles test/val loss: [4.2943 5.9583 8.1416]

Epoch 42, loss = 6.1209
Mean test/val loss: 8.2852
[25, 50, 75] quantiles test/val loss: [ 5.2241  7.4495 10.0549]

Epoch 44, loss = 156.7246
Mean test/val loss: 9.3007
[25, 50, 75] quantiles test/val loss: [ 5.542   8.1773 11.2557]

Epoch 46, loss = 7.1173
Mean test/val loss: 7.5459
[25, 50, 75] quantiles test/val loss: [4.6667 6.5041 9.1963]

Epoch 48, loss = 6.0639
Mean test/val loss: 6.3947
[25, 50, 75] quantiles test/val loss: [3.7142 5.4436 7.874 ]

Epoch 50, loss = 7.5429
Mean test/val loss: 6.3655
[25, 50, 75] quantiles test/val loss: [3.7607 5.558  7.6564]

Epoch 52, loss = 5.5083
Mean test/val loss: 6.0384
[25, 50, 75] quantiles test/val loss: [3.4741 5.2652 7.4076]

Epoch 54, loss = 5.3883
Mean test/val loss: 5.9270
[25, 50, 75] quantiles test/val loss: [3.4433 5.0352 7.364 ]

Epoch 56, loss = 5.3164
Mean test/val loss: 5.8722
[25, 50, 75] quantiles test/val loss: [3.3009 5.0421 7.3362]

Epoch 58, loss = 5.2632
Mean test/val loss: 5.8325
[25, 50, 75] quantiles test/val loss: [3.2952 5.0464 7.2778]

Epoch 60, loss = 5.2205
Mean test/val loss: 5.8249
[25, 50, 75] quantiles test/val loss: [3.3129 5.0267 7.1803]

Epoch 62, loss = 5.1809
Mean test/val loss: 5.7756
[25, 50, 75] quantiles test/val loss: [3.2856 4.9082 7.1746]

Epoch 64, loss = 5.1468
Mean test/val loss: 5.7519
[25, 50, 75] quantiles test/val loss: [3.2255 4.8633 7.1653]

Epoch 66, loss = 5.1164
Mean test/val loss: 5.7451
[25, 50, 75] quantiles test/val loss: [3.2412 4.8884 7.1326]

Epoch 68, loss = 5.0870
Mean test/val loss: 5.7289
[25, 50, 75] quantiles test/val loss: [3.247  4.8479 7.1481]

Epoch 70, loss = 5.0622
Mean test/val loss: 5.7176
[25, 50, 75] quantiles test/val loss: [3.235  4.9093 7.0832]

Epoch 72, loss = 5.0374
Mean test/val loss: 5.6898
[25, 50, 75] quantiles test/val loss: [3.2143 4.8801 7.0333]

Epoch 74, loss = 5.0160
Mean test/val loss: 5.6811
[25, 50, 75] quantiles test/val loss: [3.2159 4.8235 7.0175]

Epoch 76, loss = 4.9942
