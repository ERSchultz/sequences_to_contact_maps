#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): GATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): GATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): GATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): GATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy8', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=436, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/436', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/436/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/436/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/436/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f29886c13a0>, channels=1, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'GeneticDistance(norm=True)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=4, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 13.135 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f294c0dab50>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 1.2218
Mean test/val loss: 1.2034
[25, 50, 75] percentiles test/val loss: [0.6713 0.9263 1.4149]

Epoch 4, loss = 1.2075
Mean test/val loss: 1.2102
[25, 50, 75] percentiles test/val loss: [0.5583 0.864  1.499 ]

Epoch 6, loss = 1.2092
Mean test/val loss: 1.1996
[25, 50, 75] percentiles test/val loss: [0.6238 0.8985 1.4139]

Epoch 8, loss = 1.2044
Mean test/val loss: 1.2022
[25, 50, 75] percentiles test/val loss: [0.5876 0.8723 1.4455]

Epoch 10, loss = 1.2055
Mean test/val loss: 1.2015
[25, 50, 75] percentiles test/val loss: [0.593  0.8725 1.4376]

Epoch 12, loss = 1.2047
Mean test/val loss: 1.2030
[25, 50, 75] percentiles test/val loss: [0.6764 0.9309 1.4089]

Epoch 14, loss = 1.2027
Mean test/val loss: 1.2083
[25, 50, 75] percentiles test/val loss: [0.5752 0.8724 1.4858]

Epoch 16, loss = 1.2015
Mean test/val loss: 1.2062
[25, 50, 75] percentiles test/val loss: [0.6835 0.947  1.4077]

Epoch 18, loss = 1.2019
Mean test/val loss: 1.2037
[25, 50, 75] percentiles test/val loss: [0.6783 0.9376 1.4079]

Epoch 20, loss = 1.2021
Mean test/val loss: 1.1994
[25, 50, 75] percentiles test/val loss: [0.6132 0.8921 1.4176]

Epoch 22, loss = 1.2057
Mean test/val loss: 1.2010
[25, 50, 75] percentiles test/val loss: [0.6602 0.9292 1.4139]

Epoch 24, loss = 1.2016
Mean test/val loss: 1.2144
[25, 50, 75] percentiles test/val loss: [0.7165 0.9792 1.4075]

Epoch 26, loss = 1.2015
Mean test/val loss: 1.2012
[25, 50, 75] percentiles test/val loss: [0.6586 0.9285 1.4151]

Epoch 28, loss = 1.2024
Mean test/val loss: 1.2013
[25, 50, 75] percentiles test/val loss: [0.593  0.8718 1.4375]

Epoch 30, loss = 1.2003
Mean test/val loss: 1.2005
[25, 50, 75] percentiles test/val loss: [0.6037 0.8826 1.4249]

Epoch 32, loss = 1.2046
Mean test/val loss: 1.2037
[25, 50, 75] percentiles test/val loss: [0.5808 0.874  1.4638]

Epoch 34, loss = 1.2010
Mean test/val loss: 1.2081
[25, 50, 75] percentiles test/val loss: [0.6966 0.9626 1.4109]

Epoch 36, loss = 1.2004
Mean test/val loss: 1.2010
[25, 50, 75] percentiles test/val loss: [0.6544 0.9222 1.418 ]

Epoch 38, loss = 1.2000
Mean test/val loss: 1.2052
[25, 50, 75] percentiles test/val loss: [0.6814 0.9419 1.4084]

Epoch 40, loss = 1.2001
Mean test/val loss: 1.2037
[25, 50, 75] percentiles test/val loss: [0.5817 0.8719 1.4568]

New lr: 1e-05
Epoch 42, loss = 1.1966
Mean test/val loss: 1.2043
[25, 50, 75] percentiles test/val loss: [0.6791 0.9401 1.4108]

Epoch 44, loss = 1.1971
Mean test/val loss: 1.1990
[25, 50, 75] percentiles test/val loss: [0.6169 0.8934 1.4149]

Epoch 46, loss = 1.1974
Mean test/val loss: 1.1991
[25, 50, 75] percentiles test/val loss: [0.6169 0.8935 1.4139]

Epoch 48, loss = 1.1972
Mean test/val loss: 1.1989
[25, 50, 75] percentiles test/val loss: [0.6198 0.8958 1.4122]

Epoch 50, loss = 1.1975
Mean test/val loss: 1.1991
[25, 50, 75] percentiles test/val loss: [0.6317 0.9056 1.4092]

Epoch 52, loss = 1.1974
Mean test/val loss: 1.1990
[25, 50, 75] percentiles test/val loss: [0.6278 0.8997 1.4107]

Epoch 54, loss = 1.1973
Mean test/val loss: 1.1990
[25, 50, 75] percentiles test/val loss: [0.6274 0.9011 1.4105]

Epoch 56, loss = 1.1973
Mean test/val loss: 1.1997
[25, 50, 75] percentiles test/val loss: [0.6428 0.9178 1.4084]

Epoch 58, loss = 1.1972
Mean test/val loss: 1.1992
[25, 50, 75] percentiles test/val loss: [0.6111 0.8886 1.4215]

Epoch 60, loss = 1.1974
Mean test/val loss: 1.1992
[25, 50, 75] percentiles test/val loss: [0.6316 0.9063 1.4091]

Epoch 62, loss = 1.1973
Mean test/val loss: 1.1991
[25, 50, 75] percentiles test/val loss: [0.6177 0.8938 1.4127]

Epoch 64, loss = 1.1973
Mean test/val loss: 1.1990
[25, 50, 75] percentiles test/val loss: [0.6223 0.897  1.4108]

Epoch 66, loss = 1.1972
Mean test/val loss: 1.1992
[25, 50, 75] percentiles test/val loss: [0.6267 0.8998 1.4107]

Epoch 68, loss = 1.1972
Mean test/val loss: 1.1991
[25, 50, 75] percentiles test/val loss: [0.6123 0.8908 1.4192]

Epoch 70, loss = 1.1974
Mean test/val loss: 1.1990
[25, 50, 75] percentiles test/val loss: [0.6204 0.8964 1.4121]

Epoch 72, loss = 1.1972
Mean test/val loss: 1.1992
[25, 50, 75] percentiles test/val loss: [0.6293 0.9024 1.4102]

Epoch 74, loss = 1.1971
Mean test/val loss: 1.2002
[25, 50, 75] percentiles test/val loss: [0.6531 0.9252 1.4127]

Epoch 76, loss = 1.1974
Mean test/val loss: 1.1990
[25, 50, 75] percentiles test/val loss: [0.6266 0.9015 1.4112]

Epoch 78, loss = 1.1973
Mean test/val loss: 1.1990
[25, 50, 75] percentiles test/val loss: [0.6239 0.8984 1.4111]

Epoch 80, loss = 1.1974
Mean test/val loss: 1.1992
[25, 50, 75] percentiles test/val loss: [0.6118 0.8911 1.4182]


Total parameters: 26462256
Total training + validation time: 6.0 hours, 25.0 mins, and 16.299999999999272 secs
Final val loss: 1.1991637505292891

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 5.044106483459473
dataset_04_28_23 sample324: 1.8343987464904785
dataset_04_28_23 sample3464: 1.0868089199066162
dataset_04_28_23 sample2834: 2.260807514190674
dataset_04_28_23 sample1936: 0.84381103515625
Loss: 2.214 +- 1.504

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 19.331302642822266
dataset_04_28_23 sample2834-downsampling: 18.590435028076172
dataset_04_28_23 sample324-downsampling: 22.409252166748047
dataset_04_28_23 sample3464-downsampling: 16.04671859741211
dataset_04_28_23 sample981-downsampling: 40.49005126953125
Loss: 23.374 +- 8.796

Removing /scratch/midway3/erschultz/ContactGNNEnergy8downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 19.331302642822266
dataset_04_28_23 sample2834-regular: 18.590435028076172
dataset_04_28_23 sample324-regular: 22.409250259399414
dataset_04_28_23 sample3464-regular: 16.04671859741211
dataset_04_28_23 sample981-regular: 40.49005126953125
Loss: 23.374 +- 8.796

Removing /scratch/midway3/erschultz/ContactGNNEnergy8regsample
