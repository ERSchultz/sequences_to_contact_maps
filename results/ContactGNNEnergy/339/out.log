#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 Bilinear 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project/depablo/erschultz/dataset_11_18_22', '/project/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy2', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=2, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=339, pretrained=False, resume_training=False, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear_triu', head_architecture_2='fc-fill', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000, 1024], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/339', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/339/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/339/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/339/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f63558c8280>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 19.945 minutes
Average num edges per graph:  222294.36527196653
Mean degree: [362.66 512.   449.47 ... 329.12 511.93 511.26] +- [70.54  0.   53.89 ... 80.99  0.29  1.69]

split sizes: train=4302, val=478, test=0, N=4780
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 2, loss = 10.7469
Mean test/val loss: 9.8691
[25, 50, 75] quantiles test/val loss: [ 6.711   9.1374 11.4822]

Epoch 4, loss = 9.4690
Mean test/val loss: 10.8961
[25, 50, 75] quantiles test/val loss: [ 6.8471  8.7936 11.719 ]

Epoch 6, loss = 8.9250
Mean test/val loss: 8.7318
[25, 50, 75] quantiles test/val loss: [5.9877 7.6484 9.7441]

Epoch 8, loss = 8.2761
Mean test/val loss: 8.3431
[25, 50, 75] quantiles test/val loss: [5.6804 7.8906 9.8684]

Epoch 10, loss = 8.1810
Mean test/val loss: 8.6973
[25, 50, 75] quantiles test/val loss: [5.7382 7.4463 9.1148]

Epoch 12, loss = 8.0618
Mean test/val loss: 7.9694
[25, 50, 75] quantiles test/val loss: [5.5861 7.2689 8.9594]

Epoch 14, loss = 7.8121
Mean test/val loss: 8.8072
[25, 50, 75] quantiles test/val loss: [6.6369 7.9231 9.2415]

Epoch 16, loss = 7.5595
Mean test/val loss: 7.8549
[25, 50, 75] quantiles test/val loss: [5.2149 6.9784 9.0596]

Epoch 18, loss = 7.2694
Mean test/val loss: 8.3225
[25, 50, 75] quantiles test/val loss: [6.1746 7.6884 9.0399]

Epoch 20, loss = 7.0517
Mean test/val loss: 7.1978
[25, 50, 75] quantiles test/val loss: [4.9652 6.3697 8.2126]

Epoch 22, loss = 6.8037
Mean test/val loss: 7.5319
[25, 50, 75] quantiles test/val loss: [5.327  6.5242 8.2856]

Epoch 24, loss = 6.7130
Mean test/val loss: 7.8566
[25, 50, 75] quantiles test/val loss: [4.9842 6.4309 8.5706]

Epoch 26, loss = 6.7025
Mean test/val loss: 6.9387
[25, 50, 75] quantiles test/val loss: [4.5727 6.0235 7.91  ]

Epoch 28, loss = 6.4889
Mean test/val loss: 7.0681
[25, 50, 75] quantiles test/val loss: [4.9416 6.2397 8.1017]

Epoch 30, loss = 6.3680
Mean test/val loss: 6.8742
[25, 50, 75] quantiles test/val loss: [4.469  6.0715 8.0162]

Epoch 32, loss = 6.2674
Mean test/val loss: 6.7041
[25, 50, 75] quantiles test/val loss: [4.5371 5.9004 7.5557]

Epoch 34, loss = 6.1771
Mean test/val loss: 6.6541
[25, 50, 75] quantiles test/val loss: [4.5811 5.8356 7.5545]

Epoch 36, loss = 6.0776
Mean test/val loss: 7.5820
[25, 50, 75] quantiles test/val loss: [5.2915 6.6793 8.8711]

Epoch 38, loss = 5.9847
Mean test/val loss: 6.5112
[25, 50, 75] quantiles test/val loss: [4.3119 5.6071 7.5733]

Epoch 40, loss = 6.1372
Mean test/val loss: 6.5480
[25, 50, 75] quantiles test/val loss: [4.5342 5.9124 7.6159]

Epoch 42, loss = 5.9146
Mean test/val loss: 6.5736
[25, 50, 75] quantiles test/val loss: [4.4638 5.6603 7.0255]

Epoch 44, loss = 5.8594
Mean test/val loss: 6.4994
[25, 50, 75] quantiles test/val loss: [4.206  5.6873 7.4609]

Epoch 46, loss = 5.7396
Mean test/val loss: 6.2118
[25, 50, 75] quantiles test/val loss: [4.2308 5.3169 7.3493]

Epoch 48, loss = 5.6161
Mean test/val loss: 6.1135
[25, 50, 75] quantiles test/val loss: [4.0405 5.3345 6.9784]

Epoch 50, loss = 5.5637
Mean test/val loss: 8.1197
[25, 50, 75] quantiles test/val loss: [5.7336 7.4068 9.3004]

Epoch 52, loss = 5.2271
Mean test/val loss: 5.9494
[25, 50, 75] quantiles test/val loss: [3.7592 5.0461 6.8604]

Epoch 54, loss = 5.1850
Mean test/val loss: 5.9259
[25, 50, 75] quantiles test/val loss: [3.7107 5.2465 6.7979]

Epoch 56, loss = 5.1541
Mean test/val loss: 5.8958
[25, 50, 75] quantiles test/val loss: [3.872  5.0144 6.7538]

Epoch 58, loss = 5.1298
Mean test/val loss: 5.8858
[25, 50, 75] quantiles test/val loss: [3.5414 5.0045 6.7719]

Epoch 60, loss = 5.1057
Mean test/val loss: 5.8702
[25, 50, 75] quantiles test/val loss: [3.6656 5.0581 6.7631]

Epoch 62, loss = 5.0847
Mean test/val loss: 5.8576
[25, 50, 75] quantiles test/val loss: [3.551  5.0527 6.6495]

Epoch 64, loss = 5.0664
Mean test/val loss: 5.8700
[25, 50, 75] quantiles test/val loss: [3.6568 4.9694 6.9968]

Epoch 66, loss = 5.0506
Mean test/val loss: 5.8470
[25, 50, 75] quantiles test/val loss: [3.6653 4.9081 6.7592]

Epoch 68, loss = 5.0305
Mean test/val loss: 5.8316
[25, 50, 75] quantiles test/val loss: [3.7998 5.0547 6.6321]

Epoch 70, loss = 5.0156
Mean test/val loss: 5.8284
[25, 50, 75] quantiles test/val loss: [3.5743 5.0316 7.0181]

Epoch 72, loss = 5.0005
Mean test/val loss: 5.8317
[25, 50, 75] quantiles test/val loss: [3.6235 5.0543 6.8124]

Epoch 74, loss = 4.9861
Mean test/val loss: 5.8298
[25, 50, 75] quantiles test/val loss: [3.7243 5.0503 6.6696]

Epoch 76, loss = 4.9713
Mean test/val loss: 5.8217
[25, 50, 75] quantiles test/val loss: [3.818  5.0617 6.7698]

Epoch 78, loss = 4.9570
Mean test/val loss: 5.8045
[25, 50, 75] quantiles test/val loss: [3.6111 5.0005 6.9541]

Epoch 80, loss = 4.9451
Mean test/val loss: 5.8347
[25, 50, 75] quantiles test/val loss: [3.7862 4.9238 6.8725]

Epoch 82, loss = 4.9327
Mean test/val loss: 5.8127
[25, 50, 75] quantiles test/val loss: [3.6282 5.085  6.7868]

Epoch 84, loss = 4.9203
Mean test/val loss: 5.7926
[25, 50, 75] quantiles test/val loss: [3.6755 5.0809 6.5186]

Epoch 86, loss = 4.9081
Mean test/val loss: 5.7706
[25, 50, 75] quantiles test/val loss: [3.4793 4.9926 6.6496]

Epoch 88, loss = 4.8961
Mean test/val loss: 5.7812
[25, 50, 75] quantiles test/val loss: [3.5294 5.0494 6.4508]

Epoch 90, loss = 4.8867
Mean test/val loss: 5.7835
[25, 50, 75] quantiles test/val loss: [3.4352 4.9868 6.7199]

Epoch 92, loss = 4.8750
#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 Bilinear 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project/depablo/erschultz/dataset_11_18_22', '/project/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy2', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=2, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=339, pretrained=False, resume_training=True, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear_triu', head_architecture_2='fc-fill', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000, 1024], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/339', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/339/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/339/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/339/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f97b4fd4280>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 0.027 minutes
Average num edges per graph:  nan
split sizes: train=4302, val=478, test=0, N=4780
Partially-trained model is loaded.
Starting at epoch 91
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 92, loss = 4.8748
Mean test/val loss: 5.8071
[25, 50, 75] quantiles test/val loss: [3.6534 4.9413 6.7688]

Epoch 94, loss = 4.8639
Mean test/val loss: 5.7489
[25, 50, 75] quantiles test/val loss: [3.6552 4.97   6.4691]

Epoch 96, loss = 4.8540
Mean test/val loss: 5.7534
[25, 50, 75] quantiles test/val loss: [3.6905 5.0278 6.4316]

Epoch 98, loss = 4.8425
Mean test/val loss: 5.7497
[25, 50, 75] quantiles test/val loss: [3.5707 4.9282 6.8136]

Epoch 100, loss = 4.8322
Mean test/val loss: 5.7499
[25, 50, 75] quantiles test/val loss: [3.5877 4.781  6.6852]


Total parameters: 43360468
Total training + validation time: 5.0 hours, 9.0 mins, and 52.400000000001455 secs
Final val loss: 5.749921091430855

split sizes: train=4302, val=478, test=0, N=4780
#### Plotting Script ####
Prediction Results:
dataset_11_21_22 sample939: 6.5631561279296875
dataset_11_18_22 sample203: 6.66249942779541
dataset_11_21_22 sample743: 8.409537315368652
dataset_11_21_22 sample45: 3.0105481147766113
dataset_11_18_22 sample559: 3.412595748901367
Loss: 5.612 +- 2.071

Downsampling (40%) Results:
dataset_11_18_22 sample203-downsampling: 6.855124473571777
dataset_11_18_22 sample45-downsampling: 16.460187911987305
dataset_11_18_22 sample559-downsampling: 3.412595748901367
dataset_11_18_22 sample743-downsampling: 10.949647903442383
dataset_11_18_22 sample939-downsampling: 3.1308932304382324
Loss: 6.319 +- 4.616

Removing /project/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy2downsample
Original sampling (100%) Results:
dataset_11_18_22 sample203-regular: 6.905536651611328
dataset_11_18_22 sample45-regular: 13.251766204833984
dataset_11_18_22 sample559-regular: 3.263339042663574
dataset_11_18_22 sample743-regular: 10.294120788574219
dataset_11_18_22 sample939-regular: 2.84763240814209
Loss: 5.647 +- 3.922

Removing /project/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy2regsample
Upsampling (200%) Results:
dataset_11_18_22 sample203-upsampling: 6.253624439239502
dataset_11_18_22 sample45-upsampling: 14.270024299621582
dataset_11_18_22 sample559-upsampling: 3.3559470176696777
dataset_11_18_22 sample743-upsampling: 10.122522354125977
dataset_11_18_22 sample939-upsampling: 2.7385942935943604
Loss: 5.602 +- 4.066

Removing /project/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy2upsample
