#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_02_01_23', '/project2/depablo/erschultz/dataset_02_06_23', '/project2/depablo/erschultz/dataset_02_07_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy1', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[50], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=367, pretrained=False, resume_training=False, k=8, m=512, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/367', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/367/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/367/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/367/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f3bd5bb6310>, channels=1, node_feature_size=1, input_m=256, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 62.06 minutes
Number of samples: 15000
Average num edges per graph:  58328.413466666665
Mean degree: [255.98 253.55 256.   ... 255.98 256.   163.9 ] +- [ 0.12  4.29  0.   ...  0.15  0.   38.  ]

split sizes: train=13500, val=1500, test=0, N=15000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f3b9b92e8e0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.7340
Mean test/val loss: 0.7323
[25, 50, 75] quantiles test/val loss: [0.3272 0.4795 0.8438]

Epoch 4, loss = 0.6092
Mean test/val loss: 0.6097
[25, 50, 75] quantiles test/val loss: [0.1736 0.3979 0.7549]

Epoch 6, loss = 0.5571
Mean test/val loss: 0.5433
[25, 50, 75] quantiles test/val loss: [0.1452 0.3502 0.6925]

Epoch 8, loss = 0.6520
Mean test/val loss: 0.5525
[25, 50, 75] quantiles test/val loss: [0.156  0.3822 0.7215]

Epoch 10, loss = 0.5100
Mean test/val loss: 0.5733
[25, 50, 75] quantiles test/val loss: [0.1455 0.3381 0.6653]

Epoch 12, loss = 0.4907
Mean test/val loss: 0.4980
[25, 50, 75] quantiles test/val loss: [0.1218 0.3227 0.6514]

Epoch 14, loss = 0.5866
Mean test/val loss: 0.4900
[25, 50, 75] quantiles test/val loss: [0.1265 0.3204 0.6291]

Epoch 16, loss = 0.4774
Mean test/val loss: 0.6322
[25, 50, 75] quantiles test/val loss: [0.1527 0.4355 0.7963]

Epoch 18, loss = 65.5522
Mean test/val loss: 0.5628
[25, 50, 75] quantiles test/val loss: [0.1704 0.3988 0.7123]

Epoch 20, loss = 0.4457
Mean test/val loss: 0.4645
[25, 50, 75] quantiles test/val loss: [0.1034 0.2921 0.6147]

Epoch 22, loss = 0.4402
Mean test/val loss: 0.4565
[25, 50, 75] quantiles test/val loss: [0.1005 0.2878 0.6093]

Epoch 24, loss = 0.4287
Mean test/val loss: 0.4472
[25, 50, 75] quantiles test/val loss: [0.0901 0.2721 0.5876]

Epoch 26, loss = 0.4832
Mean test/val loss: 0.4460
[25, 50, 75] quantiles test/val loss: [0.0978 0.2793 0.5865]

Epoch 28, loss = 0.4193
Mean test/val loss: 0.4456
[25, 50, 75] quantiles test/val loss: [0.0912 0.2787 0.5785]

Epoch 30, loss = 0.4088
Mean test/val loss: 0.4446
[25, 50, 75] quantiles test/val loss: [0.0878 0.2664 0.5849]

Epoch 32, loss = 0.4041
Mean test/val loss: 0.4389
[25, 50, 75] quantiles test/val loss: [0.0873 0.2704 0.574 ]

Epoch 34, loss = 0.3982
Mean test/val loss: 0.4401
[25, 50, 75] quantiles test/val loss: [0.0922 0.2703 0.5654]

Epoch 36, loss = 0.3899
Mean test/val loss: 0.4243
[25, 50, 75] quantiles test/val loss: [0.0826 0.2581 0.5561]

Epoch 38, loss = 0.3842
Mean test/val loss: 0.4252
[25, 50, 75] quantiles test/val loss: [0.0828 0.2604 0.5575]

Epoch 40, loss = 0.3817
Mean test/val loss: 0.4162
[25, 50, 75] quantiles test/val loss: [0.0786 0.2511 0.5477]

Epoch 42, loss = 0.3742
Mean test/val loss: 0.4163
[25, 50, 75] quantiles test/val loss: [0.078  0.2492 0.5424]

Epoch 44, loss = 0.3700
Mean test/val loss: 0.4302
[25, 50, 75] quantiles test/val loss: [0.078  0.2579 0.5625]

Epoch 46, loss = 0.3659
Mean test/val loss: 0.4186
[25, 50, 75] quantiles test/val loss: [0.0805 0.2557 0.5477]

Epoch 48, loss = 0.3613
Mean test/val loss: 0.4189
[25, 50, 75] quantiles test/val loss: [0.0774 0.2511 0.5389]

Epoch 50, loss = 0.3596
Mean test/val loss: 0.4136
[25, 50, 75] quantiles test/val loss: [0.075  0.2457 0.5318]

New lr: 1e-05
Epoch 52, loss = 0.3330
Mean test/val loss: 0.3977
[25, 50, 75] quantiles test/val loss: [0.0704 0.2366 0.5163]

Epoch 54, loss = 0.3282
Mean test/val loss: 0.3960
[25, 50, 75] quantiles test/val loss: [0.0694 0.2342 0.5144]

Epoch 56, loss = 0.3256
Mean test/val loss: 0.3956
[25, 50, 75] quantiles test/val loss: [0.0694 0.2344 0.512 ]

Epoch 58, loss = 0.3236
Mean test/val loss: 0.3960
[25, 50, 75] quantiles test/val loss: [0.069  0.2352 0.5127]

Epoch 60, loss = 0.3218
Mean test/val loss: 0.3957
[25, 50, 75] quantiles test/val loss: [0.0688 0.235  0.5124]

Epoch 62, loss = 0.3203
Mean test/val loss: 0.3951
[25, 50, 75] quantiles test/val loss: [0.0685 0.2316 0.5125]

Epoch 64, loss = 0.3188
Mean test/val loss: 0.3963
[25, 50, 75] quantiles test/val loss: [0.0684 0.2336 0.5116]

Epoch 66, loss = 0.3175
Mean test/val loss: 0.3952
[25, 50, 75] quantiles test/val loss: [0.068  0.2331 0.5116]

Epoch 68, loss = 0.3162
Mean test/val loss: 0.3964
[25, 50, 75] quantiles test/val loss: [0.0681 0.232  0.5136]

Epoch 70, loss = 0.3149
Mean test/val loss: 0.3956
[25, 50, 75] quantiles test/val loss: [0.0682 0.2334 0.5121]

Epoch 72, loss = 0.3138
