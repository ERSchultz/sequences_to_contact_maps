#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_18_22', '/project2/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy4', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=50.0, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=2, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[50], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=361, pretrained=False, resume_training=False, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/361', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/361/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/361/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/361/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f230818d3a0>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 35.046 minutes
Number of samples: 3602
Average num edges per graph:  231739.04664075514
Mean degree: [362.66 512.   412.99 ... 381.99 429.27 511.93] +- [70.54  0.   59.9  ... 65.59 57.27  0.29]

split sizes: train=3242, val=360, test=0, N=3602
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f22d20be280>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.7112
Mean test/val loss: 0.6921
[25, 50, 75] quantiles test/val loss: [0.5009 0.6605 0.8832]

Epoch 4, loss = 0.6463
Mean test/val loss: 0.6182
[25, 50, 75] quantiles test/val loss: [0.4541 0.6157 0.7643]

Epoch 6, loss = 0.6201
Mean test/val loss: 0.6087
[25, 50, 75] quantiles test/val loss: [0.4207 0.6053 0.7832]

Epoch 8, loss = 0.6012
Mean test/val loss: 0.5767
[25, 50, 75] quantiles test/val loss: [0.4193 0.5611 0.7148]

Epoch 10, loss = 0.5810
Mean test/val loss: 0.6077
[25, 50, 75] quantiles test/val loss: [0.4669 0.5841 0.7472]

Epoch 12, loss = 0.5661
Mean test/val loss: 0.5485
[25, 50, 75] quantiles test/val loss: [0.3855 0.5571 0.6968]

Epoch 14, loss = 0.5616
Mean test/val loss: 0.5621
[25, 50, 75] quantiles test/val loss: [0.4079 0.5562 0.6696]

Epoch 16, loss = 0.5539
Mean test/val loss: 0.5421
[25, 50, 75] quantiles test/val loss: [0.3646 0.5362 0.6953]

Epoch 18, loss = 0.6263
Mean test/val loss: 0.6159
[25, 50, 75] quantiles test/val loss: [0.4735 0.6102 0.7551]

Epoch 20, loss = 0.5795
Mean test/val loss: 0.5924
[25, 50, 75] quantiles test/val loss: [0.442  0.5831 0.721 ]

Epoch 22, loss = 0.5633
Mean test/val loss: 0.5670
[25, 50, 75] quantiles test/val loss: [0.3813 0.5679 0.6984]

Epoch 24, loss = 0.5503
Mean test/val loss: 0.5560
[25, 50, 75] quantiles test/val loss: [0.4279 0.5615 0.6821]

Epoch 26, loss = 0.5506
Mean test/val loss: 0.5342
[25, 50, 75] quantiles test/val loss: [0.3829 0.5008 0.6646]

Epoch 28, loss = 0.5395
Mean test/val loss: 0.5436
[25, 50, 75] quantiles test/val loss: [0.4064 0.5491 0.6792]

Epoch 30, loss = 0.5222
Mean test/val loss: 0.5048
[25, 50, 75] quantiles test/val loss: [0.3756 0.4766 0.637 ]

Epoch 32, loss = 0.5509
Mean test/val loss: 0.5173
[25, 50, 75] quantiles test/val loss: [0.3536 0.4999 0.661 ]

Epoch 34, loss = 0.5103
Mean test/val loss: 0.5088
[25, 50, 75] quantiles test/val loss: [0.3554 0.4797 0.6446]

Epoch 36, loss = 0.4921
Mean test/val loss: 0.4971
[25, 50, 75] quantiles test/val loss: [0.3374 0.4815 0.6699]

Epoch 38, loss = 0.5523
Mean test/val loss: 0.5104
[25, 50, 75] quantiles test/val loss: [0.3611 0.5107 0.6401]

Epoch 40, loss = 0.4850
Mean test/val loss: 0.4803
[25, 50, 75] quantiles test/val loss: [0.3196 0.4748 0.6088]

Epoch 42, loss = 0.4818
Mean test/val loss: 0.4770
[25, 50, 75] quantiles test/val loss: [0.3205 0.4752 0.6147]

Epoch 44, loss = 0.4769
Mean test/val loss: 0.4758
[25, 50, 75] quantiles test/val loss: [0.3407 0.4794 0.5979]

Epoch 46, loss = 0.4820
Mean test/val loss: 0.4690
[25, 50, 75] quantiles test/val loss: [0.3066 0.4679 0.5941]

Epoch 48, loss = 0.4694
Mean test/val loss: 0.4624
[25, 50, 75] quantiles test/val loss: [0.3084 0.4514 0.5941]

Epoch 50, loss = 0.4767
Mean test/val loss: 0.4758
[25, 50, 75] quantiles test/val loss: [0.2887 0.4689 0.6334]

New lr: 1e-05
Epoch 52, loss = 0.4505
Mean test/val loss: 0.4556
[25, 50, 75] quantiles test/val loss: [0.3227 0.4503 0.574 ]

Epoch 54, loss = 0.4434
Mean test/val loss: 0.4528
[25, 50, 75] quantiles test/val loss: [0.3138 0.4474 0.5718]

Epoch 56, loss = 0.4392
Mean test/val loss: 0.4479
[25, 50, 75] quantiles test/val loss: [0.3111 0.4355 0.5697]

Epoch 58, loss = 0.4360
Mean test/val loss: 0.4451
[25, 50, 75] quantiles test/val loss: [0.2968 0.4541 0.5899]

Epoch 60, loss = 0.4336
