#### ARCHITECTURE ####
Node Encoder:
 None 

Edge Encoder:
 None 

Linear:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(1, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=32768, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (5): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (6): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=2080, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
) 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project/depablo/erschultz/dataset_11_18_22', '/project/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy5', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=2, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=335, pretrained=False, resume_training=False, k=None, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, message_passing='weighted_GAT', head_architecture='bilinear_chi_triu', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/335', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/335/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/335/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/335/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f8954fb4280>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 72.425 minutes
Average num edges per graph:  222294.36527196653
Mean degree: [362.66 512.   449.47 ... 329.12 511.93 511.26] +- [70.54  0.   53.89 ... 80.99  0.29  1.69]

split sizes: train=4302, val=478, test=0, N=4780
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.7446
Mean test/val loss: 0.8221
[25, 50, 75] quantiles test/val loss: [0.6627 0.8358 0.9831]

Epoch 4, loss = 0.6715
Mean test/val loss: 0.6213
[25, 50, 75] quantiles test/val loss: [0.452  0.6372 0.807 ]

Epoch 6, loss = 0.7209
Mean test/val loss: 0.6918
[25, 50, 75] quantiles test/val loss: [0.5035 0.6943 0.9042]

Epoch 8, loss = 0.7002
Mean test/val loss: 0.6486
[25, 50, 75] quantiles test/val loss: [0.4641 0.6261 0.8214]

Epoch 10, loss = 0.7295
Mean test/val loss: 0.7222
[25, 50, 75] quantiles test/val loss: [0.5378 0.6999 0.8767]

Epoch 12, loss = 0.7050
Mean test/val loss: 0.6963
[25, 50, 75] quantiles test/val loss: [0.4701 0.6596 0.889 ]

Epoch 14, loss = 0.6639
Mean test/val loss: 0.6200
[25, 50, 75] quantiles test/val loss: [0.4648 0.6015 0.7688]

Epoch 16, loss = 0.6551
Mean test/val loss: 0.6033
[25, 50, 75] quantiles test/val loss: [0.4338 0.5829 0.7659]

Epoch 18, loss = 0.6574
Mean test/val loss: 0.6598
[25, 50, 75] quantiles test/val loss: [0.5037 0.659  0.8069]

Epoch 20, loss = 0.6384
Mean test/val loss: 0.6018
[25, 50, 75] quantiles test/val loss: [0.3904 0.5849 0.7897]

Epoch 22, loss = 10.8409
Mean test/val loss: 0.7047
[25, 50, 75] quantiles test/val loss: [0.524  0.6627 0.9066]

Epoch 24, loss = 0.6837
Mean test/val loss: 0.6959
[25, 50, 75] quantiles test/val loss: [0.4919 0.6702 0.8719]

Epoch 26, loss = 0.6855
Mean test/val loss: 0.7692
[25, 50, 75] quantiles test/val loss: [0.4883 0.7559 1.0117]

Epoch 28, loss = 0.6593
Mean test/val loss: 0.7135
[25, 50, 75] quantiles test/val loss: [0.5377 0.6928 0.8792]

Epoch 30, loss = 0.6360
Mean test/val loss: 0.5923
[25, 50, 75] quantiles test/val loss: [0.4043 0.6059 0.7504]

Epoch 32, loss = 0.6839
Mean test/val loss: 0.6513
[25, 50, 75] quantiles test/val loss: [0.4724 0.621  0.8794]

Epoch 34, loss = 0.6493
Mean test/val loss: 0.6000
[25, 50, 75] quantiles test/val loss: [0.4435 0.603  0.754 ]

Epoch 36, loss = 0.6237
Mean test/val loss: 0.6439
[25, 50, 75] quantiles test/val loss: [0.5109 0.6388 0.7463]

Epoch 38, loss = 9329.7770
Mean test/val loss: 0.9709
[25, 50, 75] quantiles test/val loss: [0.6387 0.8756 1.2183]

Epoch 40, loss = 0.7291
Mean test/val loss: 0.7730
[25, 50, 75] quantiles test/val loss: [0.6253 0.7526 0.9363]

Epoch 42, loss = 0.6887
Mean test/val loss: 0.6756
[25, 50, 75] quantiles test/val loss: [0.4669 0.6758 0.8894]

Epoch 44, loss = 0.6817
Mean test/val loss: 0.7543
[25, 50, 75] quantiles test/val loss: [0.5756 0.7546 0.901 ]

Epoch 46, loss = 0.6612
Mean test/val loss: 0.6457
[25, 50, 75] quantiles test/val loss: [0.4663 0.6149 0.838 ]

Epoch 48, loss = 0.6407
Mean test/val loss: 0.6089
[25, 50, 75] quantiles test/val loss: [0.4336 0.6145 0.77  ]

Epoch 50, loss = 0.6261
Mean test/val loss: 0.5847
[25, 50, 75] quantiles test/val loss: [0.4125 0.5851 0.7604]

Epoch 52, loss = 0.5967
Mean test/val loss: 0.5749
[25, 50, 75] quantiles test/val loss: [0.3824 0.5693 0.7761]

Epoch 54, loss = 0.5907
Mean test/val loss: 0.5669
[25, 50, 75] quantiles test/val loss: [0.4168 0.5822 0.7171]

Epoch 56, loss = 0.5843
Mean test/val loss: 0.5720
[25, 50, 75] quantiles test/val loss: [0.4078 0.5581 0.7296]

Epoch 58, loss = 0.5779
Mean test/val loss: 0.5582
[25, 50, 75] quantiles test/val loss: [0.3903 0.5665 0.7283]

Epoch 60, loss = 0.5732
Mean test/val loss: 0.5532
[25, 50, 75] quantiles test/val loss: [0.3789 0.5804 0.7243]

Epoch 62, loss = 0.5681
Mean test/val loss: 0.5491
[25, 50, 75] quantiles test/val loss: [0.4066 0.5407 0.6939]

Epoch 64, loss = 0.5640
Mean test/val loss: 0.5441
[25, 50, 75] quantiles test/val loss: [0.3726 0.5384 0.7256]

Epoch 66, loss = 0.5604
Mean test/val loss: 0.5435
[25, 50, 75] quantiles test/val loss: [0.3616 0.5247 0.7114]

Epoch 68, loss = 0.5564
Mean test/val loss: 0.5414
[25, 50, 75] quantiles test/val loss: [0.3826 0.5477 0.6993]

Epoch 70, loss = 0.5534
Mean test/val loss: 0.5372
[25, 50, 75] quantiles test/val loss: [0.3801 0.5316 0.7113]

Epoch 72, loss = 0.5503
Mean test/val loss: 0.5373
[25, 50, 75] quantiles test/val loss: [0.3849 0.5385 0.6723]

Epoch 74, loss = 0.5473
#### ARCHITECTURE ####
Node Encoder:
 None 

Edge Encoder:
 None 

Linear:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(1, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=32768, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (5): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (6): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=2080, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
) 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project/depablo/erschultz/dataset_11_18_22', '/project/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy5', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=2, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=335, pretrained=False, resume_training=True, k=None, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=False, message_passing='weighted_GAT', head_architecture='bilinear_chi_triu', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/335', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/335/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/335/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/335/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7fb4b00cc280>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 0.044 minutes
Average num edges per graph:  nan
split sizes: train=4302, val=478, test=0, N=4780
Partially-trained model is loaded.
Starting at epoch 71
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 72, loss = 0.5497
Mean test/val loss: 0.5509
[25, 50, 75] quantiles test/val loss: [0.4147 0.5492 0.6917]

Epoch 74, loss = 0.5468
Mean test/val loss: 0.5418
[25, 50, 75] quantiles test/val loss: [0.3716 0.5544 0.7032]

Epoch 76, loss = 0.5443
Mean test/val loss: 0.5340
[25, 50, 75] quantiles test/val loss: [0.3637 0.531  0.7195]

Epoch 78, loss = 0.5409
Mean test/val loss: 0.5309
[25, 50, 75] quantiles test/val loss: [0.3727 0.5194 0.6579]

Epoch 80, loss = 0.5379
Mean test/val loss: 0.5341
[25, 50, 75] quantiles test/val loss: [0.3804 0.5252 0.6817]

Epoch 82, loss = 0.5349
Mean test/val loss: 0.5294
[25, 50, 75] quantiles test/val loss: [0.3626 0.5166 0.6734]

Epoch 84, loss = 0.5322
Mean test/val loss: 0.5247
[25, 50, 75] quantiles test/val loss: [0.3535 0.5109 0.6826]

Epoch 86, loss = 0.5298
Mean test/val loss: 0.5259
[25, 50, 75] quantiles test/val loss: [0.37   0.5208 0.6837]

Epoch 88, loss = 0.5269
Mean test/val loss: 0.5253
[25, 50, 75] quantiles test/val loss: [0.3756 0.5188 0.6752]

Epoch 90, loss = 0.5252
Mean test/val loss: 0.5242
[25, 50, 75] quantiles test/val loss: [0.3215 0.5168 0.6848]

Epoch 92, loss = 0.5220
Mean test/val loss: 0.5226
[25, 50, 75] quantiles test/val loss: [0.3526 0.4972 0.6941]

Epoch 94, loss = 0.5201
Mean test/val loss: 0.5204
[25, 50, 75] quantiles test/val loss: [0.3679 0.4996 0.6625]

Epoch 96, loss = 0.5180
Mean test/val loss: 0.5207
[25, 50, 75] quantiles test/val loss: [0.3614 0.5214 0.6768]

Epoch 98, loss = 0.5156
Mean test/val loss: 0.5192
[25, 50, 75] quantiles test/val loss: [0.3523 0.5243 0.6728]

Epoch 100, loss = 0.5138
Mean test/val loss: 0.5171
[25, 50, 75] quantiles test/val loss: [0.34   0.5226 0.6708]


Total parameters: 83201604
Total training + validation time: 7.0 hours, 45.0 mins, and 37.29999999999927 secs
Final val loss: 0.5171037756810627

split sizes: train=4302, val=478, test=0, N=4780
#### Plotting Script ####
Prediction Results:
dataset_11_21_22 sample939: 0.6240403652191162
dataset_11_18_22 sample203: 0.9812081456184387
dataset_11_21_22 sample743: 0.7565734386444092
dataset_11_21_22 sample45: 0.21006900072097778
dataset_11_18_22 sample559: 0.5030985474586487
Loss: 0.615 +- 0.257

Downsampling (40%) Results:
dataset_11_18_22 sample203-downsampling: 8.630277633666992
dataset_11_18_22 sample45-downsampling: 22.380088806152344
dataset_11_18_22 sample559-downsampling: 4.364635467529297
dataset_11_18_22 sample743-downsampling: 13.199277877807617
dataset_11_18_22 sample939-downsampling: 4.735146522521973
Loss: 8.026 +- 6.081

Removing /project/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy5downsample
Original sampling (100%) Results:
dataset_11_18_22 sample203-regular: 8.367741584777832
dataset_11_18_22 sample45-regular: 20.578720092773438
dataset_11_18_22 sample559-regular: 4.628695487976074
dataset_11_18_22 sample743-regular: 13.410372734069824
dataset_11_18_22 sample939-regular: 4.490793228149414
Loss: 7.734 +- 5.689

Removing /project/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy5regsample
Upsampling (200%) Results:
dataset_11_18_22 sample203-upsampling: 8.117673873901367
dataset_11_18_22 sample45-upsampling: 23.295391082763672
dataset_11_18_22 sample559-upsampling: 5.2183942794799805
dataset_11_18_22 sample743-upsampling: 13.556170463562012
dataset_11_18_22 sample939-upsampling: 4.392643928527832
Loss: 8.061 +- 6.324

Removing /project/depablo/erschultz/dataset_11_18_22/ContactGNNEnergy5upsample
