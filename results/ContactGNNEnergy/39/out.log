Took 1026.0 seconds to move data to scratch
#### ARCHITECTURE ####
Sequential(
  (0): SignedConv(3, 8, first_aggr=True)
  (1): PReLU(num_parameters=1)
  (2): SignedConv(8, 8, first_aggr=False)
  (3): PReLU(num_parameters=1)
  (4): SignedConv(8, 2, first_aggr=False)
)
Sequential(
  (0): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=24, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (1): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (2): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=1, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
) 

Namespace(GNN_mode=True, act='prelu', autoencoder_mode=False, batch_size=4, bottleneck=None, channels=1, classes=10, criterion=<function mse_loss at 0x7f7e04f8b0d0>, crop=None, cuda=True, data_folder='/scratch/midway2/erschultz/dataset_10_08_21', degree=True, delete_root=False, device=device(type='cuda'), dilation_list=None, dilation_list_head=None, dilation_list_trunk=None, down_sampling=None, gamma=0.1, gpus=1, head_act='prelu', head_architecture='concat-outer', head_hidden_sizes_list=[10, 10, 1], hidden_sizes_list=[8, 8, 2], id=39, ifile=None, ifile_folder=None, inner_act='prelu', k=4, kernel_w_list=None, log_file=<_io.TextIOWrapper name='results/ContactGNNEnergy/39/out.log' mode='a' encoding='UTF-8'>, loss='mse', lr=0.0001, m=1024, message_passing='SignedConv', milestones=None, min_subtraction=True, model_type='ContactGNNEnergy', n_epochs=100, nf=None, node_feature_size=3, num_workers=4, ofile_folder='results/ContactGNNEnergy/39', out_act='prelu', output_mode='energy', parameter_sharing=False, plot=True, plot_predictions=True, pre_transforms=['degree'], pre_transforms_processed=None, pretrained=False, print_mod=2, print_params=True, relabel_11_to_00=False, resume_training=False, root_name='ContactGNNEnergy2', save_mod=5, seed=42, shuffle=True, sparsify_threshold=0.176, sparsify_threshold_upper=None, split=[0.8, 0.1, 0.1], split_neg_pos_edges=True, split_neg_pos_edges_for_feature_augmentation=True, start_epoch=1, top_k=None, toxx=False, toxx_mode='mean', training_norm=None, transforms=None, transforms_processed=None, use_bias=True, use_edge_weights=False, use_node_features=False, use_parallel=False, use_scratch=True, verbose=False, weighted_LDP=False, weighted_degree=False, x_reshape=True, y_log_transform=True, y_norm=None, y_preprocessing='diag', y_reshape=True, ydtype=torch.float32)

#### INITIAL PARAMETERS ####
act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

inner_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

out_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

head_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1779, -0.5385, -0.3792],
        [-0.1922,  0.0903, -0.5080],
        [-0.2488, -0.3456,  0.0016],
        [-0.2148, -0.0400, -0.3912],
        [-0.3963, -0.3368, -0.1976],
        [-0.4557,  0.4841, -0.1146],
        [ 0.4968,  0.1799, -0.4889],
        [ 0.3995, -0.1589, -0.2213]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[-0.4792, -0.5740,  0.1652],
        [-0.1261,  0.2248, -0.4738],
        [ 0.4286, -0.4238, -0.0997],
        [ 0.1206,  0.2981,  0.4661],
        [ 0.5259, -0.4578,  0.1453],
        [-0.2483, -0.0633, -0.4321],
        [ 0.5259, -0.4237,  0.3086],
        [ 0.2029,  0.1876, -0.3121]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.5248,  0.1269,  0.0743, -0.5088,  0.2424, -0.0866, -0.2645,  0.4959],
       device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1287, -0.3194, -0.2922],
        [-0.0276,  0.3224, -0.1475],
        [-0.3294, -0.1977, -0.4313],
        [ 0.2059,  0.4469, -0.5435],
        [ 0.1341,  0.2983,  0.1047],
        [-0.2056,  0.3013,  0.3034],
        [ 0.2159, -0.1015, -0.1529],
        [ 0.0618, -0.1020, -0.1721]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.3690,  0.4962, -0.0572],
        [-0.1293,  0.0084, -0.0345],
        [ 0.1388,  0.1618, -0.5244],
        [-0.2131,  0.4862,  0.2249],
        [-0.0287, -0.3481, -0.3532],
        [-0.5172, -0.1882,  0.1950],
        [ 0.3681,  0.2666, -0.5103],
        [-0.3472, -0.0911,  0.5585]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.0835, -0.1495,  0.2389, -0.2199, -0.3737,  0.4214, -0.2625, -0.1157],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_l.weight torch.Size([8, 16])
Parameter containing:
tensor([[-0.0051, -0.1553, -0.0310,  0.1017, -0.2445,  0.0743, -0.1653, -0.1220,
          0.0960,  0.1988, -0.0683, -0.1026, -0.2261, -0.1289, -0.2189, -0.0572],
        [ 0.0510, -0.2342,  0.2183,  0.1568, -0.2447, -0.1194,  0.0815, -0.0514,
         -0.0272, -0.1129,  0.2008, -0.1397,  0.2073,  0.0161,  0.0503,  0.1950],
        [-0.0412, -0.1423, -0.0404,  0.2028, -0.1855,  0.0567, -0.2457,  0.1311,
          0.0924,  0.0106,  0.1073,  0.0003,  0.1383, -0.1979, -0.0367,  0.1109],
        [ 0.2490,  0.1273, -0.1818,  0.1923, -0.0557, -0.0534, -0.2272, -0.0394,
          0.1768,  0.0349, -0.1456,  0.0770, -0.0802,  0.2282, -0.2170, -0.0790],
        [-0.2414, -0.0985,  0.0788,  0.2407,  0.0420,  0.2451,  0.0489,  0.1444,
          0.2004,  0.2090, -0.1399,  0.2298,  0.1514, -0.1169, -0.1193, -0.2097],
        [ 0.0628, -0.2026,  0.1056,  0.0789, -0.2172,  0.0681, -0.0203,  0.1142,
          0.1434, -0.2485,  0.2293,  0.2097,  0.0995, -0.2285, -0.0893, -0.0725],
        [-0.0642,  0.1410,  0.0909,  0.1980, -0.0936,  0.0841,  0.0889, -0.2081,
         -0.2425, -0.1297,  0.1711, -0.2354, -0.2176,  0.1401,  0.1349,  0.2056],
        [-0.1887, -0.1830,  0.1282,  0.2174,  0.1496,  0.0392,  0.0824,  0.2373,
         -0.1613, -0.1135,  0.1749, -0.1711, -0.1379,  0.1825,  0.0789,  0.0808]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.weight torch.Size([8, 8])
Parameter containing:
tensor([[-0.1499, -0.0049,  0.3236, -0.2122,  0.0028,  0.1681, -0.2441,  0.3434],
        [-0.1766, -0.0849, -0.0957, -0.2304, -0.3469,  0.1994,  0.0939, -0.3311],
        [-0.2276,  0.3494,  0.1351,  0.1419, -0.2115, -0.1550, -0.0534, -0.0647],
        [-0.2423,  0.0291,  0.0351, -0.0448,  0.0490, -0.1401,  0.0920,  0.1333],
        [-0.1862, -0.3506,  0.1851,  0.0843, -0.1798,  0.3407, -0.1599,  0.2389],
        [ 0.1794, -0.2964,  0.2280, -0.3251, -0.1959, -0.0589, -0.2383,  0.3454],
        [-0.0709,  0.1404, -0.3157,  0.2035, -0.1099, -0.2689,  0.0517,  0.1713],
        [ 0.3060, -0.2159, -0.1740,  0.0680,  0.0959,  0.1359,  0.1941, -0.0802]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.1964,  0.2607, -0.0924,  0.2515,  0.1727,  0.3119, -0.2009, -0.1746],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_l.weight torch.Size([8, 16])
Parameter containing:
tensor([[-0.0723,  0.0127,  0.1500, -0.1427,  0.1252, -0.0896,  0.1510, -0.0119,
         -0.2190, -0.1376, -0.1809,  0.1240, -0.1676, -0.0208,  0.0539, -0.1371],
        [ 0.0721, -0.2441, -0.1789, -0.2265, -0.0756, -0.0911,  0.0358, -0.0462,
          0.1175,  0.2292,  0.0897, -0.0985, -0.2341,  0.0906, -0.1239,  0.1272],
        [ 0.1671,  0.0964,  0.2346,  0.2374,  0.0529, -0.1822,  0.2234, -0.1186,
         -0.1181,  0.2092,  0.1937,  0.0755,  0.0157, -0.2103, -0.0260,  0.2398],
        [ 0.0637,  0.0214, -0.0519, -0.0872,  0.1490,  0.0154,  0.1626, -0.0442,
          0.1092,  0.1032,  0.0399,  0.1571,  0.1567,  0.2317,  0.1922, -0.0639],
        [-0.2117,  0.0457, -0.0022, -0.0652, -0.0419,  0.0118,  0.1824,  0.0779,
         -0.0888, -0.1028, -0.0619, -0.0966,  0.2248,  0.1324,  0.2257,  0.0008],
        [ 0.0504,  0.0867, -0.2366,  0.0223, -0.0167, -0.1402, -0.1940,  0.2213,
          0.2033,  0.1159,  0.2386, -0.1015, -0.0432,  0.0947, -0.0413, -0.0491],
        [-0.2066,  0.0672, -0.1511,  0.0091,  0.2437, -0.0770, -0.0788,  0.1508,
         -0.0919, -0.0215,  0.2334, -0.1025, -0.1789, -0.1399, -0.0693, -0.1186],
        [-0.1297,  0.1010,  0.0425, -0.0800, -0.1942, -0.0787, -0.1055, -0.0814,
         -0.2255,  0.0539, -0.1837, -0.1947, -0.2043,  0.1043, -0.1505, -0.1032]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.weight torch.Size([8, 8])
Parameter containing:
tensor([[ 0.2771,  0.1877,  0.2027, -0.3357, -0.2535, -0.1335,  0.2921,  0.0362],
        [-0.2644,  0.0022, -0.2746, -0.0775, -0.0972,  0.3061,  0.1095, -0.0616],
        [ 0.0597, -0.1021,  0.1389,  0.1399,  0.0949, -0.1378,  0.3016, -0.0510],
        [-0.1376,  0.2214,  0.2882,  0.3518,  0.1047, -0.1205,  0.1796,  0.3033],
        [-0.3468, -0.0438, -0.2411,  0.0659,  0.1462, -0.0730, -0.0296,  0.1591],
        [-0.0594, -0.2969,  0.2829, -0.1779, -0.0388,  0.0333, -0.0212, -0.3326],
        [ 0.1622, -0.1606, -0.1834,  0.0845, -0.1845, -0.1634, -0.1191, -0.1328],
        [-0.1477, -0.0953,  0.0919, -0.2861, -0.2140,  0.0052,  0.0492,  0.1953]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([-0.2484,  0.1129,  0.2010,  0.1963, -0.3293, -0.1349, -0.3039, -0.2237],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2055, -0.2402,  0.1117,  0.2492,  0.1252,  0.0852, -0.2405,  0.2405,
         -0.0428, -0.2336,  0.2468, -0.1017, -0.0177,  0.2288, -0.1733, -0.1769],
        [ 0.0407, -0.0335,  0.0576, -0.2097,  0.0075, -0.1112, -0.1229, -0.2289,
          0.1326,  0.0482, -0.2114,  0.1984,  0.0754,  0.0464, -0.1468,  0.0377]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.3407,  0.2425, -0.2754,  0.3227,  0.0274,  0.1700,  0.2746,  0.3014],
        [-0.2756,  0.3096, -0.2401,  0.0265, -0.2471, -0.0775, -0.0161, -0.0423]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_r.bias torch.Size([2])
Parameter containing:
tensor([-0.0559,  0.0279], device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2466,  0.1453,  0.1399,  0.1001,  0.1935, -0.0115,  0.0199,  0.0514,
         -0.2180, -0.2014,  0.0307, -0.0978, -0.0046, -0.0574,  0.0389,  0.1627],
        [-0.0829,  0.2002,  0.1974, -0.1919, -0.1931, -0.2023, -0.1370, -0.0973,
         -0.0188, -0.0608, -0.1263, -0.0794, -0.0904,  0.2453, -0.0927, -0.1790]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.1470, -0.0204,  0.2707,  0.2209,  0.3248, -0.2589,  0.2273,  0.2967],
        [-0.1746,  0.3250,  0.2650,  0.0039,  0.1705, -0.1236, -0.3084,  0.0894]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_r.bias torch.Size([2])
Parameter containing:
tensor([ 0.1054, -0.2311], device='cuda:0', requires_grad=True) 

head.0.model.0.weight torch.Size([10, 24])
Parameter containing:
tensor([[ 9.9000e-02, -1.7437e-01,  1.7567e-01,  1.9767e-01,  5.5575e-02,
         -1.2807e-01,  9.9341e-02,  3.4786e-02,  5.5505e-02,  6.7086e-02,
          1.5541e-01, -8.7740e-02, -4.5917e-02,  5.5666e-02,  2.2242e-02,
          1.6460e-01, -1.0721e-01, -7.4335e-03,  3.8141e-02, -5.4213e-02,
          1.3915e-01,  2.2327e-02, -1.8866e-01, -2.2114e-02],
        [-9.2582e-02,  1.9835e-02, -2.3722e-02, -2.0248e-01, -3.7197e-02,
         -1.9551e-02, -6.0192e-02,  1.8755e-01, -4.4540e-02,  1.3113e-01,
          5.0565e-02, -1.7231e-01,  4.7966e-02,  1.6916e-01, -1.3352e-01,
         -1.3194e-01,  1.9981e-01,  1.6402e-01, -1.1388e-01,  1.2283e-01,
         -2.6114e-02, -2.0125e-01,  1.5337e-02,  6.5951e-02],
        [-6.1229e-02,  7.1011e-02, -1.7455e-01,  1.4146e-01,  1.7402e-01,
          1.1257e-01,  3.4597e-02,  6.7228e-02, -1.4769e-01, -5.1005e-02,
         -1.9487e-02, -1.1359e-01, -1.5077e-01,  1.3730e-01,  1.3853e-01,
         -1.8538e-01,  6.4955e-02,  8.3038e-02,  1.9391e-01,  1.1810e-01,
          1.8766e-01, -6.6828e-02,  1.4297e-01,  1.6603e-01],
        [-1.9276e-01, -1.6385e-01,  4.1316e-02,  1.1146e-01, -1.0141e-01,
          2.2481e-02, -2.9633e-04,  5.1665e-02, -1.0969e-01,  1.1513e-01,
          1.3574e-01, -1.4163e-01,  1.9774e-03,  5.6636e-04,  6.5547e-02,
          1.9016e-01,  5.9862e-02, -4.6381e-02,  1.8333e-01, -7.7676e-02,
         -5.9272e-02,  1.3937e-02, -1.5544e-01,  2.2212e-02],
        [-1.3849e-01,  2.0988e-02,  1.9557e-02,  2.8255e-02, -1.7214e-01,
         -1.9387e-01,  9.3921e-02,  1.7506e-01, -1.8113e-01,  7.5606e-02,
         -1.5026e-01,  1.2797e-02,  1.8991e-01,  1.5485e-01, -1.4924e-01,
          1.2627e-01,  1.0662e-01, -3.1310e-04,  1.9774e-01, -8.1073e-02,
         -4.7503e-02, -1.0317e-01,  2.9373e-02,  5.4049e-02],
        [ 1.6265e-02, -1.1485e-01, -9.1890e-02,  6.9433e-02, -1.7898e-01,
         -3.1789e-02, -4.5217e-03, -8.2704e-02,  7.4284e-02,  1.3157e-02,
          1.4331e-01, -1.8129e-02, -1.2883e-01,  1.4422e-01,  2.8506e-02,
         -5.8461e-02, -1.3454e-01,  4.7844e-02, -1.9468e-01,  5.3762e-02,
          1.0093e-01, -1.7906e-01, -1.3363e-01, -1.4675e-01],
        [ 1.7157e-01,  1.7353e-01,  1.2778e-02,  1.9163e-01, -6.8240e-02,
         -1.9817e-01,  7.1300e-02,  7.2315e-02,  2.0012e-01, -5.9082e-05,
          1.5644e-01,  1.2512e-01,  1.4774e-01, -2.0256e-01,  1.6809e-01,
         -1.7401e-01,  1.8300e-01, -8.4590e-03, -1.8090e-01,  5.6765e-02,
         -4.1549e-02, -1.8334e-01, -7.4003e-02,  2.1046e-02],
        [ 1.5898e-01, -6.2754e-02,  1.2124e-01,  2.5562e-02,  6.8806e-03,
          3.9058e-02, -1.3396e-01, -1.6967e-01, -6.4138e-02, -1.9021e-01,
         -9.5193e-02,  9.3909e-03, -1.3444e-01, -8.4670e-02, -3.6678e-02,
         -2.3516e-02, -1.1268e-01,  9.8084e-03, -2.8651e-02,  5.8379e-02,
          9.2198e-03, -1.0193e-01, -7.0277e-02, -2.3527e-03],
        [-1.2737e-01,  1.5980e-02, -1.4412e-02,  7.9196e-02,  4.8309e-02,
          1.5276e-01, -6.7290e-03, -1.5083e-01,  9.1245e-02, -1.3795e-01,
         -2.8057e-02, -6.6096e-02, -7.7454e-02, -7.5523e-02,  1.8757e-01,
          1.1685e-01,  5.6570e-02,  1.9166e-01, -1.8498e-01,  3.2939e-02,
          1.3068e-01,  1.3560e-01, -1.6245e-01,  7.2646e-02],
        [-1.1629e-01, -7.9759e-03, -4.2595e-02, -1.7044e-01, -1.9472e-01,
         -1.3429e-01,  9.2626e-02,  9.3374e-02, -1.7754e-01, -7.6657e-02,
          3.3342e-03, -1.7648e-01,  1.1501e-01,  1.8488e-01,  3.6102e-02,
         -1.5167e-01,  4.7599e-02,  7.4100e-02,  1.6163e-01, -1.0861e-01,
         -1.8288e-01,  8.9682e-02,  1.2708e-02, -6.6509e-02]], device='cuda:0',
       requires_grad=True) 

head.0.model.0.bias torch.Size([10])
Parameter containing:
tensor([-0.0855, -0.1052,  0.1652, -0.0352,  0.1472,  0.1822,  0.0259,  0.0435,
        -0.0139,  0.1402], device='cuda:0', requires_grad=True) 

head.1.model.0.weight torch.Size([10, 10])
Parameter containing:
tensor([[-0.2849,  0.1258, -0.0515,  0.1444, -0.0014, -0.1171, -0.0341,  0.1708,
         -0.2196, -0.1999],
        [-0.0708, -0.1147,  0.1242,  0.2128, -0.0339,  0.2990, -0.1321, -0.1775,
         -0.1416, -0.2179],
        [-0.2217, -0.2818, -0.2803,  0.0825,  0.1929,  0.2969,  0.2694, -0.0182,
          0.0614, -0.1892],
        [ 0.1222, -0.3032,  0.1492,  0.0580,  0.0972,  0.1158, -0.1452,  0.2714,
          0.1509,  0.2077],
        [ 0.0418,  0.1986,  0.2128,  0.1433,  0.2409, -0.0574,  0.2079,  0.0729,
          0.1903,  0.3080],
        [ 0.0716, -0.1174, -0.0315,  0.0890,  0.0533, -0.0864,  0.2478,  0.1900,
         -0.1964, -0.0258],
        [-0.0304, -0.1982,  0.0461, -0.0971, -0.1633, -0.1017, -0.1128,  0.3025,
          0.1213,  0.3112],
        [ 0.0867,  0.0716,  0.1300,  0.0543, -0.2482, -0.1870, -0.0766,  0.0048,
          0.1191,  0.1218],
        [ 0.2509,  0.0644, -0.1079, -0.2378, -0.2316, -0.1889,  0.0954,  0.1708,
          0.2767, -0.1000],
        [-0.0249, -0.0939, -0.0012,  0.1015, -0.0069,  0.0146,  0.0401,  0.1178,
         -0.0959, -0.1886]], device='cuda:0', requires_grad=True) 

head.1.model.0.bias torch.Size([10])
Parameter containing:
tensor([ 0.0746, -0.0374, -0.1433,  0.1328,  0.0029, -0.0460, -0.1531, -0.0416,
        -0.2689,  0.0719], device='cuda:0', requires_grad=True) 

head.2.model.0.weight torch.Size([1, 10])
Parameter containing:
tensor([[ 0.0047,  0.1919,  0.0204,  0.0253,  0.0861,  0.2406, -0.1494,  0.1888,
          0.0773, -0.2110]], device='cuda:0', requires_grad=True) 

head.2.model.0.bias torch.Size([1])
Parameter containing:
tensor([0.1101], device='cuda:0', requires_grad=True) 



#### TRAINING/VALIDATION ####
Epoch 2, loss = 1.7796
Mean test/val loss: 1.7346

Epoch 4, loss = 1.7416
Mean test/val loss: 1.7188

Epoch 6, loss = 1.7147
Mean test/val loss: 1.6868

Epoch 8, loss = 1.6510
Mean test/val loss: 1.6251

Epoch 10, loss = 1.6167
Mean test/val loss: 1.6098

Epoch 12, loss = 1.5995
Mean test/val loss: 1.5900

Epoch 14, loss = 1.5813
Mean test/val loss: 1.5718

Epoch 16, loss = 1.5597
Mean test/val loss: 1.5476

Epoch 18, loss = 1.5387
Mean test/val loss: 1.5268

Epoch 20, loss = 1.5222
Mean test/val loss: 1.5108

Epoch 22, loss = 1.5076
Mean test/val loss: 1.4944

Epoch 24, loss = 1.4934
Mean test/val loss: 1.4804

Epoch 26, loss = 1.4798
Mean test/val loss: 1.4670

Epoch 28, loss = 1.4672
Mean test/val loss: 1.4544

Epoch 30, loss = 1.4552
Mean test/val loss: 1.4435

Epoch 32, loss = 1.4441
Mean test/val loss: 1.4372

Epoch 34, loss = 1.4339
Mean test/val loss: 1.4262

Epoch 36, loss = 1.4238
Mean test/val loss: 1.4173

Epoch 38, loss = 1.4141
Mean test/val loss: 1.4093

Epoch 40, loss = 1.4056
Mean test/val loss: 1.4029

Epoch 42, loss = 1.3983
Mean test/val loss: 1.3970

Epoch 44, loss = 1.3926
Mean test/val loss: 1.3952

Epoch 46, loss = 1.3877
Mean test/val loss: 1.3928

Epoch 48, loss = 1.3838
Mean test/val loss: 1.3883

Epoch 50, loss = 1.3796
Mean test/val loss: 1.3813

Epoch 52, loss = 1.3765
Mean test/val loss: 1.3791

Epoch 54, loss = 1.3741
Mean test/val loss: 1.3767

Epoch 56, loss = 1.3707
Mean test/val loss: 1.3823

Epoch 58, loss = 1.3683
Mean test/val loss: 1.3718

Epoch 60, loss = 1.3655
Mean test/val loss: 1.3696

Epoch 62, loss = 1.3630
Mean test/val loss: 1.3682

Epoch 64, loss = 1.3613
Mean test/val loss: 1.3658

Epoch 66, loss = 1.3587
Mean test/val loss: 1.3634

Epoch 68, loss = 1.3567
Mean test/val loss: 1.3637

Epoch 70, loss = 1.3543
Mean test/val loss: 1.3701

Epoch 72, loss = 1.3525
Mean test/val loss: 1.3579

Epoch 74, loss = 1.3505
Mean test/val loss: 1.3554

Epoch 76, loss = 1.3489
Mean test/val loss: 1.3535

Epoch 78, loss = 1.3470
Mean test/val loss: 1.3529

Epoch 80, loss = 1.3448
Mean test/val loss: 1.3503

Epoch 82, loss = 1.3433
Mean test/val loss: 1.3515

Epoch 84, loss = 1.3414
Mean test/val loss: 1.3470

Epoch 86, loss = 1.3397
Mean test/val loss: 1.3454

Epoch 88, loss = 1.3381
Mean test/val loss: 1.3447

Epoch 90, loss = 1.3367
Mean test/val loss: 1.3427

Epoch 92, loss = 1.3345
Mean test/val loss: 1.3415

Epoch 94, loss = 1.3332
Mean test/val loss: 1.3397

Epoch 96, loss = 1.3321
Mean test/val loss: 1.3385

Epoch 98, loss = 1.3299
Mean test/val loss: 1.3374

Epoch 100, loss = 1.3285
Mean test/val loss: 1.3404

#### FINAL PARAMETERS ####
act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.4740], device='cuda:0', requires_grad=True) 
grad:  tensor([0.1366], device='cuda:0') 

inner_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.5205], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.8700], device='cuda:0') 

out_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.5675], device='cuda:0', requires_grad=True) 
grad:  tensor([0.2626], device='cuda:0') 

head_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.4293], device='cuda:0', requires_grad=True) 
grad:  tensor([0.4414], device='cuda:0') 

model.nns.0.lin_pos_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.3682, -0.4233, -0.1508],
        [-0.2156,  0.1712, -0.5556],
        [-0.1940, -0.0956, -0.0406],
        [-0.3302,  0.1988, -0.6670],
        [-0.2827,  0.0532, -0.2298],
        [-0.4090,  0.4651, -0.0300],
        [ 0.4800,  0.3523, -0.5531],
        [ 0.3958, -0.2765, -0.2296]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0570,  0.0321,  0.0440],
        [ 0.0275,  0.0195,  0.0183],
        [ 0.0973,  0.0634,  0.0713],
        [-0.0300, -0.0195, -0.0206],
        [ 0.0431,  0.0253,  0.0349],
        [-0.0606, -0.0395, -0.0430],
        [-0.0781, -0.0519, -0.0524],
        [ 0.0980,  0.0601,  0.0704]], device='cuda:0') 

model.nns.0.lin_pos_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[-0.9677, -1.0234, -0.0489],
        [-0.2940,  0.1588, -0.5617],
        [ 0.4307, -0.6442,  0.1536],
        [-0.0456,  0.0150,  0.7055],
        [ 0.4639, -0.8181,  0.3330],
        [-0.2397,  0.1842, -0.5587],
        [ 0.4290, -0.7059,  0.4024],
        [ 0.4327,  0.3885, -0.2402]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0620, -0.0288,  0.0724],
        [ 0.0344, -0.0174,  0.0405],
        [ 0.1159,  0.0058,  0.1133],
        [-0.0264, -0.0390, -0.0100],
        [ 0.0665, -0.0484,  0.0877],
        [-0.0611, -0.0462, -0.0410],
        [-0.0633, -0.0688, -0.0324],
        [ 0.0842,  0.1147,  0.0357]], device='cuda:0') 

model.nns.0.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.6547,  0.1212,  0.2646, -0.5506,  0.4181, -0.1420, -0.2794,  0.4994],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0780,  0.0335,  0.1261, -0.0363,  0.0615, -0.0755, -0.0921,  0.1198],
       device='cuda:0') 

model.nns.0.lin_neg_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[-0.0243, -0.4902, -0.4533],
        [ 0.1780,  0.5499,  0.0394],
        [-0.4815, -0.4183, -0.5606],
        [ 0.6334,  0.8458, -0.1579],
        [ 0.3006,  0.4841,  0.2675],
        [-0.1657,  0.2600,  0.4824],
        [ 0.3149,  0.0968, -0.1007],
        [ 0.1718, -0.0499, -0.0116]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0485, -0.0108, -0.0400],
        [ 0.0566,  0.0233,  0.0444],
        [-0.0219, -0.0095, -0.0158],
        [ 0.1995,  0.0829,  0.1553],
        [ 0.0530,  0.0255,  0.0397],
        [-0.0418, -0.0200, -0.0340],
        [ 0.0273,  0.0094,  0.0225],
        [-0.0048, -0.0066, -0.0027]], device='cuda:0') 

model.nns.0.lin_neg_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.4797,  0.8223,  0.0705],
        [-0.3734, -0.4236, -0.2661],
        [ 0.1993,  0.5236, -0.4595],
        [-0.3200,  0.1934,  0.0996],
        [-0.2041, -0.7585, -0.5244],
        [-0.1858, -0.0398,  0.4015],
        [ 0.3343, -0.0257, -0.5482],
        [-0.4961, -0.2884,  0.3576]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0331, -0.1246,  0.0145],
        [ 0.0535,  0.0651,  0.0278],
        [-0.0169, -0.0655,  0.0090],
        [ 0.1847,  0.2608,  0.0800],
        [ 0.0463,  0.0641,  0.0209],
        [-0.0453,  0.0083, -0.0474],
        [ 0.0279,  0.0400,  0.0115],
        [-0.0035,  0.0170, -0.0094]], device='cuda:0') 

model.nns.0.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.0464, -0.1387,  0.1928, -0.0823, -0.3508,  0.4945, -0.2883, -0.0912],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0455,  0.0669, -0.0171,  0.2274,  0.0590, -0.0610,  0.0326, -0.0073],
       device='cuda:0') 

model.nns.2.lin_pos_l.weight 128 torch.Size([8, 16])
Parameter containing:
tensor([[ 0.0775, -0.1745,  0.2486,  0.2229,  0.1211,  0.0319,  0.0851, -0.1805,
          0.4286, -0.0067,  0.0612, -0.3379, -0.4470, -0.1802, -0.2451, -0.2150],
        [ 0.0033, -0.3728,  0.6227,  0.2609,  0.2748, -0.2947,  0.3416,  0.0585,
          0.6271, -0.6944,  0.3898, -0.8669, -0.3964, -0.0069, -0.1970, -0.1473],
        [-0.4417, -0.1818, -0.5278, -0.0093, -0.7308,  0.0630, -0.4174,  0.3058,
          0.1510, -0.0067,  0.0596,  0.5604,  0.1114, -0.0546,  0.1045, -0.1529],
        [ 0.3707,  0.1346, -0.0456,  0.2506,  0.1566, -0.0615, -0.1101, -0.0927,
          0.4189, -0.0835, -0.0031, -0.1569, -0.2092,  0.1618, -0.1785, -0.1735],
        [-0.3037, -0.1170,  0.1494,  0.3651,  0.2237,  0.2239,  0.1646,  0.1355,
          0.5986, -0.0730,  0.0473, -0.0995, -0.1313, -0.1713, -0.1199, -0.4349],
        [ 0.1694, -0.2017,  0.2215,  0.0562, -0.0659,  0.0560,  0.0185,  0.0992,
          0.3293, -0.3353,  0.3634, -0.0021, -0.0063, -0.2652, -0.0832, -0.1443],
        [-0.1391,  0.1220,  0.3292,  0.4600,  0.2843,  0.0378,  0.3497, -0.2136,
          0.5333, -0.7175,  0.4243, -0.8926, -0.8215, -0.0026,  0.0449, -0.1564],
        [-0.1704, -0.2028,  0.2813,  0.3452,  0.4120,  0.0080,  0.2225,  0.2050,
          0.2302, -0.4032,  0.3629, -0.5418, -0.4209,  0.1178,  0.0617, -0.1119]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0232, -0.0288,  0.0144, -0.0269,  0.0213, -0.0260,  0.0141,  0.0739,
          0.0142, -0.0133, -0.0263,  0.0339, -0.0179,  0.0693, -0.0081, -0.0070],
        [ 0.0272,  0.0332, -0.0156,  0.0320, -0.0242,  0.0294, -0.0207, -0.0870,
         -0.0279,  0.0140,  0.0270, -0.0617,  0.0212, -0.0772,  0.0041,  0.0124],
        [ 0.0171,  0.0159, -0.0054,  0.0148, -0.0090,  0.0139, -0.0077, -0.0438,
         -0.0193,  0.0104,  0.0114, -0.0199,  0.0144, -0.0374,  0.0037,  0.0067],
        [-0.0469, -0.0531,  0.0238, -0.0502,  0.0366, -0.0474,  0.0271,  0.1406,
          0.0378, -0.0258, -0.0455,  0.0737, -0.0363,  0.1272, -0.0126, -0.0164],
        [ 0.0195,  0.0172, -0.0049,  0.0168, -0.0089,  0.0148, -0.0094, -0.0495,
         -0.0198,  0.0088,  0.0133, -0.0336,  0.0136, -0.0413,  0.0022,  0.0078],
        [-0.0239, -0.0271,  0.0122, -0.0254,  0.0187, -0.0242,  0.0145,  0.0711,
          0.0178, -0.0126, -0.0238,  0.0381, -0.0176,  0.0644, -0.0061, -0.0081],
        [ 0.0340,  0.0330, -0.0108,  0.0332, -0.0190,  0.0285, -0.0181, -0.0939,
         -0.0325,  0.0146,  0.0271, -0.0693,  0.0234, -0.0812,  0.0040,  0.0142],
        [ 0.0362,  0.0302, -0.0072,  0.0303, -0.0141,  0.0259, -0.0151, -0.0899,
         -0.0479,  0.0194,  0.0188, -0.0572,  0.0291, -0.0713,  0.0033,  0.0166]],
       device='cuda:0') 

model.nns.2.lin_pos_r.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[-0.5237, -0.1967,  0.2053, -0.1553, -0.1806, -0.0261, -0.2866,  0.4603],
        [-0.7633, -0.2589, -0.3885, -0.2268, -0.6655,  0.0450, -0.1023, -0.0278],
        [ 0.0750,  0.3788,  0.2659,  0.0594,  0.0398, -0.0774,  0.2519, -0.1171],
        [-0.5815, -0.1856, -0.0034,  0.0376, -0.0838, -0.4153,  0.0964,  0.2232],
        [-0.3722, -0.3890, -0.1030,  0.0269, -0.5138,  0.3160, -0.3102,  0.2947],
        [-0.1536, -0.3484,  0.2740, -0.2481, -0.2713, -0.1378, -0.2972,  0.4387],
        [-0.6711,  0.2526, -0.8232,  0.1011, -0.6132, -0.1246, -0.3236,  0.4496],
        [ 0.1578, -0.3009, -0.3785,  0.1089, -0.1425,  0.0528,  0.1003, -0.0433]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0471, -0.0146, -0.0301, -0.0373, -0.0386, -0.0110, -0.0341,  0.0997],
        [ 0.0072,  0.0486, -0.0600,  0.0205, -0.0838,  0.0454, -0.0696, -0.0641],
        [ 0.0271,  0.0049,  0.0247,  0.0235,  0.0315,  0.0026,  0.0267, -0.0567],
        [-0.0724, -0.0395, -0.0200, -0.0603, -0.0218, -0.0327, -0.0191,  0.1653],
        [ 0.0173,  0.0212, -0.0151,  0.0139, -0.0232,  0.0186, -0.0218, -0.0438],
        [-0.0372, -0.0206, -0.0098, -0.0303, -0.0109, -0.0171, -0.0090,  0.0843],
        [ 0.0234,  0.0427, -0.0387,  0.0255, -0.0566,  0.0385, -0.0486, -0.0805],
        [ 0.0150,  0.0418, -0.0451,  0.0215, -0.0666,  0.0376, -0.0611, -0.0636]],
       device='cuda:0') 

model.nns.2.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.1553,  0.4078,  0.0052,  0.2161,  0.1596,  0.3144, -0.2041, -0.1964],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0788, -0.0928, -0.0443,  0.1478, -0.0498,  0.0744, -0.0977, -0.0896],
       device='cuda:0') 

model.nns.2.lin_neg_l.weight 128 torch.Size([8, 16])
Parameter containing:
tensor([[ 1.0285e-01, -8.0153e-02,  2.7451e-01, -1.6033e-01,  6.3020e-02,
         -2.0022e-01,  3.5064e-01, -1.0041e-01, -2.4523e-01, -1.2014e-01,
         -2.4838e-01,  1.9077e-01, -2.6602e-01,  1.8321e-02,  1.0317e-01,
         -2.1538e-01],
        [ 7.2221e-02, -2.6859e-01, -1.8454e-01, -3.4500e-01, -1.1270e-01,
         -1.7537e-01, -2.9278e-02,  3.4817e-02, -2.0173e-01,  1.7281e-01,
          4.4181e-01,  4.8950e-01,  6.2176e-02, -8.3618e-02,  1.6034e-02,
          2.7866e-01],
        [ 3.8168e-02,  1.9605e-01,  1.8515e-01,  2.6882e-01,  1.3557e-01,
         -1.3195e-01,  1.6718e-01, -5.0962e-02, -6.9963e-02,  2.4611e-01,
          1.5519e-01, -1.1617e-02, -9.8197e-02, -1.8187e-01, -1.5284e-01,
          2.6361e-01],
        [ 1.8880e-01, -7.6600e-02,  1.7811e-02, -1.4811e-01,  6.4888e-02,
         -4.6625e-02,  2.0483e-01, -9.8044e-02, -5.4729e-02,  7.2189e-02,
          1.0008e-01,  4.6833e-01,  2.2152e-01,  1.9001e-01,  3.1912e-01,
         -7.0699e-02],
        [-4.9510e-01,  1.8068e-01, -1.6949e-01, -4.2783e-01,  1.5093e-01,
         -1.2737e-01,  1.0994e-01,  4.0150e-01, -3.2147e-01, -1.4065e-01,
          1.2558e-01,  4.8257e-01,  3.5368e-01, -1.3834e-03,  4.2852e-01,
         -2.2467e-02],
        [ 1.4874e-01, -3.1136e-02, -3.0331e-01,  1.1684e-01, -1.1235e-01,
         -5.7066e-05, -3.1835e-01,  9.2618e-02,  5.5839e-01,  4.9147e-02,
          2.3998e-01, -6.1150e-01,  8.5953e-03,  8.6759e-02, -5.6734e-02,
         -7.3084e-02],
        [-9.8530e-02, -1.3849e-02, -9.1520e-02, -3.2390e-02,  1.9424e-01,
         -1.5382e-01,  4.1295e-02,  9.8180e-02, -1.3658e-01, -1.6941e-02,
          1.5142e-01, -3.5451e-02, -2.6328e-01, -1.2101e-01, -2.7294e-02,
         -1.6385e-01],
        [-2.7881e-01,  8.0223e-02, -5.0401e-02, -3.0771e-01, -1.0943e-01,
         -1.6080e-01, -1.3374e-01,  9.0693e-02, -3.7762e-01, -1.6523e-02,
          4.5752e-02,  2.5782e-01,  2.9600e-02,  1.6962e-03,  1.1406e-01,
         -1.4618e-01]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-4.0199e-04, -8.4701e-04, -3.3535e-03,  4.0830e-03, -1.2446e-03,
          8.2598e-03, -1.0463e-03, -3.5941e-04,  3.1331e-04, -3.2165e-03,
          3.2742e-03, -3.1644e-03,  4.6822e-03, -3.0483e-03,  2.9066e-03,
          6.5066e-03],
        [ 3.3730e-02, -1.0975e-02, -2.8491e-03,  2.5209e-02, -1.6356e-02,
          2.3657e-02,  5.7396e-04, -1.0358e-02, -1.7497e-02, -1.4302e-02,
          8.1728e-03, -7.5997e-03,  1.3872e-02, -1.1960e-02,  1.7542e-02,
          3.0712e-02],
        [ 1.4543e-01, -6.9835e-02, -7.0402e-02,  1.5622e-01, -9.7952e-02,
          2.5023e-01, -1.8350e-02, -5.0276e-02, -8.4188e-02, -1.1821e-01,
          7.1683e-02, -1.0040e-01,  1.0755e-01, -1.0595e-01,  8.9190e-02,
          2.7884e-01],
        [-6.5303e-02,  3.0291e-02,  2.7546e-02, -6.4346e-02,  4.2297e-02,
         -1.0174e-01,  6.9881e-03,  2.1980e-02,  4.4615e-02,  4.8746e-02,
         -2.3732e-02,  4.1159e-02, -3.6186e-02,  4.3355e-02, -3.1360e-02,
         -1.2283e-01],
        [ 1.7406e-02, -7.3115e-03, -5.4062e-03,  1.5931e-02, -1.0516e-02,
          2.2994e-02, -1.3596e-03, -5.7118e-03, -9.5568e-03, -1.1392e-02,
          6.8221e-03, -8.8581e-03,  1.0427e-02, -1.0109e-02,  8.8607e-03,
          2.6678e-02],
        [-4.0474e-02,  1.6519e-02,  1.2517e-02, -3.8648e-02,  2.3954e-02,
         -5.1958e-02,  2.6571e-03,  1.3336e-02,  1.3794e-02,  2.7022e-02,
         -2.3904e-02,  1.8284e-02, -3.6159e-02,  2.4068e-02, -3.3155e-02,
         -5.0762e-02],
        [-2.4718e-02,  1.0887e-02,  9.3778e-03, -2.4413e-02,  1.5418e-02,
         -3.6102e-02,  2.1742e-03,  8.3010e-03,  1.4982e-02,  1.6801e-02,
         -7.6888e-03,  1.5149e-02, -1.2203e-02,  1.4743e-02, -1.1347e-02,
         -4.2778e-02],
        [ 3.0418e-03, -9.1833e-04,  9.2165e-05,  1.7853e-03, -1.4244e-03,
          1.5217e-03,  4.5180e-05, -8.8445e-04, -1.0949e-03, -1.3800e-03,
          1.7941e-03,  1.9458e-05,  2.6286e-03, -1.2517e-03,  2.2786e-03,
          1.5874e-03]], device='cuda:0') 

model.nns.2.lin_neg_r.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[ 0.1597,  0.3104,  0.1886, -0.4761, -0.1306, -0.1757,  0.4115,  0.1508],
        [-0.4831,  0.2704, -0.6028,  0.6829,  0.2060,  0.5036,  0.1556, -0.1739],
        [ 0.1897, -0.2232,  0.2071,  0.0668, -0.0206, -0.1522,  0.2503, -0.0886],
        [-0.2350,  0.3677,  0.2047,  0.7333,  0.2287, -0.0900,  0.3604,  0.2809],
        [-0.2954, -0.1651, -0.3545,  0.4466,  0.0461, -0.0502,  0.1190,  0.0607],
        [ 0.3751, -0.6344,  0.6911, -0.7692, -0.4037, -0.0422, -0.1584, -0.5568],
        [ 0.0532, -0.0829, -0.2510, -0.0611, -0.0974, -0.1578, -0.1437, -0.0281],
        [-0.1533, -0.2002, -0.0309, -0.0165, -0.2606,  0.0681,  0.1190,  0.0866]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0029, -0.0007, -0.0040,  0.0007, -0.0006,  0.0085, -0.0017,  0.0006],
        [ 0.0761, -0.0197,  0.0137,  0.0349, -0.0304,  0.0137,  0.0062, -0.0215],
        [ 0.1589, -0.0691, -0.0665,  0.1817, -0.1004,  0.2483, -0.0135, -0.0563],
        [-0.0494,  0.0210,  0.0326, -0.0913,  0.0328, -0.1037,  0.0035,  0.0213],
        [ 0.0271, -0.0087, -0.0013,  0.0213, -0.0133,  0.0204,  0.0005, -0.0087],
        [-0.1014,  0.0330, -0.0098, -0.0339,  0.0470, -0.0397, -0.0016,  0.0271],
        [-0.0252,  0.0104,  0.0102, -0.0300,  0.0155, -0.0371,  0.0018,  0.0089],
        [ 0.0113, -0.0025,  0.0039,  0.0034, -0.0039, -0.0010,  0.0014, -0.0031]],
       device='cuda:0') 

model.nns.2.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([-0.3330,  0.1545,  0.2163,  0.1736, -0.3856, -0.0664, -0.3521, -0.2558],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0095,  0.0314,  0.3096, -0.1268,  0.0291, -0.0651, -0.0453,  0.0021],
       device='cuda:0') 

model.nns.4.lin_pos_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 1.0482e-01, -3.7742e-01,  1.9692e-01,  1.8626e-01,  4.2520e-02,
          3.3870e-02, -8.9921e-01, -2.2028e-02, -1.6066e-02, -4.4765e-01,
          4.2989e-01, -4.2824e-01, -2.1976e-01,  6.3107e-01, -1.4486e-01,
         -2.1606e-01],
        [-1.9354e-04,  3.9472e-02,  3.1963e-01, -2.2321e-01, -1.1916e-02,
         -1.1925e-01, -2.4525e-01, -1.1299e-01,  6.2574e-02,  4.7926e-01,
         -3.9008e-01,  8.2394e-01,  3.0931e-01, -6.4391e-01, -2.1724e-01,
          1.1017e-01]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.2280,  0.2940,  0.0764,  0.2834,  0.2329,  0.3317, -0.0452,  0.0198,
         -0.2401,  0.3575,  0.0941,  0.0169, -0.1057,  0.0257, -0.1266, -0.1065],
        [ 0.0560,  0.0702,  0.0259,  0.0702,  0.0640,  0.0821, -0.0093,  0.0010,
         -0.0578,  0.0820,  0.0284,  0.0044, -0.0296,  0.0101, -0.0310, -0.0274]],
       device='cuda:0') 

model.nns.4.lin_pos_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[ 0.5959,  0.5294, -0.6025,  0.5061,  0.1895,  0.3325,  0.5707,  0.3202],
        [-0.4989, -0.1173,  0.2505, -0.0534, -0.4886, -0.2528, -0.1867, -0.4678]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[0.2963, 0.4372, 0.0556, 0.3073, 0.3495, 0.3802, 0.0728, 0.0423],
        [0.0818, 0.1244, 0.0195, 0.0809, 0.1057, 0.1000, 0.0294, 0.0121]],
       device='cuda:0') 

model.nns.4.lin_pos_r.bias 2 torch.Size([2])
Parameter containing:
tensor([-0.0493,  0.0696], device='cuda:0', requires_grad=True) 
grad:  tensor([0.3719, 0.0910], device='cuda:0') 

model.nns.4.lin_neg_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 0.3723,  0.0853,  0.0052,  0.3435,  0.3527, -0.2318,  0.1475,  0.1687,
         -0.5055, -0.2963,  0.2299, -0.3005, -0.1632, -0.2854,  0.0101, -0.2587],
        [-0.1104,  0.2264,  0.1557, -0.1826, -0.1953, -0.4344, -0.1367, -0.0907,
         -0.2288, -0.4017, -0.0076, -0.1509, -0.2620,  0.0809, -0.4864, -0.7126]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.1031,  0.1295,  0.0523,  0.0055, -0.0502,  0.0456, -0.0562, -0.0477,
          0.0878,  0.1038,  0.0475,  0.1234,  0.0813,  0.1383, -0.0432,  0.0083],
        [-0.1431,  0.1607,  0.0875,  0.0078, -0.0753,  0.0947, -0.0799, -0.0686,
          0.1332,  0.1575,  0.0704,  0.1810,  0.1371,  0.2030, -0.0521,  0.0069]],
       device='cuda:0') 

model.nns.4.lin_neg_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[ 0.2316,  0.0768,  0.3138, -0.1894,  0.3909, -0.2923,  0.3588,  0.3990],
        [-0.2290,  0.3214,  0.3808, -0.3149,  0.1636, -0.2015, -0.3149,  0.0111]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.1012,  0.1211,  0.0652,  0.0184, -0.0532,  0.0656, -0.0573, -0.0489],
        [-0.1382,  0.1675,  0.1179,  0.0418, -0.0903,  0.1187, -0.0828, -0.0742]],
       device='cuda:0') 

model.nns.4.lin_neg_r.bias 2 torch.Size([2])
Parameter containing:
tensor([-0.0024, -0.2060], device='cuda:0', requires_grad=True) 
grad:  tensor([0.1645, 0.2328], device='cuda:0') 

head.0.model.0.weight 240 torch.Size([10, 24])
Parameter containing:
tensor([[ 2.4888e-01, -3.9460e-01,  1.0182e-01,  1.6327e-01,  9.8507e-02,
         -2.7108e-01,  1.5305e-02, -9.3407e-02, -1.2286e-01,  1.6064e-01,
          1.2334e-01, -2.0738e-01, -8.4856e-03,  3.8896e-02,  1.7907e-01,
          1.4720e-01, -2.8852e-01,  2.7593e-01,  4.5205e-02, -3.9442e-01,
         -5.4020e-02,  1.5747e-01, -4.1183e-01, -1.0951e+00],
        [-1.1374e-01, -4.7301e-02,  8.8014e-02, -3.2997e-01, -6.2848e-02,
         -9.4803e-02,  4.9643e-02,  6.1672e-02, -2.7774e-01,  2.6430e-01,
          8.1256e-02, -2.9074e-01,  2.0636e-01,  4.9984e-02, -4.1053e-02,
         -1.0632e-01,  2.1206e-01,  2.6759e-01, -3.0160e-01, -7.5238e-02,
         -2.1177e-01, -1.0114e-01, -1.7283e-01, -8.9992e-01],
        [ 4.4810e-02, -1.5342e-01, -2.2840e-01,  9.4441e-03,  2.6627e-01,
         -1.1626e-01, -2.1536e-02, -6.6705e-02, -2.8961e-01, -5.7318e-02,
         -2.0547e-01, -2.3272e-01, -1.3861e-01,  2.0822e-01,  4.7846e-01,
         -1.9339e-01, -1.4824e-01,  4.3805e-01,  2.3304e-01, -1.3010e-01,
          1.0466e-02, -6.9589e-04, -9.1631e-02, -8.4897e-01],
        [-1.9701e-01, -3.7495e-01,  1.4903e-01, -2.8717e-02, -9.7785e-02,
         -1.9678e-01,  1.0699e-01, -7.2047e-02, -3.0972e-01,  1.2805e-01,
          1.5484e-01, -1.8468e-01,  6.6923e-02,  3.7833e-02,  2.8399e-01,
          9.2539e-02,  6.3784e-02,  1.9597e-01,  5.7378e-03, -2.6374e-01,
         -2.2253e-01,  3.1518e-02, -3.4832e-01, -1.0002e+00],
        [-1.0018e-01, -1.2916e-01,  1.3267e-01, -1.1047e-01, -9.6608e-02,
         -4.1816e-01,  2.0252e-01,  6.1250e-02, -3.4962e-01,  8.4492e-02,
         -2.2294e-01, -5.6462e-02,  2.5797e-01,  1.5523e-01,  1.0760e-01,
          1.0512e-01,  6.7900e-02,  1.8205e-01,  2.6963e-02, -2.8318e-01,
         -1.6922e-01, -9.9658e-02, -1.9522e-01, -9.6912e-01],
        [ 3.6681e-02, -2.7674e-02, -1.6335e-01,  2.1766e-01, -2.3698e-01,
          1.1448e-01, -7.7074e-02,  1.3164e-02,  3.0550e-01, -1.2560e-01,
          1.9434e-01,  7.1973e-02, -2.6513e-01,  2.5433e-01, -1.2677e-01,
         -3.9871e-02, -1.4961e-01, -7.5136e-02, -4.7104e-02,  2.1873e-01,
          2.8667e-01, -2.8991e-01,  8.0922e-02,  8.4511e-01],
        [ 1.5767e-01,  2.3289e-01,  1.8439e-01,  2.7867e-01, -8.2653e-02,
         -1.1380e-01,  2.5046e-01,  1.8063e-01,  3.9604e-01, -1.2127e-01,
          2.3866e-01,  3.5019e-01,  3.0959e-02, -1.5299e-01,  7.5368e-03,
         -3.0473e-01,  2.7847e-01, -1.5927e-01, -3.6376e-01,  2.4124e-01,
          2.3863e-01, -3.8809e-01,  7.1620e-02,  7.7204e-01],
        [ 1.4347e-01,  3.5254e-02,  1.0420e-02,  1.1826e-01, -7.6952e-04,
          1.4192e-01, -2.4180e-01, -7.6644e-02,  1.2854e-01, -2.9210e-01,
         -9.8032e-02,  8.8973e-02, -2.5370e-01,  1.0917e-02, -1.5028e-01,
         -1.1495e-02, -9.3736e-02, -1.2054e-01,  1.5612e-01,  2.9493e-01,
          1.5601e-01, -1.7274e-01,  1.5213e-01,  9.5655e-01],
        [-1.1106e-01, -1.0624e-01,  1.9630e-01, -8.5755e-02,  8.0264e-02,
          4.6719e-03,  2.0008e-01, -3.0197e-01, -7.8158e-02, -8.8202e-02,
         -3.6837e-02, -1.1692e-01,  9.6981e-03, -1.3666e-01,  3.3971e-01,
          7.2704e-02,  5.0198e-02,  3.3892e-01, -4.6723e-01, -1.6078e-01,
          6.6991e-03,  1.6699e-01, -3.5439e-01, -1.0062e+00],
        [-1.1295e-01, -9.0082e-02,  2.1538e-01, -3.9003e-01, -1.8750e-01,
         -2.3134e-01,  3.5136e-01, -1.1253e-01, -3.8463e-01,  7.9661e-03,
          9.3922e-03, -2.7581e-01,  2.3302e-01,  9.9586e-02,  1.4691e-01,
         -1.4331e-01,  4.5775e-02,  1.8737e-01, -1.7032e-01, -2.2308e-01,
         -3.4309e-01,  1.6235e-01, -1.0713e-01, -1.1327e+00]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[-0.2359,  0.0716,  0.0996, -0.0125, -0.2435,  0.0767,  0.0989, -0.0153,
         -0.4948,  0.1453,  0.2314, -0.0365,  0.1493, -0.0425, -0.0722,  0.0125,
          0.2236, -0.0672, -0.0939,  0.0156, -0.0380,  0.0125,  0.0183,  0.0069],
        [-0.0371,  0.0114,  0.0154, -0.0018, -0.0380,  0.0121,  0.0152, -0.0023,
         -0.0779,  0.0229,  0.0362, -0.0056,  0.0236, -0.0067, -0.0114,  0.0020,
          0.0352, -0.0107, -0.0145,  0.0023, -0.0061,  0.0020,  0.0028,  0.0011],
        [-0.1727,  0.0527,  0.0720, -0.0085, -0.1789,  0.0569,  0.0713, -0.0110,
         -0.3619,  0.1057,  0.1702, -0.0259,  0.1092, -0.0307, -0.0535,  0.0090,
          0.1637, -0.0493, -0.0679,  0.0110, -0.0277,  0.0092,  0.0134,  0.0055],
        [-0.0250,  0.0073,  0.0111, -0.0015, -0.0262,  0.0081,  0.0109, -0.0021,
         -0.0497,  0.0137,  0.0249, -0.0033,  0.0144, -0.0037, -0.0076,  0.0010,
          0.0236, -0.0068, -0.0103,  0.0019, -0.0037,  0.0011,  0.0024,  0.0009],
        [-0.0229,  0.0068,  0.0107, -0.0014, -0.0259,  0.0083,  0.0106, -0.0019,
         -0.0474,  0.0137,  0.0247, -0.0035,  0.0141, -0.0039, -0.0078,  0.0012,
          0.0217, -0.0064, -0.0100,  0.0017, -0.0036,  0.0011,  0.0022,  0.0007],
        [ 0.0890, -0.0270, -0.0363,  0.0042,  0.0892, -0.0279, -0.0359,  0.0053,
          0.1835, -0.0528, -0.0849,  0.0128, -0.0548,  0.0151,  0.0263, -0.0043,
         -0.0844,  0.0253,  0.0342, -0.0054,  0.0140, -0.0045, -0.0066, -0.0029],
        [ 0.1209, -0.0393, -0.0486,  0.0081,  0.1235, -0.0407, -0.0483,  0.0090,
          0.2690, -0.0855, -0.1162,  0.0243, -0.0863,  0.0272,  0.0378, -0.0089,
         -0.1135,  0.0364,  0.0458, -0.0090,  0.0246, -0.0090, -0.0100, -0.0014],
        [ 0.0735, -0.0229, -0.0299,  0.0036,  0.0756, -0.0240, -0.0297,  0.0043,
          0.1559, -0.0466, -0.0717,  0.0119, -0.0473,  0.0137,  0.0225, -0.0042,
         -0.0697,  0.0214,  0.0284, -0.0046,  0.0120, -0.0042, -0.0053, -0.0022],
        [-0.0327,  0.0098,  0.0138, -0.0015, -0.0340,  0.0107,  0.0136, -0.0020,
         -0.0677,  0.0194,  0.0324, -0.0047,  0.0201, -0.0055, -0.0101,  0.0016,
          0.0310, -0.0092, -0.0130,  0.0020, -0.0051,  0.0017,  0.0025,  0.0012],
        [-0.0360,  0.0107,  0.0152, -0.0017, -0.0375,  0.0118,  0.0151, -0.0023,
         -0.0745,  0.0212,  0.0358, -0.0050,  0.0222, -0.0060, -0.0112,  0.0017,
          0.0342, -0.0101, -0.0144,  0.0022, -0.0056,  0.0018,  0.0028,  0.0013]],
       device='cuda:0') 

head.0.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([-0.0850, -0.2370,  0.0747, -0.1573,  0.0072,  0.2893, -0.0382,  0.1677,
        -0.2426, -0.1532], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.1031, -0.0159, -0.0743, -0.0116, -0.0112,  0.0374,  0.0507,  0.0308,
        -0.0142, -0.0157], device='cuda:0') 

head.1.model.0.weight 100 torch.Size([10, 10])
Parameter containing:
tensor([[-0.9147, -0.0216, -0.5632, -0.0086, -0.1764,  0.0904,  0.4102,  0.3018,
         -0.4342, -0.3867],
        [ 0.2575,  0.0345,  0.3534,  0.3897,  0.1521,  0.1173, -0.4951, -0.3040,
          0.0788, -0.0251],
        [-0.8349, -0.3978, -0.6262, -0.0372,  0.0738,  0.4559,  0.6365,  0.0837,
         -0.0676, -0.3159],
        [-0.4353, -0.3583, -0.1446, -0.0093,  0.0099,  0.2305,  0.1898,  0.3117,
          0.0340,  0.1179],
        [ 0.4715,  0.2570,  0.5066,  0.2300,  0.3728, -0.1874, -0.1706,  0.0287,
          0.3053,  0.4124],
        [ 0.3525,  0.0239,  0.2370,  0.2608,  0.2361, -0.2504, -0.0979,  0.0828,
         -0.0375,  0.1656],
        [-0.5849, -0.3269, -0.5439, -0.2417, -0.3408,  0.0758,  0.3783,  0.4183,
          0.0205,  0.1435],
        [ 0.4412,  0.1952,  0.4883,  0.2150, -0.0790, -0.3328, -0.4519, -0.0885,
          0.2806,  0.3028],
        [ 0.4891,  0.2210,  0.1210, -0.0760, -0.0577, -0.3900, -0.2483,  0.0277,
          0.5130,  0.0884],
        [-0.5369, -0.2291, -0.2793, -0.0429, -0.1714,  0.1972,  0.3950,  0.2408,
         -0.2958, -0.3622]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0197, -0.0306,  0.0354, -0.0227, -0.0167,  0.0402,  0.0116,  0.0481,
         -0.0067, -0.0303],
        [-0.0203,  0.0247, -0.0337,  0.0181,  0.0121, -0.0288, -0.0050, -0.0374,
          0.0065,  0.0250],
        [ 0.0258, -0.0399,  0.0457, -0.0294, -0.0219,  0.0539,  0.0158,  0.0631,
         -0.0090, -0.0396],
        [ 0.0099, -0.0131,  0.0167, -0.0097, -0.0068,  0.0164,  0.0033,  0.0204,
         -0.0034, -0.0132],
        [-0.0108,  0.0137, -0.0191,  0.0102,  0.0067, -0.0158, -0.0028, -0.0207,
          0.0035,  0.0140],
        [-0.0250,  0.0289, -0.0408,  0.0210,  0.0139, -0.0328, -0.0031, -0.0436,
          0.0085,  0.0293],
        [ 0.0214, -0.0335,  0.0383, -0.0247, -0.0182,  0.0451,  0.0126,  0.0529,
         -0.0082, -0.0334],
        [-0.0237,  0.0279, -0.0401,  0.0203,  0.0133, -0.0317, -0.0031, -0.0422,
          0.0084,  0.0286],
        [-0.0118,  0.0157, -0.0199,  0.0116,  0.0081, -0.0196, -0.0039, -0.0243,
          0.0041,  0.0158],
        [ 0.0342, -0.0460,  0.0580, -0.0339, -0.0240,  0.0574,  0.0117,  0.0713,
         -0.0120, -0.0462]], device='cuda:0') 

head.1.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([ 0.2606, -0.2747, -0.0517,  0.2895, -0.1323, -0.1521, -0.2074, -0.1374,
        -0.5509,  0.2946], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0170, -0.0183,  0.0224,  0.0090, -0.0101, -0.0235,  0.0201, -0.0231,
        -0.0108,  0.0313], device='cuda:0') 

head.2.model.0.weight 10 torch.Size([1, 10])
Parameter containing:
tensor([[-0.3626,  0.5211, -0.4945, -0.1274,  0.2902,  0.4918, -0.4027,  0.4890,
          0.3545, -0.4486]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0217,  0.0154, -0.0346, -0.0763,  0.0160,  0.0081, -0.0272,  0.0177,
          0.0320, -0.0984]], device='cuda:0') 

head.2.model.0.bias 1 torch.Size([1])
Parameter containing:
tensor([-0.0896], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0707], device='cuda:0') 


Total parameters: 987
Total time: 12.0 hours
Final val loss: 1.3404336082935333

#### Plotting Script ####
Prediction Results:
results/ContactGNNEnergy/39/sample1230
results/ContactGNNEnergy/39/sample1761
results/ContactGNNEnergy/39/sample40
results/ContactGNNEnergy/39/sample1751
results/ContactGNNEnergy/39/sample1718
Loss: 1.2177494168281555 +- 0.3736350052230898

