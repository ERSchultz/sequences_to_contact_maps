#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 Sequential(
  (0): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=6, out_features=1000, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (1): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=1000, out_features=1000, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (2): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=1000, out_features=64, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
) 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_05_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy11', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[50], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=420, pretrain_id=None, resume_training=False, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=[1000, 1000, 64], update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, grid_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/420', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/420/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/420/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/420/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f7ef38073a0>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", "'MeanContactDistance'", "'MeanContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=4, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 35.264 minutes
Number of samples: 4815
Average num edges per graph:  231345.64652128765
Mean degree: [386.18 485.64 503.79 ... 428.66 229.6  431.64] +- [71.   24.45  8.85 ... 62.28 79.4  53.09]

split sizes: train=4334, val=481, test=0, N=4815
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f7eac7b62e0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.4011
Mean test/val loss: 0.5247
[25, 50, 75] percentiles test/val loss: [0.3811 0.4823 0.6219]

Epoch 4, loss = 0.3084
Mean test/val loss: 0.2888
[25, 50, 75] percentiles test/val loss: [0.1672 0.2503 0.3533]

Epoch 6, loss = 0.2730
Mean test/val loss: 0.2525
[25, 50, 75] percentiles test/val loss: [0.1479 0.2163 0.3054]

Epoch 8, loss = 0.2483
Mean test/val loss: 0.2466
[25, 50, 75] percentiles test/val loss: [0.1464 0.2121 0.3031]

Epoch 10, loss = 0.2314
Mean test/val loss: 0.2261
[25, 50, 75] percentiles test/val loss: [0.1298 0.1944 0.2766]

Epoch 12, loss = 0.2143
Mean test/val loss: 0.2080
[25, 50, 75] percentiles test/val loss: [0.1167 0.1754 0.2563]

Epoch 14, loss = 0.2047
Mean test/val loss: 0.2078
[25, 50, 75] percentiles test/val loss: [0.1185 0.1747 0.2543]

Epoch 16, loss = 0.1948
Mean test/val loss: 0.2001
[25, 50, 75] percentiles test/val loss: [0.1163 0.1662 0.2412]

Epoch 18, loss = 0.2382
Mean test/val loss: 0.1987
[25, 50, 75] percentiles test/val loss: [0.1153 0.1729 0.2428]

Epoch 20, loss = 0.1892
Mean test/val loss: 0.2114
[25, 50, 75] percentiles test/val loss: [0.1144 0.1743 0.2566]

Epoch 22, loss = 0.1804
Mean test/val loss: 0.1858
[25, 50, 75] percentiles test/val loss: [0.108  0.1567 0.2262]

Epoch 24, loss = 0.1773
Mean test/val loss: 0.1828
[25, 50, 75] percentiles test/val loss: [0.1058 0.1534 0.221 ]

Epoch 26, loss = 0.1847
Mean test/val loss: 0.1795
[25, 50, 75] percentiles test/val loss: [0.1047 0.1549 0.2199]

Epoch 28, loss = 0.1682
Mean test/val loss: 0.1781
[25, 50, 75] percentiles test/val loss: [0.1004 0.1513 0.2172]

Epoch 30, loss = 0.1663
Mean test/val loss: 0.1802
[25, 50, 75] percentiles test/val loss: [0.1079 0.1589 0.219 ]

Epoch 32, loss = 0.1623
Mean test/val loss: 0.1682
[25, 50, 75] percentiles test/val loss: [0.0968 0.1458 0.2084]

Epoch 34, loss = 0.1584
Mean test/val loss: 0.1731
[25, 50, 75] percentiles test/val loss: [0.0977 0.1428 0.2116]

Epoch 36, loss = 0.1570
Mean test/val loss: 0.1671
[25, 50, 75] percentiles test/val loss: [0.0968 0.1451 0.2058]

Epoch 38, loss = 0.1908
Mean test/val loss: 0.1725
[25, 50, 75] percentiles test/val loss: [0.0965 0.1449 0.2125]

Epoch 40, loss = 0.1526
