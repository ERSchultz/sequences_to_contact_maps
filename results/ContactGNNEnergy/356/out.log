#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 Sequential(
  (0): ConvBlock(
    (model): Sequential(
      (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
      (1): Identity()
      (2): PReLU(num_parameters=1)
    )
  )
) 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project/depablo/erschultz/dataset_11_18_22', '/project/depablo/erschultz/dataset_11_21_22'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy2', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[50], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=356, pretrained=False, resume_training=False, k=8, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='conv-bilinear', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/356', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/356/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/356/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/356/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f81611c43a0>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 29.037 minutes
Average num edges per graph:  222294.36527196653
Mean degree: [362.66 512.   449.47 ... 329.12 511.93 511.26] +- [70.54  0.   53.89 ... 80.99  0.29  1.69]

split sizes: train=4302, val=478, test=0, N=4780
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f8123730130>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.7119
Mean test/val loss: 0.6135
[25, 50, 75] quantiles test/val loss: [0.317  0.607  0.8861]

Epoch 4, loss = 0.6395
Mean test/val loss: 0.5917
[25, 50, 75] quantiles test/val loss: [0.31   0.5749 0.8565]

Epoch 6, loss = 0.6479
Mean test/val loss: 0.5959
[25, 50, 75] quantiles test/val loss: [0.3035 0.5876 0.872 ]

Epoch 8, loss = 0.6324
Mean test/val loss: 1.0495
[25, 50, 75] quantiles test/val loss: [0.3902 0.6223 0.9028]

Epoch 10, loss = 0.5980
Mean test/val loss: 0.5893
[25, 50, 75] quantiles test/val loss: [0.3708 0.5418 0.7912]

Epoch 12, loss = 0.5621
Mean test/val loss: 0.5167
[25, 50, 75] quantiles test/val loss: [0.2472 0.488  0.7586]

Epoch 14, loss = 0.5504
Mean test/val loss: 0.5048
[25, 50, 75] quantiles test/val loss: [0.2258 0.4835 0.7467]

Epoch 16, loss = 0.5285
Mean test/val loss: 0.4962
[25, 50, 75] quantiles test/val loss: [0.2414 0.4704 0.7302]

Epoch 18, loss = 0.5214
Mean test/val loss: 0.4920
[25, 50, 75] quantiles test/val loss: [0.2253 0.4558 0.736 ]

Epoch 20, loss = 0.5320
Mean test/val loss: 0.4998
[25, 50, 75] quantiles test/val loss: [0.2221 0.4683 0.7404]

Epoch 22, loss = 0.5091
Mean test/val loss: 0.4920
[25, 50, 75] quantiles test/val loss: [0.2422 0.4563 0.7134]

Epoch 24, loss = 0.4977
Mean test/val loss: 0.4897
[25, 50, 75] quantiles test/val loss: [0.2512 0.4449 0.7133]

Epoch 26, loss = 0.4870
Mean test/val loss: 0.4557
[25, 50, 75] quantiles test/val loss: [0.1972 0.4265 0.6826]

Epoch 28, loss = 0.4940
Mean test/val loss: 0.4746
[25, 50, 75] quantiles test/val loss: [0.2153 0.4436 0.7095]

Epoch 30, loss = 0.4734
Mean test/val loss: 0.4792
[25, 50, 75] quantiles test/val loss: [0.2577 0.4442 0.6956]

Epoch 32, loss = 0.4733
Mean test/val loss: 0.4473
[25, 50, 75] quantiles test/val loss: [0.1882 0.4144 0.6783]

Epoch 34, loss = 0.4769
Mean test/val loss: 0.4579
[25, 50, 75] quantiles test/val loss: [0.2144 0.4302 0.6799]

Epoch 36, loss = 0.4573
Mean test/val loss: 0.4631
[25, 50, 75] quantiles test/val loss: [0.2136 0.4288 0.6841]

Epoch 38, loss = 0.5223
Mean test/val loss: 0.4653
[25, 50, 75] quantiles test/val loss: [0.2258 0.4384 0.6822]

Epoch 40, loss = 0.4459
Mean test/val loss: 0.4483
[25, 50, 75] quantiles test/val loss: [0.2112 0.4235 0.6667]

Epoch 42, loss = 0.4488
Mean test/val loss: 0.4376
[25, 50, 75] quantiles test/val loss: [0.1881 0.4012 0.669 ]

Epoch 44, loss = 0.4415
Mean test/val loss: 0.4282
[25, 50, 75] quantiles test/val loss: [0.1795 0.3948 0.6523]

Epoch 46, loss = 0.4344
Mean test/val loss: 0.4228
[25, 50, 75] quantiles test/val loss: [0.1794 0.3891 0.6488]

Epoch 48, loss = 0.4289
Mean test/val loss: 0.4258
[25, 50, 75] quantiles test/val loss: [0.178  0.3935 0.6536]

Epoch 50, loss = 0.4242
Mean test/val loss: 0.4256
[25, 50, 75] quantiles test/val loss: [0.1769 0.3998 0.6539]

New lr: 1e-05
Epoch 52, loss = 0.4012
Mean test/val loss: 0.4080
[25, 50, 75] quantiles test/val loss: [0.1642 0.3764 0.626 ]

Epoch 54, loss = 0.3981
Mean test/val loss: 0.4069
[25, 50, 75] quantiles test/val loss: [0.1663 0.3732 0.6268]

Epoch 56, loss = 0.3959
Mean test/val loss: 0.4065
[25, 50, 75] quantiles test/val loss: [0.164  0.3722 0.625 ]

Epoch 58, loss = 0.3941
Mean test/val loss: 0.4057
[25, 50, 75] quantiles test/val loss: [0.1654 0.3723 0.6231]

Epoch 60, loss = 0.3923
Mean test/val loss: 0.4052
[25, 50, 75] quantiles test/val loss: [0.1631 0.3707 0.6235]

Epoch 62, loss = 0.3907
Mean test/val loss: 0.4048
[25, 50, 75] quantiles test/val loss: [0.1635 0.3688 0.6214]

Epoch 64, loss = 0.3892
Mean test/val loss: 0.4047
[25, 50, 75] quantiles test/val loss: [0.1635 0.3701 0.62  ]

Epoch 66, loss = 0.3878
Mean test/val loss: 0.4042
[25, 50, 75] quantiles test/val loss: [0.1632 0.3679 0.6234]

Epoch 68, loss = 0.3865
Mean test/val loss: 0.4041
[25, 50, 75] quantiles test/val loss: [0.1635 0.3694 0.6213]

Epoch 70, loss = 0.3851
Mean test/val loss: 0.4034
[25, 50, 75] quantiles test/val loss: [0.1618 0.3679 0.6218]

Epoch 72, loss = 0.3839
Mean test/val loss: 0.4037
[25, 50, 75] quantiles test/val loss: [0.1615 0.367  0.6199]

Epoch 74, loss = 0.3830
Mean test/val loss: 0.4035
[25, 50, 75] quantiles test/val loss: [0.1624 0.3664 0.6194]

Epoch 76, loss = 0.3815
Mean test/val loss: 0.4038
[25, 50, 75] quantiles test/val loss: [0.1631 0.3669 0.6209]

Epoch 78, loss = 0.3804
Mean test/val loss: 0.4043
[25, 50, 75] quantiles test/val loss: [0.1622 0.3656 0.62  ]

Epoch 80, loss = 0.3793
Mean test/val loss: 0.4025
[25, 50, 75] quantiles test/val loss: [0.1613 0.362  0.6167]

Epoch 82, loss = 0.3782
Mean test/val loss: 0.4025
[25, 50, 75] quantiles test/val loss: [0.1598 0.364  0.6197]

Epoch 84, loss = 0.3771
Mean test/val loss: 0.4028
[25, 50, 75] quantiles test/val loss: [0.1594 0.3639 0.6185]

Epoch 86, loss = 0.3760
Mean test/val loss: 0.4036
[25, 50, 75] quantiles test/val loss: [0.1601 0.3651 0.6185]

Epoch 88, loss = 0.3750
Mean test/val loss: 0.4027
[25, 50, 75] quantiles test/val loss: [0.1622 0.3624 0.6151]

Epoch 90, loss = 0.3739
Mean test/val loss: 0.4038
[25, 50, 75] quantiles test/val loss: [0.1609 0.363  0.616 ]

Epoch 92, loss = 0.3729
Mean test/val loss: 0.4023
[25, 50, 75] quantiles test/val loss: [0.1628 0.3639 0.6141]

Epoch 94, loss = 0.3720
Mean test/val loss: 0.4026
[25, 50, 75] quantiles test/val loss: [0.1615 0.3623 0.6149]

Epoch 96, loss = 0.3709
Mean test/val loss: 0.4022
[25, 50, 75] quantiles test/val loss: [0.1613 0.3605 0.6097]

Epoch 98, loss = 0.3700
Mean test/val loss: 0.4030
[25, 50, 75] quantiles test/val loss: [0.1602 0.3648 0.611 ]

Epoch 100, loss = 0.3692
Mean test/val loss: 0.4026
[25, 50, 75] quantiles test/val loss: [0.1614 0.3624 0.6118]


Total parameters: 43374836
Total training + validation time: 17.0 hours, 58.0 mins, and 19.19999999999709 secs
Final val loss: 0.4026334114006436

split sizes: train=4302, val=478, test=0, N=4780
#### Plotting Script ####
Prediction Results:
dataset_11_21_22 sample939: 0.4124775826931
dataset_11_18_22 sample203: 0.8691603541374207
dataset_11_21_22 sample743: 0.6895784139633179
dataset_11_21_22 sample45: 0.18194040656089783
dataset_11_18_22 sample559: 0.32599273324012756
Loss: 0.496 +- 0.249

Downsampling (40%) Results:
dataset_11_18_22 sample203-downsampling: 7.391258716583252
dataset_11_18_22 sample45-downsampling: 18.148786544799805
dataset_11_18_22 sample559-downsampling: 3.245398759841919
dataset_11_18_22 sample743-downsampling: 10.651418685913086
dataset_11_18_22 sample939-downsampling: 3.0545220375061035
Loss: 6.496 +- 5.052

