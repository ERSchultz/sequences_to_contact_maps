#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=128, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(128, 16, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(128, 16, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(128, 16, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(128, 16, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (8): WeightedGATv2Conv(128, 16, heads=8)
  (9): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_09_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy11', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, max_sample=None, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=519, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=False, input_L_to_D_mode='meandist', use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 1000, 1000, 128], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[16, 16, 16, 16, 16], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/519', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/519/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/519/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/519/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f3607a5e310>, channels=1, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 42.067 minutes
Number of samples: 10000
Average num edges per graph:  63539.8822
Mean degree: [246.36 254.75 249.55 ... 251.39 254.63 242.59] +- [ 9.11  0.58  6.48 ...  3.73  0.95 19.1 ]

split sizes: train=9000, val=1000, test=0, N=10000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f35beaec970>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 1.3656
Mean test/val loss: 1.0736
[25, 50, 75] percentiles test/val loss: [0.6998 0.9908 1.3295]

Epoch 4, loss = 1.0443
Mean test/val loss: 0.9688
[25, 50, 75] percentiles test/val loss: [0.6015 0.8624 1.2099]

Epoch 6, loss = 0.9248
Mean test/val loss: 0.8806
[25, 50, 75] percentiles test/val loss: [0.5541 0.7648 1.0784]

Epoch 8, loss = 0.8244
Mean test/val loss: 0.7994
[25, 50, 75] percentiles test/val loss: [0.5034 0.7081 0.9882]

Epoch 10, loss = 0.7456
Mean test/val loss: 0.7391
[25, 50, 75] percentiles test/val loss: [0.47   0.6532 0.9053]

Epoch 12, loss = 0.7189
Mean test/val loss: 0.7195
[25, 50, 75] percentiles test/val loss: [0.4699 0.6441 0.8951]

Epoch 14, loss = 0.6835
Mean test/val loss: 0.6658
[25, 50, 75] percentiles test/val loss: [0.4366 0.5986 0.8316]

Epoch 16, loss = 0.6622
Mean test/val loss: 0.6432
[25, 50, 75] percentiles test/val loss: [0.4223 0.5841 0.8046]

Epoch 18, loss = 0.6357
Mean test/val loss: 0.6517
[25, 50, 75] percentiles test/val loss: [0.4195 0.597  0.7943]

Epoch 20, loss = 0.6194
Mean test/val loss: 0.6107
[25, 50, 75] percentiles test/val loss: [0.4014 0.5565 0.7548]

Epoch 22, loss = 0.6073
Mean test/val loss: 0.6014
[25, 50, 75] percentiles test/val loss: [0.3946 0.5414 0.7401]

Epoch 24, loss = 0.5908
Mean test/val loss: 0.5765
[25, 50, 75] percentiles test/val loss: [0.3814 0.528  0.7103]

Epoch 26, loss = 0.5804
Mean test/val loss: 0.5924
[25, 50, 75] percentiles test/val loss: [0.3824 0.5356 0.7414]

Epoch 28, loss = 0.5672
Mean test/val loss: 0.5660
[25, 50, 75] percentiles test/val loss: [0.3706 0.5131 0.7122]

Epoch 30, loss = 0.5587
Mean test/val loss: 0.5624
[25, 50, 75] percentiles test/val loss: [0.369  0.5094 0.7003]

Epoch 32, loss = 0.5499
Mean test/val loss: 0.5606
[25, 50, 75] percentiles test/val loss: [0.3699 0.5083 0.7008]

Epoch 34, loss = 0.5449
Mean test/val loss: 0.5463
[25, 50, 75] percentiles test/val loss: [0.3655 0.5032 0.6685]

Epoch 36, loss = 0.5354
Mean test/val loss: 0.5373
[25, 50, 75] percentiles test/val loss: [0.3611 0.4981 0.6641]

Epoch 38, loss = 0.5261
Mean test/val loss: 0.5435
[25, 50, 75] percentiles test/val loss: [0.3538 0.4978 0.6742]

Epoch 40, loss = 0.5217
Mean test/val loss: 0.5333
[25, 50, 75] percentiles test/val loss: [0.3502 0.486  0.6609]

New lr: 1e-05
Epoch 42, loss = 0.4616
Mean test/val loss: 0.4892
[25, 50, 75] percentiles test/val loss: [0.3244 0.4489 0.6106]

Epoch 44, loss = 0.4528
Mean test/val loss: 0.4850
[25, 50, 75] percentiles test/val loss: [0.3245 0.4476 0.6067]

Epoch 46, loss = 0.4469
Mean test/val loss: 0.4818
[25, 50, 75] percentiles test/val loss: [0.3205 0.4431 0.5994]

Epoch 48, loss = 0.4419
Mean test/val loss: 0.4804
[25, 50, 75] percentiles test/val loss: [0.3195 0.4421 0.5976]

Epoch 50, loss = 0.4376
Mean test/val loss: 0.4788
[25, 50, 75] percentiles test/val loss: [0.3209 0.4396 0.5974]

Epoch 52, loss = 0.4337
Mean test/val loss: 0.4758
[25, 50, 75] percentiles test/val loss: [0.3209 0.4395 0.5961]

Epoch 54, loss = 0.4302
Mean test/val loss: 0.4757
[25, 50, 75] percentiles test/val loss: [0.3192 0.4414 0.5929]

Epoch 56, loss = 0.4270
Mean test/val loss: 0.4734
[25, 50, 75] percentiles test/val loss: [0.3189 0.4393 0.5907]

Epoch 58, loss = 0.4241
Mean test/val loss: 0.4729
[25, 50, 75] percentiles test/val loss: [0.3189 0.4371 0.5897]

Epoch 60, loss = 0.4213
Mean test/val loss: 0.4718
[25, 50, 75] percentiles test/val loss: [0.3161 0.4375 0.5855]

Epoch 62, loss = 0.4185
Mean test/val loss: 0.4705
[25, 50, 75] percentiles test/val loss: [0.3161 0.4349 0.5869]

Epoch 64, loss = 0.4161
Mean test/val loss: 0.4705
[25, 50, 75] percentiles test/val loss: [0.3169 0.4343 0.5863]

Epoch 66, loss = 0.4138
Mean test/val loss: 0.4683
[25, 50, 75] percentiles test/val loss: [0.3142 0.4347 0.5822]

Epoch 68, loss = 0.4115
Mean test/val loss: 0.4678
[25, 50, 75] percentiles test/val loss: [0.3148 0.4328 0.5815]

Epoch 70, loss = 0.4093
Mean test/val loss: 0.4676
[25, 50, 75] percentiles test/val loss: [0.3144 0.4336 0.5788]

Epoch 72, loss = 0.4072
Mean test/val loss: 0.4667
[25, 50, 75] percentiles test/val loss: [0.314  0.4325 0.5821]

Epoch 74, loss = 0.4054
Mean test/val loss: 0.4664
[25, 50, 75] percentiles test/val loss: [0.3133 0.433  0.5781]

Epoch 76, loss = 0.4037
Mean test/val loss: 0.4660
[25, 50, 75] percentiles test/val loss: [0.3128 0.4317 0.5766]

Epoch 78, loss = 0.4019
Mean test/val loss: 0.4661
[25, 50, 75] percentiles test/val loss: [0.314  0.4324 0.5777]

Epoch 80, loss = 0.4002
Mean test/val loss: 0.4648
[25, 50, 75] percentiles test/val loss: [0.3117 0.4307 0.5794]


Total parameters: 54773008
Total training + validation time: 25.0 hours, 57.0 mins, and 18.10000000000582 secs
Final val loss: 0.46479241794766857

split sizes: train=9000, val=1000, test=0, N=10000
#### Plotting Script ####
Prediction Results:
dataset_09_28_23 sample1050: 0.8671518564224243
dataset_09_28_23 sample7802: 0.36966651678085327
dataset_09_28_23 sample156: 0.48701900243759155
dataset_09_28_23 sample2452: 0.20684246718883514
dataset_09_28_23 sample752: 0.0059263636358082294
MSE Loss: 0.387 +- 0.289

Downsampling (200k) Results:
dataset_09_28_23 sample1050-downsampling: 142.036865234375
dataset_09_28_23 sample156-downsampling: 137.88412475585938
dataset_09_28_23 sample2452-downsampling: 22.940948486328125
dataset_09_28_23 sample752-downsampling: 0.3808436691761017
dataset_09_28_23 sample7802-downsampling: 34.94566345214844
Loss: 67.638 +- 60.1

Removing /scratch/midway3/erschultz/ContactGNNEnergy11downsample
Original sampling (400k) Results:
dataset_09_28_23 sample1050-regular: 135.62265014648438
dataset_09_28_23 sample156-regular: 130.16705322265625
dataset_09_28_23 sample2452-regular: 20.077537536621094
dataset_09_28_23 sample752-regular: 0.41469407081604004
dataset_09_28_23 sample7802-regular: 37.14599609375
Loss: 64.686 +- 56.919

Removing /scratch/midway3/erschultz/ContactGNNEnergy11regsample
