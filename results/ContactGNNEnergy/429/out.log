#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=9, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy2', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=429, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/429', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/429/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/429/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/429/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7fd9161bf3a0>, channels=1, node_feature_size=1, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'GeneticDistance(norm=True)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=4, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 26.396 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7fd8d80040d0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.5801
Mean test/val loss: 0.5379
[25, 50, 75] percentiles test/val loss: [0.261  0.4334 0.6558]

Epoch 4, loss = 0.4749
Mean test/val loss: 0.4737
[25, 50, 75] percentiles test/val loss: [0.2586 0.3797 0.5663]

Epoch 6, loss = 0.5259
Mean test/val loss: 0.5367
[25, 50, 75] percentiles test/val loss: [0.2728 0.4312 0.6822]

Epoch 8, loss = 0.4057
Mean test/val loss: 0.4067
[25, 50, 75] percentiles test/val loss: [0.1925 0.317  0.4955]

Epoch 10, loss = 0.3920
Mean test/val loss: 0.4100
[25, 50, 75] percentiles test/val loss: [0.1887 0.3053 0.5001]

Epoch 12, loss = 0.3733
Mean test/val loss: 0.3873
[25, 50, 75] percentiles test/val loss: [0.1887 0.3059 0.4721]

Epoch 14, loss = 0.3582
Mean test/val loss: 0.3641
[25, 50, 75] percentiles test/val loss: [0.1699 0.2818 0.4422]

Epoch 16, loss = 0.3445
Mean test/val loss: 0.3490
[25, 50, 75] percentiles test/val loss: [0.1661 0.2716 0.4304]

Epoch 18, loss = 0.3339
Mean test/val loss: 0.3624
[25, 50, 75] percentiles test/val loss: [0.1764 0.2826 0.4403]

Epoch 20, loss = 0.3204
Mean test/val loss: 0.3322
[25, 50, 75] percentiles test/val loss: [0.1571 0.2557 0.3995]

Epoch 22, loss = 0.3099
Mean test/val loss: 0.3291
[25, 50, 75] percentiles test/val loss: [0.1489 0.2524 0.4029]

Epoch 24, loss = 0.3023
Mean test/val loss: 0.3204
[25, 50, 75] percentiles test/val loss: [0.1488 0.2471 0.3889]

Epoch 26, loss = 0.2970
Mean test/val loss: 0.3155
[25, 50, 75] percentiles test/val loss: [0.1476 0.2497 0.3895]

Epoch 28, loss = 0.2884
Mean test/val loss: 0.3077
[25, 50, 75] percentiles test/val loss: [0.1426 0.2384 0.3742]

Epoch 30, loss = 0.2833
Mean test/val loss: 0.3082
[25, 50, 75] percentiles test/val loss: [0.1416 0.2371 0.3695]

Epoch 32, loss = 0.2801
Mean test/val loss: 0.3060
[25, 50, 75] percentiles test/val loss: [0.1437 0.24   0.3713]

Epoch 34, loss = 0.2747
Mean test/val loss: 0.3044
[25, 50, 75] percentiles test/val loss: [0.1476 0.238  0.371 ]

Epoch 36, loss = 0.2705
Mean test/val loss: 0.2976
[25, 50, 75] percentiles test/val loss: [0.1374 0.2324 0.3586]

Epoch 38, loss = 0.2654
Mean test/val loss: 0.3018
[25, 50, 75] percentiles test/val loss: [0.1413 0.2315 0.3619]

Epoch 40, loss = 0.2617
Mean test/val loss: 0.2998
[25, 50, 75] percentiles test/val loss: [0.1396 0.2293 0.3698]

New lr: 1e-05
Epoch 42, loss = 0.2378
Mean test/val loss: 0.2788
[25, 50, 75] percentiles test/val loss: [0.1274 0.2162 0.3335]

Epoch 44, loss = 0.2341
Mean test/val loss: 0.2780
[25, 50, 75] percentiles test/val loss: [0.1294 0.2163 0.3334]

Epoch 46, loss = 0.2317
Mean test/val loss: 0.2768
[25, 50, 75] percentiles test/val loss: [0.1294 0.2144 0.3332]

Epoch 48, loss = 0.2297
Mean test/val loss: 0.2765
[25, 50, 75] percentiles test/val loss: [0.1267 0.2117 0.3278]

Epoch 50, loss = 0.2279
Mean test/val loss: 0.2752
[25, 50, 75] percentiles test/val loss: [0.125  0.2115 0.3289]

Epoch 52, loss = 0.2263
Mean test/val loss: 0.2751
[25, 50, 75] percentiles test/val loss: [0.1248 0.2113 0.3291]

Epoch 54, loss = 0.2248
Mean test/val loss: 0.2742
[25, 50, 75] percentiles test/val loss: [0.1246 0.2101 0.3277]

Epoch 56, loss = 0.2235
Mean test/val loss: 0.2737
[25, 50, 75] percentiles test/val loss: [0.1244 0.2092 0.3257]

Epoch 58, loss = 0.2222
Mean test/val loss: 0.2738
[25, 50, 75] percentiles test/val loss: [0.1251 0.2097 0.327 ]

Epoch 60, loss = 0.2211
Mean test/val loss: 0.2727
[25, 50, 75] percentiles test/val loss: [0.1244 0.2097 0.3241]

Epoch 62, loss = 0.2200
Mean test/val loss: 0.2737
[25, 50, 75] percentiles test/val loss: [0.1252 0.2091 0.3237]

Epoch 64, loss = 0.2190
Mean test/val loss: 0.2729
[25, 50, 75] percentiles test/val loss: [0.1237 0.209  0.3239]

Epoch 66, loss = 0.2181
Mean test/val loss: 0.2723
[25, 50, 75] percentiles test/val loss: [0.1233 0.2078 0.3209]

Epoch 68, loss = 0.2172
Mean test/val loss: 0.2717
[25, 50, 75] percentiles test/val loss: [0.1236 0.2067 0.3244]

Epoch 70, loss = 0.2163
Mean test/val loss: 0.2719
[25, 50, 75] percentiles test/val loss: [0.124  0.2067 0.3225]

Epoch 72, loss = 0.2155
Mean test/val loss: 0.2718
[25, 50, 75] percentiles test/val loss: [0.1234 0.2082 0.3231]

Epoch 74, loss = 0.2146
Mean test/val loss: 0.2716
[25, 50, 75] percentiles test/val loss: [0.1236 0.2074 0.3215]

Epoch 76, loss = 0.2139
Mean test/val loss: 0.2712
[25, 50, 75] percentiles test/val loss: [0.1231 0.2057 0.3215]

Epoch 78, loss = 0.2132
Mean test/val loss: 0.2716
[25, 50, 75] percentiles test/val loss: [0.1229 0.2034 0.3208]

Epoch 80, loss = 0.2124
Mean test/val loss: 0.2702
[25, 50, 75] percentiles test/val loss: [0.1236 0.2062 0.3202]


Total parameters: 26462320
Total training + validation time: 7.0 hours, 13.0 mins, and 21.299999999999272 secs
Final val loss: 0.2702374651841819

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 0.47047269344329834
dataset_04_28_23 sample324: 0.561237096786499
dataset_04_28_23 sample3464: 0.41207197308540344
dataset_04_28_23 sample2834: 0.3871369957923889
dataset_04_28_23 sample1936: 0.2001177966594696
Loss: 0.406 +- 0.119

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 7.0521697998046875
dataset_04_28_23 sample2834-downsampling: 6.731551170349121
dataset_04_28_23 sample324-downsampling: 9.886415481567383
dataset_04_28_23 sample3464-downsampling: 7.360241889953613
dataset_04_28_23 sample981-downsampling: 15.1349515914917
Loss: 9.233 +- 3.155

Removing /scratch/midway3/erschultz/ContactGNNEnergy2downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 8.023965835571289
dataset_04_28_23 sample2834-regular: 6.722735404968262
dataset_04_28_23 sample324-regular: 10.669849395751953
dataset_04_28_23 sample3464-regular: 7.887846946716309
dataset_04_28_23 sample981-regular: 11.709001541137695
Loss: 9.003 +- 1.871

Removing /scratch/midway3/erschultz/ContactGNNEnergy2regsample
