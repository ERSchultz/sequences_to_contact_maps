#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=10, out_features=128, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(128, 16, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(128, 16, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(128, 16, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(128, 16, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=128, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (3): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (4): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=128, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_10'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_21_23_hmec'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy13', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='log_inf', sweep_choices=None, y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, max_sample=None, start_epoch=1, n_epochs=60, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse_log', loss_k=2, lambda1=1.0, lambda2=1.0, w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=620, pretrain_id=None, resume_training=False, k=10, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=False, input_L_to_D_mode='meandist', use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 1000, 1000, 128], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[16, 16, 16, 16], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/620', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/620/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/620/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/620/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_log at 0x7ffa513d95e0>, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=10, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, corr=False, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=10, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 18.091 minutes
Number of samples: 5000
Average num edges per graph:  65185.8208
Mean degree: [254.83 255.   254.99 ... 254.96 255.   255.  ] +- [0.62 0.   0.09 ... 0.21 0.   0.  ]

split sizes: train=4500, val=500, test=0, N=5000
First 100 val samples: [4410, 3523, 3661, 1766, 4612, 2591, 1972, 1822, 4639, 4962, 3383, 4226, 111, 1954, 4299, 4195, 4171, 1582, 3906, 2811, 2135, 1317, 3277, 324, 4875, 1672, 78, 4570, 672, 3288, 4767, 1716, 3809, 3135, 3, 1838, 2820, 958, 1273, 1936, 308, 916, 2119, 4682, 3296, 2610, 2576, 4783, 1449, 1300, 3616, 2623, 1956, 1263, 1686, 1207, 4503, 3237, 4370, 831, 75, 3406, 4524, 2537, 3132, 3674, 3110, 1667, 2060, 2986, 3567, 4352, 475, 4580, 3164, 2073, 1184, 2284, 225, 3833, 2314, 161, 4723, 3885, 542, 4254, 3384, 810, 2291, 459, 1440, 1412, 4864, 3267, 4781, 3912, 3229, 3762, 502, 4920, 1781, 1687]
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7ffa1009e0d0>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 1.2811
Mean test/val loss: 1.2446
[25, 50, 75] percentiles test/val loss: [0.7985 1.1537 1.6187]

Epoch 4, loss = 1.0723
Mean test/val loss: 1.0808
[25, 50, 75] percentiles test/val loss: [0.6581 0.9927 1.3815]

Epoch 6, loss = 1.0108
Mean test/val loss: 1.0379
[25, 50, 75] percentiles test/val loss: [0.639  0.934  1.2964]

Epoch 8, loss = 0.9577
Mean test/val loss: 0.9815
[25, 50, 75] percentiles test/val loss: [0.6001 0.9042 1.2581]

Epoch 10, loss = 0.9123
Mean test/val loss: 0.9479
[25, 50, 75] percentiles test/val loss: [0.5675 0.8719 1.23  ]

Epoch 12, loss = 0.8836
Mean test/val loss: 0.9164
[25, 50, 75] percentiles test/val loss: [0.5232 0.8337 1.2203]

Epoch 14, loss = 0.8648
Mean test/val loss: 0.8730
[25, 50, 75] percentiles test/val loss: [0.5178 0.7953 1.1389]

Epoch 16, loss = 0.8422
Mean test/val loss: 0.8719
[25, 50, 75] percentiles test/val loss: [0.5186 0.8005 1.1422]

Epoch 18, loss = 0.8197
Mean test/val loss: 0.8568
[25, 50, 75] percentiles test/val loss: [0.5051 0.7849 1.1058]

Epoch 20, loss = 0.8050
Mean test/val loss: 0.8274
[25, 50, 75] percentiles test/val loss: [0.4861 0.7473 1.0958]

Epoch 22, loss = 0.7868
Mean test/val loss: 0.8178
[25, 50, 75] percentiles test/val loss: [0.4856 0.7513 1.0927]

Epoch 24, loss = 0.7858
Mean test/val loss: 1.0918
[25, 50, 75] percentiles test/val loss: [0.6652 1.0147 1.4416]

Epoch 26, loss = 0.7715
Mean test/val loss: 0.8339
[25, 50, 75] percentiles test/val loss: [0.4993 0.7501 1.0861]

Epoch 28, loss = 0.7583
Mean test/val loss: 0.8188
[25, 50, 75] percentiles test/val loss: [0.4895 0.7389 1.069 ]

Epoch 30, loss = 0.7488
Mean test/val loss: 0.8100
[25, 50, 75] percentiles test/val loss: [0.4759 0.7509 1.059 ]

Epoch 32, loss = 0.7414
Mean test/val loss: 0.7762
[25, 50, 75] percentiles test/val loss: [0.4519 0.7039 1.0394]

Epoch 34, loss = 0.7292
Mean test/val loss: 0.7762
[25, 50, 75] percentiles test/val loss: [0.4501 0.7081 1.033 ]

Epoch 36, loss = 0.7195
Mean test/val loss: 0.7814
[25, 50, 75] percentiles test/val loss: [0.4584 0.7132 1.0322]

Epoch 38, loss = 0.7177
Mean test/val loss: 0.7579
[25, 50, 75] percentiles test/val loss: [0.4429 0.6878 1.0124]

Epoch 40, loss = 0.7111
Mean test/val loss: 0.7619
[25, 50, 75] percentiles test/val loss: [0.4351 0.6948 1.0054]

New lr: 1e-05
Epoch 42, loss = 0.6556
Mean test/val loss: 0.7121
[25, 50, 75] percentiles test/val loss: [0.4141 0.6476 0.9504]

Epoch 44, loss = 0.6466
Mean test/val loss: 0.7065
[25, 50, 75] percentiles test/val loss: [0.4104 0.6422 0.9407]

Epoch 46, loss = 0.6404
Mean test/val loss: 0.7032
[25, 50, 75] percentiles test/val loss: [0.4085 0.6376 0.9364]

Epoch 48, loss = 0.6350
Mean test/val loss: 0.7015
[25, 50, 75] percentiles test/val loss: [0.4085 0.6384 0.9389]

Epoch 50, loss = 0.6304
Mean test/val loss: 0.6996
[25, 50, 75] percentiles test/val loss: [0.4061 0.6355 0.9344]

Epoch 52, loss = 0.6262
Mean test/val loss: 0.6981
[25, 50, 75] percentiles test/val loss: [0.4038 0.6421 0.9281]

Epoch 54, loss = 0.6224
Mean test/val loss: 0.6979
[25, 50, 75] percentiles test/val loss: [0.4026 0.6423 0.9256]

Epoch 56, loss = 0.6188
Mean test/val loss: 0.6957
[25, 50, 75] percentiles test/val loss: [0.4046 0.6434 0.9288]

Epoch 58, loss = 0.6154
Mean test/val loss: 0.6952
[25, 50, 75] percentiles test/val loss: [0.4038 0.6362 0.9234]

Epoch 60, loss = 0.6122
Mean test/val loss: 0.6942
[25, 50, 75] percentiles test/val loss: [0.4038 0.6379 0.9253]


Total parameters: 51479472
Total training + validation time: 8.0 hours, 52.0 mins, and 46.5 secs
Final val loss: 0.6941549075432122

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_11_21_23_hmec sample981: 0.6808454990386963
dataset_11_21_23_hmec sample324: 0.4592075049877167
dataset_11_21_23_hmec sample3464: 0.7758447527885437
dataset_11_21_23_hmec sample2834: 0.6159138083457947
dataset_11_21_23_hmec sample1936: 0.33301842212677
MSE_log: 0.573 +- 0.158

Downsampling (200k) Results:
dataset_11_21_23_hmec sample1936-downsampling: 10.796419143676758
dataset_11_21_23_hmec sample2834-downsampling: 11.58004379272461
dataset_11_21_23_hmec sample324-downsampling: 9.089284896850586
dataset_11_21_23_hmec sample3464-downsampling: 14.137434959411621
dataset_11_21_23_hmec sample981-downsampling: 14.869512557983398
Loss: 12.095 +- 2.138

Removing /scratch/midway3/erschultz/ContactGNNEnergy13downsample
Original sampling (400k) Results:
