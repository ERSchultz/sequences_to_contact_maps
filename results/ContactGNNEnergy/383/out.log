#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=72, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16384, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project/depablo/erschultz/dataset_02_22_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy2', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=50, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[25], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=383, pretrain_id=380, resume_training=False, k=8, m=512, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/383', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/383/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/383/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/383/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7faf4cced3a0>, channels=1, node_feature_size=1, input_m=256, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 19.649 minutes
Number of samples: 5000
Average num edges per graph:  49057.5672
Mean degree: [222.5  252.23 255.99 ... 197.18 253.54 151.66] +- [20.34  4.64  0.09 ... 38.58  2.43 54.39]

split sizes: train=4500, val=500, test=0, N=5000
Pre-trained model is loaded.
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7faf12b99f40>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 208.1941
Mean test/val loss: 9.4200
[25, 50, 75] percentiles test/val loss: [ 4.4796  6.9311 11.6142]

Epoch 4, loss = 8.2145
Mean test/val loss: 8.1907
[25, 50, 75] percentiles test/val loss: [ 3.9362  5.8863 10.0828]

Epoch 6, loss = 7.8049
Mean test/val loss: 8.2829
[25, 50, 75] percentiles test/val loss: [ 3.8833  5.9374 10.3   ]

Epoch 8, loss = 7.6225
Mean test/val loss: 8.4006
[25, 50, 75] percentiles test/val loss: [4.1266 6.1734 9.7949]

Epoch 10, loss = 7.3342
Mean test/val loss: 8.0580
[25, 50, 75] percentiles test/val loss: [ 3.6928  5.6581 10.1133]

Epoch 12, loss = 7.1158
Mean test/val loss: 8.3031
[25, 50, 75] percentiles test/val loss: [ 3.871   6.0877 10.4   ]

Epoch 14, loss = 6.9361
Mean test/val loss: 7.9246
[25, 50, 75] percentiles test/val loss: [3.7536 5.8792 9.7733]

Epoch 16, loss = 6.7814
Mean test/val loss: 7.7073
[25, 50, 75] percentiles test/val loss: [3.5195 5.4973 9.5023]

Epoch 18, loss = 6.7890
Mean test/val loss: 8.1205
[25, 50, 75] percentiles test/val loss: [ 3.6904  5.9941 10.0682]

Epoch 20, loss = 6.5313
Mean test/val loss: 7.8473
[25, 50, 75] percentiles test/val loss: [3.5811 5.7967 9.5643]

Epoch 22, loss = 6.3389
Mean test/val loss: 7.7800
[25, 50, 75] percentiles test/val loss: [3.5561 5.7834 9.5965]

Epoch 24, loss = 6.2045
Mean test/val loss: 7.8834
[25, 50, 75] percentiles test/val loss: [ 3.6126  5.5903 10.1671]

New lr: 1e-05
Epoch 26, loss = 6.5248
Mean test/val loss: 7.4513
[25, 50, 75] percentiles test/val loss: [3.4085 5.4464 9.1741]

Epoch 28, loss = 5.5314
Mean test/val loss: 7.4281
[25, 50, 75] percentiles test/val loss: [3.4328 5.4087 9.2164]

Epoch 30, loss = 5.4523
Mean test/val loss: 7.4314
[25, 50, 75] percentiles test/val loss: [3.3925 5.4258 9.1347]

Epoch 32, loss = 5.3839
Mean test/val loss: 7.4444
[25, 50, 75] percentiles test/val loss: [3.3909 5.4131 9.227 ]

Epoch 34, loss = 5.3303
Mean test/val loss: 7.4511
[25, 50, 75] percentiles test/val loss: [3.356  5.4153 9.2788]

Epoch 36, loss = 5.2833
Mean test/val loss: 7.4589
[25, 50, 75] percentiles test/val loss: [3.3918 5.4306 9.4186]

Epoch 38, loss = 5.2400
Mean test/val loss: 7.4716
[25, 50, 75] percentiles test/val loss: [3.3733 5.484  9.2728]

Epoch 40, loss = 5.1984
Mean test/val loss: 7.4804
[25, 50, 75] percentiles test/val loss: [3.3921 5.4749 9.3034]

Epoch 42, loss = 5.1599
Mean test/val loss: 7.4828
[25, 50, 75] percentiles test/val loss: [3.3489 5.42   9.3737]

Epoch 44, loss = 5.1229
Mean test/val loss: 7.4847
[25, 50, 75] percentiles test/val loss: [3.3475 5.4443 9.3721]

Epoch 46, loss = 5.0860
Mean test/val loss: 7.5019
[25, 50, 75] percentiles test/val loss: [3.3053 5.4495 9.3311]

Epoch 48, loss = 5.0506
Mean test/val loss: 7.5131
[25, 50, 75] percentiles test/val loss: [3.3097 5.4232 9.3967]

Epoch 50, loss = 5.0166
Mean test/val loss: 7.5330
[25, 50, 75] percentiles test/val loss: [3.3321 5.4445 9.5048]


Total parameters: 26465972
Total training + validation time: 5.0 hours, 27.0 mins, and 47.20000000000073 secs
Final val loss: 7.533046555399895

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_02_22_23 sample981: 2.5920639038085938
dataset_02_22_23 sample324: 9.61156940460205
dataset_02_22_23 sample3464: 2.1085758209228516
dataset_02_22_23 sample2834: 10.026491165161133
dataset_02_22_23 sample1936: 7.137323379516602
Loss: 6.295 +- 3.373

Downsampling (40%) Results:
dataset_02_22_23 sample1936-downsampling: 7.13732385635376
dataset_02_22_23 sample2834-downsampling: 8.817811965942383
dataset_02_22_23 sample324-downsampling: 9.779998779296875
dataset_02_22_23 sample3464-downsampling: 2.3846559524536133
dataset_02_22_23 sample981-downsampling: 2.3956069946289062
Loss: 6.103 +- 3.147

Removing /scratch/midway3/erschultz/ContactGNNEnergy2downsample
Original sampling (100%) Results:
dataset_02_22_23 sample1936-regular: 6.3600239753723145
dataset_02_22_23 sample2834-regular: 9.343785285949707
dataset_02_22_23 sample324-regular: 8.685994148254395
dataset_02_22_23 sample3464-regular: 2.1085755825042725
dataset_02_22_23 sample981-regular: 2.8044819831848145
Loss: 5.861 +- 2.959

Removing /scratch/midway3/erschultz/ContactGNNEnergy2regsample
Upsampling (200%) Results:
