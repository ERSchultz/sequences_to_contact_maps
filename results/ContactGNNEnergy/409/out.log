#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 64, bias=True)
  (1): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Linear:
 Linear(in_features=74, out_features=64, bias=True) 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm', 'AdjPCs_10'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_05_23_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy9', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=75, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[50], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=409, pretrain_id=None, resume_training=False, k=10, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_1024', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=[64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/409', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/409/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/409/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/409/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f0966e81310>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['AdjPCs(k=10, normalize=False, sign_net=True)', 'Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True),
  AdjPCs(k=10, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 36.709 minutes
Number of samples: 5000
Average num edges per graph:  212776.626
Mean degree: [305.27 435.8  504.58 ... 490.25 494.   504.66] +- [67.85 59.39  5.2  ... 10.14 12.83  8.11]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f0924640580>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.7391
Mean test/val loss: 0.6799
[25, 50, 75] percentiles test/val loss: [0.3217 0.5748 0.9617]

Epoch 4, loss = 0.7019
Mean test/val loss: 0.7109
[25, 50, 75] percentiles test/val loss: [0.3201 0.5786 0.984 ]

Epoch 6, loss = 0.7198
Mean test/val loss: 0.6642
[25, 50, 75] percentiles test/val loss: [0.3122 0.6083 0.8875]

Epoch 8, loss = 0.6879
Mean test/val loss: 0.6368
[25, 50, 75] percentiles test/val loss: [0.3309 0.5682 0.8472]

Epoch 10, loss = 0.9384
Mean test/val loss: 0.7131
[25, 50, 75] percentiles test/val loss: [0.3486 0.6001 0.9442]

Epoch 12, loss = 0.6867
Mean test/val loss: 8.2564
[25, 50, 75] percentiles test/val loss: [0.307  0.5696 0.887 ]

Epoch 14, loss = 0.7020
Mean test/val loss: 0.7465
[25, 50, 75] percentiles test/val loss: [0.3758 0.6406 1.0315]

Epoch 16, loss = 0.7198
Mean test/val loss: 0.6472
[25, 50, 75] percentiles test/val loss: [0.3173 0.5597 0.8826]

Epoch 18, loss = 0.6502
Mean test/val loss: 0.6252
[25, 50, 75] percentiles test/val loss: [0.3425 0.5618 0.8147]

Epoch 20, loss = 0.6510
Mean test/val loss: 0.5981
[25, 50, 75] percentiles test/val loss: [0.2937 0.5354 0.7989]

Epoch 22, loss = 1.1322
Mean test/val loss: 0.6587
[25, 50, 75] percentiles test/val loss: [0.3384 0.5886 0.8852]

Epoch 24, loss = 76.3781
Mean test/val loss: 0.7516
[25, 50, 75] percentiles test/val loss: [0.3526 0.6115 0.9703]

Epoch 26, loss = 0.6852
Mean test/val loss: 0.6456
[25, 50, 75] percentiles test/val loss: [0.2783 0.5519 0.9254]

Epoch 28, loss = 1.4207
Mean test/val loss: 0.9061
[25, 50, 75] percentiles test/val loss: [0.4053 0.724  1.1734]

Epoch 30, loss = 0.6331
Mean test/val loss: 0.7802
[25, 50, 75] percentiles test/val loss: [0.4641 0.7142 1.0424]

Epoch 32, loss = 1.2209
Mean test/val loss: 0.9241
[25, 50, 75] percentiles test/val loss: [0.4653 0.7729 1.1763]

Epoch 34, loss = 0.7882
Mean test/val loss: 0.6469
[25, 50, 75] percentiles test/val loss: [0.3244 0.5747 0.8532]

Epoch 36, loss = 0.6570
Mean test/val loss: 0.6028
[25, 50, 75] percentiles test/val loss: [0.2744 0.5221 0.8282]

Epoch 38, loss = 0.6435
Mean test/val loss: 0.6282
[25, 50, 75] percentiles test/val loss: [0.3029 0.544  0.8596]

Epoch 40, loss = 0.6505
Mean test/val loss: 0.6182
[25, 50, 75] percentiles test/val loss: [0.2879 0.5435 0.8607]

Epoch 42, loss = 0.7785
Mean test/val loss: 0.6504
[25, 50, 75] percentiles test/val loss: [0.3034 0.5624 0.9105]

Epoch 44, loss = 2.6173
Mean test/val loss: 0.6197
[25, 50, 75] percentiles test/val loss: [0.3059 0.5319 0.8011]

Epoch 46, loss = 0.5451
Mean test/val loss: 0.5231
[25, 50, 75] percentiles test/val loss: [0.2413 0.4576 0.7139]

Epoch 48, loss = 0.7183
Mean test/val loss: 0.6796
[25, 50, 75] percentiles test/val loss: [0.3059 0.5687 0.9283]

Epoch 50, loss = 0.6329
Mean test/val loss: 0.6136
[25, 50, 75] percentiles test/val loss: [0.2768 0.5304 0.8345]

New lr: 1e-05
Epoch 52, loss = 0.5996
Mean test/val loss: 0.6028
[25, 50, 75] percentiles test/val loss: [0.2729 0.5305 0.8189]

Epoch 54, loss = 0.5706
Mean test/val loss: 0.5532
[25, 50, 75] percentiles test/val loss: [0.2442 0.4864 0.7689]

Epoch 56, loss = 0.5225
Mean test/val loss: 0.5066
[25, 50, 75] percentiles test/val loss: [0.2333 0.4319 0.6801]

Epoch 58, loss = 0.4981
Mean test/val loss: 0.4968
[25, 50, 75] percentiles test/val loss: [0.229  0.427  0.6536]

Epoch 60, loss = 0.4840
Mean test/val loss: 0.4820
[25, 50, 75] percentiles test/val loss: [0.2221 0.4175 0.6387]

Epoch 62, loss = 0.4760
Mean test/val loss: 0.4705
[25, 50, 75] percentiles test/val loss: [0.2241 0.4084 0.6318]

Epoch 64, loss = 0.4677
Mean test/val loss: 0.4734
[25, 50, 75] percentiles test/val loss: [0.2244 0.4197 0.6388]

Epoch 66, loss = 0.4606
Mean test/val loss: 0.4590
[25, 50, 75] percentiles test/val loss: [0.2116 0.3981 0.6149]

Epoch 68, loss = 0.4539
Mean test/val loss: 0.4532
[25, 50, 75] percentiles test/val loss: [0.2035 0.3967 0.6069]

Epoch 70, loss = 0.4460
Mean test/val loss: 0.4510
[25, 50, 75] percentiles test/val loss: [0.2016 0.3916 0.6075]

Epoch 72, loss = 0.4416
Mean test/val loss: 0.4420
[25, 50, 75] percentiles test/val loss: [0.2043 0.3808 0.5983]

Epoch 74, loss = 0.4353
Mean test/val loss: 0.4418
[25, 50, 75] percentiles test/val loss: [0.2085 0.388  0.6015]

Epoch 75, loss = 0.4339
Mean test/val loss: 0.4544
[25, 50, 75] percentiles test/val loss: [0.2123 0.4037 0.6107]


Total parameters: 43362612
Total training + validation time: 13.0 hours, 40.0 mins, and 43.19999999999709 secs
Final val loss: 0.45439874184876683

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_05_23_23 sample981: 0.41029664874076843
dataset_05_23_23 sample324: 0.4049389958381653
dataset_05_23_23 sample3464: 0.8030457496643066
dataset_05_23_23 sample2834: 0.12300468981266022
dataset_05_23_23 sample1936: 0.38535118103027344
Loss: 0.425 +- 0.217

Downsampling (40%) Results:
dataset_05_23_23 sample1936-downsampling: 3.558116912841797
dataset_05_23_23 sample2834-downsampling: 9.372661590576172
dataset_05_23_23 sample324-downsampling: 4.707494735717773
dataset_05_23_23 sample3464-downsampling: 7.253401279449463
dataset_05_23_23 sample981-downsampling: 3.2236156463623047
Loss: 5.623 +- 2.348

Removing /scratch/midway3/erschultz/ContactGNNEnergy9downsample
Original sampling (100%) Results:
dataset_05_23_23 sample1936-regular: 2.339827060699463
dataset_05_23_23 sample2834-regular: 7.7401018142700195
dataset_05_23_23 sample324-regular: 4.645571231842041
dataset_05_23_23 sample3464-regular: 5.857073783874512
dataset_05_23_23 sample981-regular: 22.267879486083984
Loss: 8.57 +- 7.07

Removing /scratch/midway3/erschultz/ContactGNNEnergy9regsample
