#### ARCHITECTURE ####
Node Encoder:
 None 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(1, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 LinearBlock(
  (model): Sequential(
    (0): Linear(in_features=64, out_features=8, bias=True)
    (1): PReLU(num_parameters=1)
  )
) 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_11_18_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy2', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_SD', model_type='ContactGNNEnergy', id=292, pretrained=False, resume_training=False, k=None, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, message_passing='weighted_GAT', head_architecture='bilinear_8', head_architecture_2='fc-fill', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000, 1024], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/292', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/292/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/292/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/292/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f7b918bc940>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 37.572 minutes
Average num edges per graph:  219629.77916666667
Mean degree: [362.66 512.   449.47 ... 399.29 390.16 429.63] +- [70.54  0.   53.89 ... 85.38 67.92 62.93]

split sizes: train=2160, val=240, test=0, N=2400
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.8103
Mean test/val loss: 0.8164
[25, 50, 75] quantiles test/val loss: [0.535 0.828 1.039]

Epoch 4, loss = 0.7510
Mean test/val loss: 0.7042
[25, 50, 75] quantiles test/val loss: [0.4261 0.7129 0.9657]

Epoch 6, loss = 0.7170
Mean test/val loss: 0.7019
[25, 50, 75] quantiles test/val loss: [0.4226 0.7103 0.95  ]

Epoch 8, loss = 0.7036
Mean test/val loss: 0.6653
[25, 50, 75] quantiles test/val loss: [0.4098 0.6696 0.9081]

Epoch 10, loss = 0.6853
Mean test/val loss: 0.6929
[25, 50, 75] quantiles test/val loss: [0.4185 0.6947 0.9279]

Epoch 12, loss = 0.6646
Mean test/val loss: 0.6408
[25, 50, 75] quantiles test/val loss: [0.3869 0.6535 0.8984]

Epoch 14, loss = 0.6667
Mean test/val loss: 0.6546
[25, 50, 75] quantiles test/val loss: [0.3897 0.6544 0.8889]

Epoch 16, loss = 0.6789
Mean test/val loss: 0.6442
[25, 50, 75] quantiles test/val loss: [0.3853 0.65   0.8773]

Epoch 18, loss = 0.6409
Mean test/val loss: 0.6421
[25, 50, 75] quantiles test/val loss: [0.3925 0.6312 0.8759]

Epoch 20, loss = 0.6340
Mean test/val loss: 0.6328
[25, 50, 75] quantiles test/val loss: [0.3871 0.6449 0.8698]

Epoch 22, loss = 0.6187
Mean test/val loss: 0.6116
[25, 50, 75] quantiles test/val loss: [0.37   0.5934 0.8387]

Epoch 24, loss = 0.6108
Mean test/val loss: 0.6418
[25, 50, 75] quantiles test/val loss: [0.3887 0.6278 0.8803]

Epoch 26, loss = 0.6172
Mean test/val loss: 0.5891
[25, 50, 75] quantiles test/val loss: [0.3522 0.584  0.8199]

Epoch 28, loss = 0.5883
Mean test/val loss: 0.5932
[25, 50, 75] quantiles test/val loss: [0.3435 0.5729 0.8416]

Epoch 30, loss = 0.5814
Mean test/val loss: 0.5839
[25, 50, 75] quantiles test/val loss: [0.3423 0.5834 0.8207]

Epoch 32, loss = 0.5727
Mean test/val loss: 0.6099
[25, 50, 75] quantiles test/val loss: [0.3768 0.6008 0.8207]

Epoch 34, loss = 0.5652
Mean test/val loss: 0.5942
[25, 50, 75] quantiles test/val loss: [0.3532 0.5981 0.8144]

Epoch 36, loss = 0.6306
Mean test/val loss: 0.5922
[25, 50, 75] quantiles test/val loss: [0.3416 0.567  0.8441]

Epoch 38, loss = 0.5763
Mean test/val loss: 0.5763
[25, 50, 75] quantiles test/val loss: [0.3251 0.5752 0.8029]

Epoch 40, loss = 0.6417
Mean test/val loss: 0.5693
[25, 50, 75] quantiles test/val loss: [0.3395 0.5527 0.7887]

Epoch 42, loss = 0.5491
Mean test/val loss: 0.5587
[25, 50, 75] quantiles test/val loss: [0.3159 0.5435 0.7874]

Epoch 44, loss = 0.5501
Mean test/val loss: 0.5753
[25, 50, 75] quantiles test/val loss: [0.3301 0.5536 0.7904]

Epoch 46, loss = 0.5517
Mean test/val loss: 0.5498
[25, 50, 75] quantiles test/val loss: [0.3023 0.5304 0.7865]

Epoch 48, loss = 0.5713
Mean test/val loss: 0.5570
[25, 50, 75] quantiles test/val loss: [0.3016 0.5365 0.8013]

Epoch 50, loss = 0.5423
Mean test/val loss: 0.5618
[25, 50, 75] quantiles test/val loss: [0.2988 0.5377 0.7952]

Epoch 52, loss = 0.5136
Mean test/val loss: 0.5335
[25, 50, 75] quantiles test/val loss: [0.28   0.5195 0.7699]

Epoch 54, loss = 0.5100
Mean test/val loss: 0.5316
[25, 50, 75] quantiles test/val loss: [0.2803 0.5212 0.7664]

Epoch 56, loss = 0.5076
Mean test/val loss: 0.5304
[25, 50, 75] quantiles test/val loss: [0.2739 0.515  0.7707]

Epoch 58, loss = 0.5056
Mean test/val loss: 0.5299
[25, 50, 75] quantiles test/val loss: [0.2726 0.5194 0.769 ]

Epoch 60, loss = 0.5039
Mean test/val loss: 0.5293
[25, 50, 75] quantiles test/val loss: [0.2736 0.5146 0.7668]

Epoch 62, loss = 0.5023
Mean test/val loss: 0.5287
[25, 50, 75] quantiles test/val loss: [0.2721 0.517  0.7604]

Epoch 64, loss = 0.5007
Mean test/val loss: 0.5281
[25, 50, 75] quantiles test/val loss: [0.2721 0.5155 0.7651]

Epoch 66, loss = 0.4993
Mean test/val loss: 0.5274
[25, 50, 75] quantiles test/val loss: [0.276  0.5213 0.7635]

Epoch 68, loss = 0.4980
Mean test/val loss: 0.5262
[25, 50, 75] quantiles test/val loss: [0.2757 0.5182 0.7605]

Epoch 70, loss = 0.4967
Mean test/val loss: 0.5264
[25, 50, 75] quantiles test/val loss: [0.2732 0.518  0.7653]

Epoch 72, loss = 0.4954
Mean test/val loss: 0.5257
[25, 50, 75] quantiles test/val loss: [0.2681 0.5168 0.7667]

Epoch 74, loss = 0.4943
Mean test/val loss: 0.5253
[25, 50, 75] quantiles test/val loss: [0.2703 0.5109 0.7665]

Epoch 76, loss = 0.4932
Mean test/val loss: 0.5242
[25, 50, 75] quantiles test/val loss: [0.2702 0.5131 0.7582]

Epoch 78, loss = 0.4922
Mean test/val loss: 0.5248
[25, 50, 75] quantiles test/val loss: [0.2703 0.5109 0.7571]

Epoch 80, loss = 0.4911
Mean test/val loss: 0.5238
[25, 50, 75] quantiles test/val loss: [0.2712 0.5129 0.759 ]

Epoch 82, loss = 0.4901
Mean test/val loss: 0.5240
[25, 50, 75] quantiles test/val loss: [0.2685 0.5127 0.7619]

Epoch 84, loss = 0.4891
Mean test/val loss: 0.5234
[25, 50, 75] quantiles test/val loss: [0.2681 0.5096 0.761 ]

Epoch 86, loss = 0.4883
Mean test/val loss: 0.5236
[25, 50, 75] quantiles test/val loss: [0.27   0.5131 0.7588]

Epoch 88, loss = 0.4872
Mean test/val loss: 0.5223
[25, 50, 75] quantiles test/val loss: [0.2685 0.5073 0.7556]

Epoch 90, loss = 0.4864
