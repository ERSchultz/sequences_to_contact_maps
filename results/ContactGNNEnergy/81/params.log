#### INITIAL PARAMETERS ####
W torch.Size([8, 8])
Parameter containing:
tensor([[ 0.4038, -0.7140,  0.8337, -0.9585,  0.4536,  1.2461, -2.3065, -1.2869],
        [ 0.1799, -2.1268, -0.1341, -1.0408, -0.7647, -0.0553,  1.2049, -0.9825],
        [ 0.4334, -0.7172,  1.0554, -1.4534,  0.4652,  0.3714, -0.0047,  0.0795],
        [ 0.3782,  0.7051, -1.7237, -0.8435,  0.4351,  0.2659, -0.5871,  0.0827],
        [ 0.8854,  0.1824,  0.7864, -0.0579,  0.5667, -0.7098, -0.4875,  0.0501],
        [ 0.6084,  1.6309, -0.0847,  1.0844,  0.9478, -0.6766, -0.5730, -0.3303],
        [-0.7939,  0.3752,  0.0879, -1.2415, -0.3203, -0.8444, -0.5513,  1.9890],
        [ 1.9003,  1.6951,  0.0281, -0.1754, -1.7735, -0.7046, -0.3947,  1.8868]],
       device='cuda:0', requires_grad=True) 

act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

inner_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

out_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

model.module_0.bias torch.Size([8])
Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True) 

model.module_0.lin.weight torch.Size([8, 3])
Parameter containing:
tensor([[-0.5830, -0.3405, -0.2085],
        [-0.4441,  0.0697, -0.7294],
        [ 0.6670, -0.6274,  0.5702],
        [ 0.1229, -0.2398,  0.4564],
        [ 0.1151,  0.5967,  0.0807],
        [-0.2329,  0.1984, -0.2003],
        [ 0.3108,  0.6594,  0.4269],
        [-0.3229,  0.4263,  0.1321]], device='cuda:0', requires_grad=True) 

model.module_2.bias torch.Size([8])
Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True) 

model.module_2.lin.weight torch.Size([8, 8])
Parameter containing:
tensor([[ 0.1887, -0.5712, -0.4022, -0.2038,  0.0958, -0.5388, -0.2639, -0.3666],
        [ 0.0017, -0.2279, -0.0424, -0.4150, -0.4203, -0.3573, -0.2096, -0.4833],
        [ 0.5135, -0.1215,  0.5269,  0.1908, -0.5186,  0.4238, -0.1685, -0.2347],
        [-0.5083, -0.6088,  0.1752, -0.1338,  0.2384, -0.5026,  0.4546, -0.4495],
        [-0.1057,  0.1279,  0.3161,  0.4944,  0.5578, -0.4856,  0.1541, -0.2634],
        [-0.0671, -0.4584,  0.5578, -0.4495,  0.3273,  0.2152,  0.1990, -0.3311],
        [ 0.5566,  0.1346,  0.0788, -0.5397,  0.2571, -0.0919, -0.2805,  0.5260],
        [ 0.1365, -0.3388, -0.3099, -0.0292,  0.3419, -0.1565, -0.3494, -0.2097]],
       device='cuda:0', requires_grad=True) 

model.module_4.bias torch.Size([8])
Parameter containing:
tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0', requires_grad=True) 

model.module_4.lin.weight torch.Size([8, 8])
Parameter containing:
tensor([[ 0.2507, -0.3007, -0.1232, -0.3524, -0.1116, -0.4310, -0.4001,  0.2031],
        [-0.1820,  0.3780, -0.1965, -0.4492, -0.1080, -0.2968, -0.1874, -0.5830],
        [ 0.3426, -0.4263,  0.3078,  0.2779,  0.4375, -0.4697,  0.4404, -0.2895],
        [ 0.2272,  0.5751, -0.0864, -0.0047, -0.1410, -0.5113,  0.2939, -0.6079],
        [ 0.3802,  0.4582,  0.5791, -0.1444, -0.5032,  0.1377,  0.3383, -0.6095],
        [-0.1390, -0.3671, -0.0536, -0.3014, -0.2503, -0.1944, -0.5819,  0.5025],
        [ 0.5134, -0.0961, -0.0697, -0.2499, -0.5530, -0.5959,  0.2276, -0.3362],
        [-0.3937, -0.0478, -0.2039, -0.1981,  0.0197, -0.1299, -0.2108, -0.2932]],
       device='cuda:0', requires_grad=True) 



#### FINAL PARAMETERS ####
W 64 torch.Size([8, 8])
Parameter containing:
tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0') 

act.weight 1 torch.Size([1])
Parameter containing:
tensor([nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan], device='cuda:0') 

inner_act.weight 1 torch.Size([1])
Parameter containing:
tensor([nan], device='cuda:0', requires_grad=True) 
grad:  tensor([nan], device='cuda:0') 

out_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 
grad:  None 

model.module_0.bias 8 torch.Size([8])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0',
       requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0') 

model.module_0.lin.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan]], device='cuda:0', requires_grad=True) 
grad:  tensor([[nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan],
        [nan, nan, nan]], device='cuda:0') 

model.module_2.bias 8 torch.Size([8])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0',
       requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0') 

model.module_2.lin.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0') 

model.module_4.bias 8 torch.Size([8])
Parameter containing:
tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0',
       requires_grad=True) 
grad:  tensor([nan, nan, nan, nan, nan, nan, nan, nan], device='cuda:0') 

model.module_4.lin.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0',
       requires_grad=True) 
grad:  tensor([[nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan],
        [nan, nan, nan, nan, nan, nan, nan, nan]], device='cuda:0') 

