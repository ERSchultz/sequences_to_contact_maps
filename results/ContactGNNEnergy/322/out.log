#### ARCHITECTURE ####
Node Encoder:
 Sequential(
  (0): Linear(1, 1000, bias=True)
  (1): PReLU(num_parameters=1)
  (2): Linear(1000, 1000, bias=True)
  (3): PReLU(num_parameters=1)
  (4): Linear(1000, 64, bias=True)
  (5): PReLU(num_parameters=1)
) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): PReLU(num_parameters=1)
      )
    )
  )
)
) 

Head 1:
 Bilinear 

Head 2:
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=32768, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1024, bias=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['constant', 'ContactDistance', 'GeneticDistance_norm'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_12_20_22'], scratch='/scratch/midway2/erschultz', root_name='ContactGNNEnergy10', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', y_zero_diag_count=0, log_preprocessing=None, output_preprocesing='log', kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, use_scratch=False, use_scratch_parallel=True, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=100, save_mod=5, print_mod=2, lr=0.0001, weight_decay=0.0, gpus=1, milestones=[50], gamma=0.1, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=322, pretrained=False, resume_training=False, k=None, m=1024, seed=42, act='prelu', inner_act='prelu', out_act='prelu', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, message_passing='weighted_GAT', head_architecture='bilinear_triu', head_architecture_2='fc-fill', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000, 1024], encoder_hidden_sizes_list=[1000, 1000, 64], inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='prelu', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/322', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/322/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/322/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/322/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7faaf17709d0>, channels=1, node_feature_size=1, input_m=512, edge_transforms=["'ContactDistance'", 'ContactDistance(norm=False)', 'GeneticDistance(norm=True)'], node_transforms=['Constant(value=1.0)'], edge_dim=2, transforms_processed=None, diag=False, pre_transforms_processed=Compose([
  Constant(value=1.0),
  ContactDistance(norm=False),
  GeneticDistance(norm=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 76.839 minutes
Average num edges per graph:  248549.4796
Mean degree: [507.27 508.81 506.38 ... 511.81 440.   510.31] +- [ 5.29  4.55  9.05 ...  0.67 60.66  3.19]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.3727
Mean test/val loss: 0.3446
[25, 50, 75] quantiles test/val loss: [0.1487 0.28   0.4731]

Epoch 4, loss = 0.2983
Mean test/val loss: 0.3104
[25, 50, 75] quantiles test/val loss: [0.1577 0.2625 0.3894]

Epoch 6, loss = 0.2601
Mean test/val loss: 0.2505
[25, 50, 75] quantiles test/val loss: [0.1124 0.1898 0.3089]

Epoch 8, loss = 0.2449
Mean test/val loss: 0.2417
[25, 50, 75] quantiles test/val loss: [0.0993 0.1738 0.291 ]

Epoch 10, loss = 0.2381
Mean test/val loss: 0.2384
[25, 50, 75] quantiles test/val loss: [0.0995 0.1807 0.3   ]

Epoch 12, loss = 0.2226
Mean test/val loss: 0.2283
[25, 50, 75] quantiles test/val loss: [0.0994 0.168  0.289 ]

Epoch 14, loss = 0.2147
Mean test/val loss: 0.2457
[25, 50, 75] quantiles test/val loss: [0.1143 0.1861 0.3086]

Epoch 16, loss = 0.2100
Mean test/val loss: 0.2262
[25, 50, 75] quantiles test/val loss: [0.0965 0.172  0.2792]

Epoch 18, loss = 0.2135
Mean test/val loss: 0.2052
[25, 50, 75] quantiles test/val loss: [0.0738 0.1511 0.2616]

Epoch 20, loss = 0.2037
Mean test/val loss: 0.2063
[25, 50, 75] quantiles test/val loss: [0.0772 0.1506 0.2516]

Epoch 22, loss = 0.1933
Mean test/val loss: 0.2002
[25, 50, 75] quantiles test/val loss: [0.0784 0.1427 0.2495]

Epoch 24, loss = 0.3225
Mean test/val loss: 0.2348
[25, 50, 75] quantiles test/val loss: [0.0992 0.1718 0.2965]

Epoch 26, loss = 0.2168
Mean test/val loss: 0.2040
[25, 50, 75] quantiles test/val loss: [0.0749 0.1439 0.2553]

Epoch 28, loss = 0.1940
Mean test/val loss: 0.2003
[25, 50, 75] quantiles test/val loss: [0.072  0.1398 0.2431]

Epoch 30, loss = 0.1870
Mean test/val loss: 0.1926
[25, 50, 75] quantiles test/val loss: [0.0704 0.1352 0.2373]

Epoch 32, loss = 0.1826
Mean test/val loss: 0.1890
[25, 50, 75] quantiles test/val loss: [0.0731 0.1353 0.2366]

Epoch 34, loss = 0.1796
Mean test/val loss: 0.1940
[25, 50, 75] quantiles test/val loss: [0.0736 0.1401 0.2453]

Epoch 36, loss = 0.1755
Mean test/val loss: 0.1849
[25, 50, 75] quantiles test/val loss: [0.0682 0.137  0.2324]

Epoch 38, loss = 0.1794
Mean test/val loss: 0.1844
[25, 50, 75] quantiles test/val loss: [0.0704 0.1328 0.2268]

Epoch 40, loss = 0.1973
Mean test/val loss: 0.2044
[25, 50, 75] quantiles test/val loss: [0.0777 0.1542 0.2598]

Epoch 42, loss = 0.2194
Mean test/val loss: 0.2310
[25, 50, 75] quantiles test/val loss: [0.0846 0.1689 0.2908]

Epoch 44, loss = 0.1755
Mean test/val loss: 0.1903
[25, 50, 75] quantiles test/val loss: [0.0724 0.1371 0.2353]

Epoch 46, loss = 0.1673
Mean test/val loss: 0.1749
[25, 50, 75] quantiles test/val loss: [0.0605 0.1245 0.2231]

Epoch 48, loss = 0.1661
Mean test/val loss: 0.1793
[25, 50, 75] quantiles test/val loss: [0.0632 0.1263 0.2247]

Epoch 50, loss = 0.1632
Mean test/val loss: 0.1753
[25, 50, 75] quantiles test/val loss: [0.0636 0.124  0.2228]

Epoch 52, loss = 0.1490
Mean test/val loss: 0.1671
[25, 50, 75] quantiles test/val loss: [0.0554 0.1166 0.2127]

Epoch 54, loss = 0.1468
Mean test/val loss: 0.1661
[25, 50, 75] quantiles test/val loss: [0.0552 0.115  0.2082]

Epoch 56, loss = 0.1454
Mean test/val loss: 0.1654
[25, 50, 75] quantiles test/val loss: [0.0551 0.1146 0.2087]

Epoch 58, loss = 0.1443
Mean test/val loss: 0.1649
[25, 50, 75] quantiles test/val loss: [0.0544 0.1138 0.2058]

Epoch 60, loss = 0.1432
Mean test/val loss: 0.1648
[25, 50, 75] quantiles test/val loss: [0.0538 0.1138 0.2068]

Epoch 62, loss = 0.1424
Mean test/val loss: 0.1643
[25, 50, 75] quantiles test/val loss: [0.0543 0.1149 0.2059]

Epoch 64, loss = 0.1415
Mean test/val loss: 0.1640
[25, 50, 75] quantiles test/val loss: [0.0537 0.1133 0.2046]

Epoch 66, loss = 0.1407
Mean test/val loss: 0.1635
[25, 50, 75] quantiles test/val loss: [0.0539 0.1123 0.2015]

Epoch 68, loss = 0.1399
Mean test/val loss: 0.1644
[25, 50, 75] quantiles test/val loss: [0.0537 0.1135 0.2049]

Epoch 70, loss = 0.1392
Mean test/val loss: 0.1636
[25, 50, 75] quantiles test/val loss: [0.0535 0.1145 0.2047]

Epoch 72, loss = 0.1384
Mean test/val loss: 0.1640
[25, 50, 75] quantiles test/val loss: [0.0545 0.114  0.2038]

Epoch 74, loss = 0.1377
Mean test/val loss: 0.1628
[25, 50, 75] quantiles test/val loss: [0.0535 0.1126 0.2045]

Epoch 76, loss = 0.1370
Mean test/val loss: 0.1627
[25, 50, 75] quantiles test/val loss: [0.0532 0.1124 0.2034]

Epoch 78, loss = 0.1363
Mean test/val loss: 0.1634
[25, 50, 75] quantiles test/val loss: [0.0536 0.1114 0.2033]

Epoch 80, loss = 0.1368
Mean test/val loss: 0.1627
[25, 50, 75] quantiles test/val loss: [0.0534 0.1115 0.2035]

Epoch 82, loss = 0.1353
Mean test/val loss: 0.1625
[25, 50, 75] quantiles test/val loss: [0.0534 0.1115 0.2053]

Epoch 84, loss = 0.1347
Mean test/val loss: 0.1626
[25, 50, 75] quantiles test/val loss: [0.0536 0.1115 0.2035]

Epoch 86, loss = 0.1341
Mean test/val loss: 0.1624
[25, 50, 75] quantiles test/val loss: [0.0531 0.1104 0.2027]

Epoch 88, loss = 0.1334
Mean test/val loss: 0.1633
[25, 50, 75] quantiles test/val loss: [0.0528 0.1114 0.203 ]

Epoch 90, loss = 0.1328
Mean test/val loss: 0.1622
[25, 50, 75] quantiles test/val loss: [0.0525 0.1104 0.2037]

Epoch 92, loss = 0.1323
Mean test/val loss: 0.1622
[25, 50, 75] quantiles test/val loss: [0.0525 0.1099 0.2019]

Epoch 94, loss = 0.1317
Mean test/val loss: 0.1628
[25, 50, 75] quantiles test/val loss: [0.0534 0.1115 0.2046]

Epoch 96, loss = 0.1311
Mean test/val loss: 0.1625
[25, 50, 75] quantiles test/val loss: [0.0531 0.11   0.2022]

Epoch 98, loss = 0.1305
Mean test/val loss: 0.1633
[25, 50, 75] quantiles test/val loss: [0.0533 0.1099 0.2038]

Epoch 100, loss = 0.1299
Mean test/val loss: 0.1625
[25, 50, 75] quantiles test/val loss: [0.0525 0.1102 0.2013]


Total parameters: 44422732
Total training + validation time: 22.0 hours, 22.0 mins, and 37.39999999999418 secs
Final val loss: 0.16254859695769847

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_12_20_22 sample981: 0.147735133767128
dataset_12_20_22 sample324: 0.35905009508132935
dataset_12_20_22 sample3464: 0.018495237454771996
dataset_12_20_22 sample2834: 0.1679186373949051
dataset_12_20_22 sample1936: 0.2233361154794693
Loss: 0.183 +- 0.111

Downsampling (40%) Results:
dataset_12_20_22 sample1936-downsampling: 3.497915744781494
dataset_12_20_22 sample2834-downsampling: 2.8740620613098145
dataset_12_20_22 sample324-downsampling: 4.130865573883057
dataset_12_20_22 sample3464-downsampling: 2.3873236179351807
dataset_12_20_22 sample981-downsampling: 2.75457763671875
Loss: 3.129 +- 0.616

Removing /project2/depablo/erschultz/dataset_12_20_22/ContactGNNEnergy10downsample
Original sampling (100%) Results:
dataset_12_20_22 sample1936-regular: 3.1779518127441406
dataset_12_20_22 sample2834-regular: 2.7992587089538574
dataset_12_20_22 sample324-regular: 3.8412952423095703
dataset_12_20_22 sample3464-regular: 1.6496119499206543
dataset_12_20_22 sample981-regular: 2.5479280948638916
Loss: 2.803 +- 0.723

Removing /project2/depablo/erschultz/dataset_12_20_22/ContactGNNEnergy10regsample
Upsampling (200%) Results:
