Took 836.0 seconds to move data to scratch
#### ARCHITECTURE ####
Sequential(
  (0): SignedConv(3, 8, first_aggr=True)
  (1): PReLU(num_parameters=1)
  (2): SignedConv(8, 8, first_aggr=False)
  (3): PReLU(num_parameters=1)
  (4): SignedConv(8, 2, first_aggr=False)
)
Sequential(
  (0): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=24, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (1): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=10, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
  (2): LinearBlock(
    (model): Sequential(
      (0): Linear(in_features=10, out_features=1, bias=True)
      (1): PReLU(num_parameters=1)
    )
  )
) 

Namespace(GNN_mode=True, act='prelu', autoencoder_mode=False, batch_size=4, bottleneck=None, channels=1, classes=10, criterion=<function mse_loss at 0x7f86fed59040>, crop=None, cuda=True, data_folder='/scratch/midway2/erschultz/dataset_09_02_21', degree=True, delete_root=False, device=device(type='cuda'), dilation_list=None, dilation_list_head=None, dilation_list_trunk=None, down_sampling=None, gamma=0.1, gpus=1, head_act='prelu', head_architecture='concat-outer', head_hidden_sizes_list=[10, 10, 1], hidden_sizes_list=[8, 8, 2], id=30, ifile=None, ifile_folder=None, inner_act='prelu', k=2, kernel_w_list=None, log_file=<_io.TextIOWrapper name='results/ContactGNNEnergy/30/out.log' mode='a' encoding='UTF-8'>, loss='mse', lr=0.0001, m=1024, message_passing='SignedConv', milestones=None, min_subtraction=True, model_type='ContactGNNEnergy', n_epochs=100, nf=None, node_feature_size=3, num_workers=4, ofile_folder='results/ContactGNNEnergy/30', out_act='prelu', output_mode='energy', parameter_sharing=False, plot=True, plot_predictions=True, pre_transforms=['degree'], pre_transforms_processed=None, pretrained=False, print_mod=2, print_params=True, relabel_11_to_00=False, resume_training=False, root_name='ContactGNNEnergy2', save_mod=5, seed=42, shuffle=True, sparsify_threshold=0.176, sparsify_threshold_upper=None, split=[0.8, 0.1, 0.1], split_neg_pos_edges=True, split_neg_pos_edges_for_feature_augmentation=True, start_epoch=1, top_k=None, toxx=False, toxx_mode='mean', training_norm=None, transforms=None, transforms_processed=None, use_bias=True, use_edge_weights=False, use_node_features=False, use_parallel=False, use_scratch=True, verbose=False, weighted_LDP=False, weighted_degree=False, x_reshape=True, y_log_transform=True, y_norm=None, y_preprocessing='diag', y_reshape=True, ydtype=torch.float32)

#### INITIAL PARAMETERS ####
act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

inner_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

out_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

head_act.weight torch.Size([1])
Parameter containing:
tensor([0.2500], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1779, -0.5385, -0.3792],
        [-0.1922,  0.0903, -0.5080],
        [-0.2488, -0.3456,  0.0016],
        [-0.2148, -0.0400, -0.3912],
        [-0.3963, -0.3368, -0.1976],
        [-0.4557,  0.4841, -0.1146],
        [ 0.4968,  0.1799, -0.4889],
        [ 0.3995, -0.1589, -0.2213]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[-0.4792, -0.5740,  0.1652],
        [-0.1261,  0.2248, -0.4738],
        [ 0.4286, -0.4238, -0.0997],
        [ 0.1206,  0.2981,  0.4661],
        [ 0.5259, -0.4578,  0.1453],
        [-0.2483, -0.0633, -0.4321],
        [ 0.5259, -0.4237,  0.3086],
        [ 0.2029,  0.1876, -0.3121]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.5248,  0.1269,  0.0743, -0.5088,  0.2424, -0.0866, -0.2645,  0.4959],
       device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_l.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1287, -0.3194, -0.2922],
        [-0.0276,  0.3224, -0.1475],
        [-0.3294, -0.1977, -0.4313],
        [ 0.2059,  0.4469, -0.5435],
        [ 0.1341,  0.2983,  0.1047],
        [-0.2056,  0.3013,  0.3034],
        [ 0.2159, -0.1015, -0.1529],
        [ 0.0618, -0.1020, -0.1721]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.weight torch.Size([8, 3])
Parameter containing:
tensor([[ 0.3690,  0.4962, -0.0572],
        [-0.1293,  0.0084, -0.0345],
        [ 0.1388,  0.1618, -0.5244],
        [-0.2131,  0.4862,  0.2249],
        [-0.0287, -0.3481, -0.3532],
        [-0.5172, -0.1882,  0.1950],
        [ 0.3681,  0.2666, -0.5103],
        [-0.3472, -0.0911,  0.5585]], device='cuda:0', requires_grad=True) 

model.nns.0.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.0835, -0.1495,  0.2389, -0.2199, -0.3737,  0.4214, -0.2625, -0.1157],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_l.weight torch.Size([8, 16])
Parameter containing:
tensor([[-0.0051, -0.1553, -0.0310,  0.1017, -0.2445,  0.0743, -0.1653, -0.1220,
          0.0960,  0.1988, -0.0683, -0.1026, -0.2261, -0.1289, -0.2189, -0.0572],
        [ 0.0510, -0.2342,  0.2183,  0.1568, -0.2447, -0.1194,  0.0815, -0.0514,
         -0.0272, -0.1129,  0.2008, -0.1397,  0.2073,  0.0161,  0.0503,  0.1950],
        [-0.0412, -0.1423, -0.0404,  0.2028, -0.1855,  0.0567, -0.2457,  0.1311,
          0.0924,  0.0106,  0.1073,  0.0003,  0.1383, -0.1979, -0.0367,  0.1109],
        [ 0.2490,  0.1273, -0.1818,  0.1923, -0.0557, -0.0534, -0.2272, -0.0394,
          0.1768,  0.0349, -0.1456,  0.0770, -0.0802,  0.2282, -0.2170, -0.0790],
        [-0.2414, -0.0985,  0.0788,  0.2407,  0.0420,  0.2451,  0.0489,  0.1444,
          0.2004,  0.2090, -0.1399,  0.2298,  0.1514, -0.1169, -0.1193, -0.2097],
        [ 0.0628, -0.2026,  0.1056,  0.0789, -0.2172,  0.0681, -0.0203,  0.1142,
          0.1434, -0.2485,  0.2293,  0.2097,  0.0995, -0.2285, -0.0893, -0.0725],
        [-0.0642,  0.1410,  0.0909,  0.1980, -0.0936,  0.0841,  0.0889, -0.2081,
         -0.2425, -0.1297,  0.1711, -0.2354, -0.2176,  0.1401,  0.1349,  0.2056],
        [-0.1887, -0.1830,  0.1282,  0.2174,  0.1496,  0.0392,  0.0824,  0.2373,
         -0.1613, -0.1135,  0.1749, -0.1711, -0.1379,  0.1825,  0.0789,  0.0808]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.weight torch.Size([8, 8])
Parameter containing:
tensor([[-0.1499, -0.0049,  0.3236, -0.2122,  0.0028,  0.1681, -0.2441,  0.3434],
        [-0.1766, -0.0849, -0.0957, -0.2304, -0.3469,  0.1994,  0.0939, -0.3311],
        [-0.2276,  0.3494,  0.1351,  0.1419, -0.2115, -0.1550, -0.0534, -0.0647],
        [-0.2423,  0.0291,  0.0351, -0.0448,  0.0490, -0.1401,  0.0920,  0.1333],
        [-0.1862, -0.3506,  0.1851,  0.0843, -0.1798,  0.3407, -0.1599,  0.2389],
        [ 0.1794, -0.2964,  0.2280, -0.3251, -0.1959, -0.0589, -0.2383,  0.3454],
        [-0.0709,  0.1404, -0.3157,  0.2035, -0.1099, -0.2689,  0.0517,  0.1713],
        [ 0.3060, -0.2159, -0.1740,  0.0680,  0.0959,  0.1359,  0.1941, -0.0802]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_pos_r.bias torch.Size([8])
Parameter containing:
tensor([ 0.1964,  0.2607, -0.0924,  0.2515,  0.1727,  0.3119, -0.2009, -0.1746],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_l.weight torch.Size([8, 16])
Parameter containing:
tensor([[-0.0723,  0.0127,  0.1500, -0.1427,  0.1252, -0.0896,  0.1510, -0.0119,
         -0.2190, -0.1376, -0.1809,  0.1240, -0.1676, -0.0208,  0.0539, -0.1371],
        [ 0.0721, -0.2441, -0.1789, -0.2265, -0.0756, -0.0911,  0.0358, -0.0462,
          0.1175,  0.2292,  0.0897, -0.0985, -0.2341,  0.0906, -0.1239,  0.1272],
        [ 0.1671,  0.0964,  0.2346,  0.2374,  0.0529, -0.1822,  0.2234, -0.1186,
         -0.1181,  0.2092,  0.1937,  0.0755,  0.0157, -0.2103, -0.0260,  0.2398],
        [ 0.0637,  0.0214, -0.0519, -0.0872,  0.1490,  0.0154,  0.1626, -0.0442,
          0.1092,  0.1032,  0.0399,  0.1571,  0.1567,  0.2317,  0.1922, -0.0639],
        [-0.2117,  0.0457, -0.0022, -0.0652, -0.0419,  0.0118,  0.1824,  0.0779,
         -0.0888, -0.1028, -0.0619, -0.0966,  0.2248,  0.1324,  0.2257,  0.0008],
        [ 0.0504,  0.0867, -0.2366,  0.0223, -0.0167, -0.1402, -0.1940,  0.2213,
          0.2033,  0.1159,  0.2386, -0.1015, -0.0432,  0.0947, -0.0413, -0.0491],
        [-0.2066,  0.0672, -0.1511,  0.0091,  0.2437, -0.0770, -0.0788,  0.1508,
         -0.0919, -0.0215,  0.2334, -0.1025, -0.1789, -0.1399, -0.0693, -0.1186],
        [-0.1297,  0.1010,  0.0425, -0.0800, -0.1942, -0.0787, -0.1055, -0.0814,
         -0.2255,  0.0539, -0.1837, -0.1947, -0.2043,  0.1043, -0.1505, -0.1032]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.weight torch.Size([8, 8])
Parameter containing:
tensor([[ 0.2771,  0.1877,  0.2027, -0.3357, -0.2535, -0.1335,  0.2921,  0.0362],
        [-0.2644,  0.0022, -0.2746, -0.0775, -0.0972,  0.3061,  0.1095, -0.0616],
        [ 0.0597, -0.1021,  0.1389,  0.1399,  0.0949, -0.1378,  0.3016, -0.0510],
        [-0.1376,  0.2214,  0.2882,  0.3518,  0.1047, -0.1205,  0.1796,  0.3033],
        [-0.3468, -0.0438, -0.2411,  0.0659,  0.1462, -0.0730, -0.0296,  0.1591],
        [-0.0594, -0.2969,  0.2829, -0.1779, -0.0388,  0.0333, -0.0212, -0.3326],
        [ 0.1622, -0.1606, -0.1834,  0.0845, -0.1845, -0.1634, -0.1191, -0.1328],
        [-0.1477, -0.0953,  0.0919, -0.2861, -0.2140,  0.0052,  0.0492,  0.1953]],
       device='cuda:0', requires_grad=True) 

model.nns.2.lin_neg_r.bias torch.Size([8])
Parameter containing:
tensor([-0.2484,  0.1129,  0.2010,  0.1963, -0.3293, -0.1349, -0.3039, -0.2237],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2055, -0.2402,  0.1117,  0.2492,  0.1252,  0.0852, -0.2405,  0.2405,
         -0.0428, -0.2336,  0.2468, -0.1017, -0.0177,  0.2288, -0.1733, -0.1769],
        [ 0.0407, -0.0335,  0.0576, -0.2097,  0.0075, -0.1112, -0.1229, -0.2289,
          0.1326,  0.0482, -0.2114,  0.1984,  0.0754,  0.0464, -0.1468,  0.0377]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.3407,  0.2425, -0.2754,  0.3227,  0.0274,  0.1700,  0.2746,  0.3014],
        [-0.2756,  0.3096, -0.2401,  0.0265, -0.2471, -0.0775, -0.0161, -0.0423]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_pos_r.bias torch.Size([2])
Parameter containing:
tensor([-0.0559,  0.0279], device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_l.weight torch.Size([2, 16])
Parameter containing:
tensor([[ 0.2466,  0.1453,  0.1399,  0.1001,  0.1935, -0.0115,  0.0199,  0.0514,
         -0.2180, -0.2014,  0.0307, -0.0978, -0.0046, -0.0574,  0.0389,  0.1627],
        [-0.0829,  0.2002,  0.1974, -0.1919, -0.1931, -0.2023, -0.1370, -0.0973,
         -0.0188, -0.0608, -0.1263, -0.0794, -0.0904,  0.2453, -0.0927, -0.1790]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_r.weight torch.Size([2, 8])
Parameter containing:
tensor([[ 0.1470, -0.0204,  0.2707,  0.2209,  0.3248, -0.2589,  0.2273,  0.2967],
        [-0.1746,  0.3250,  0.2650,  0.0039,  0.1705, -0.1236, -0.3084,  0.0894]],
       device='cuda:0', requires_grad=True) 

model.nns.4.lin_neg_r.bias torch.Size([2])
Parameter containing:
tensor([ 0.1054, -0.2311], device='cuda:0', requires_grad=True) 

head.0.model.0.weight torch.Size([10, 24])
Parameter containing:
tensor([[ 9.9000e-02, -1.7437e-01,  1.7567e-01,  1.9767e-01,  5.5575e-02,
         -1.2807e-01,  9.9341e-02,  3.4786e-02,  5.5505e-02,  6.7086e-02,
          1.5541e-01, -8.7740e-02, -4.5917e-02,  5.5666e-02,  2.2242e-02,
          1.6460e-01, -1.0721e-01, -7.4335e-03,  3.8141e-02, -5.4213e-02,
          1.3915e-01,  2.2327e-02, -1.8866e-01, -2.2114e-02],
        [-9.2582e-02,  1.9835e-02, -2.3722e-02, -2.0248e-01, -3.7197e-02,
         -1.9551e-02, -6.0192e-02,  1.8755e-01, -4.4540e-02,  1.3113e-01,
          5.0565e-02, -1.7231e-01,  4.7966e-02,  1.6916e-01, -1.3352e-01,
         -1.3194e-01,  1.9981e-01,  1.6402e-01, -1.1388e-01,  1.2283e-01,
         -2.6114e-02, -2.0125e-01,  1.5337e-02,  6.5951e-02],
        [-6.1229e-02,  7.1011e-02, -1.7455e-01,  1.4146e-01,  1.7402e-01,
          1.1257e-01,  3.4597e-02,  6.7228e-02, -1.4769e-01, -5.1005e-02,
         -1.9487e-02, -1.1359e-01, -1.5077e-01,  1.3730e-01,  1.3853e-01,
         -1.8538e-01,  6.4955e-02,  8.3038e-02,  1.9391e-01,  1.1810e-01,
          1.8766e-01, -6.6828e-02,  1.4297e-01,  1.6603e-01],
        [-1.9276e-01, -1.6385e-01,  4.1316e-02,  1.1146e-01, -1.0141e-01,
          2.2481e-02, -2.9633e-04,  5.1665e-02, -1.0969e-01,  1.1513e-01,
          1.3574e-01, -1.4163e-01,  1.9774e-03,  5.6636e-04,  6.5547e-02,
          1.9016e-01,  5.9862e-02, -4.6381e-02,  1.8333e-01, -7.7676e-02,
         -5.9272e-02,  1.3937e-02, -1.5544e-01,  2.2212e-02],
        [-1.3849e-01,  2.0988e-02,  1.9557e-02,  2.8255e-02, -1.7214e-01,
         -1.9387e-01,  9.3921e-02,  1.7506e-01, -1.8113e-01,  7.5606e-02,
         -1.5026e-01,  1.2797e-02,  1.8991e-01,  1.5485e-01, -1.4924e-01,
          1.2627e-01,  1.0662e-01, -3.1310e-04,  1.9774e-01, -8.1073e-02,
         -4.7503e-02, -1.0317e-01,  2.9373e-02,  5.4049e-02],
        [ 1.6265e-02, -1.1485e-01, -9.1890e-02,  6.9433e-02, -1.7898e-01,
         -3.1789e-02, -4.5217e-03, -8.2704e-02,  7.4284e-02,  1.3157e-02,
          1.4331e-01, -1.8129e-02, -1.2883e-01,  1.4422e-01,  2.8506e-02,
         -5.8461e-02, -1.3454e-01,  4.7844e-02, -1.9468e-01,  5.3762e-02,
          1.0093e-01, -1.7906e-01, -1.3363e-01, -1.4675e-01],
        [ 1.7157e-01,  1.7353e-01,  1.2778e-02,  1.9163e-01, -6.8240e-02,
         -1.9817e-01,  7.1300e-02,  7.2315e-02,  2.0012e-01, -5.9082e-05,
          1.5644e-01,  1.2512e-01,  1.4774e-01, -2.0256e-01,  1.6809e-01,
         -1.7401e-01,  1.8300e-01, -8.4590e-03, -1.8090e-01,  5.6765e-02,
         -4.1549e-02, -1.8334e-01, -7.4003e-02,  2.1046e-02],
        [ 1.5898e-01, -6.2754e-02,  1.2124e-01,  2.5562e-02,  6.8806e-03,
          3.9058e-02, -1.3396e-01, -1.6967e-01, -6.4138e-02, -1.9021e-01,
         -9.5193e-02,  9.3909e-03, -1.3444e-01, -8.4670e-02, -3.6678e-02,
         -2.3516e-02, -1.1268e-01,  9.8084e-03, -2.8651e-02,  5.8379e-02,
          9.2198e-03, -1.0193e-01, -7.0277e-02, -2.3527e-03],
        [-1.2737e-01,  1.5980e-02, -1.4412e-02,  7.9196e-02,  4.8309e-02,
          1.5276e-01, -6.7290e-03, -1.5083e-01,  9.1245e-02, -1.3795e-01,
         -2.8057e-02, -6.6096e-02, -7.7454e-02, -7.5523e-02,  1.8757e-01,
          1.1685e-01,  5.6570e-02,  1.9166e-01, -1.8498e-01,  3.2939e-02,
          1.3068e-01,  1.3560e-01, -1.6245e-01,  7.2646e-02],
        [-1.1629e-01, -7.9759e-03, -4.2595e-02, -1.7044e-01, -1.9472e-01,
         -1.3429e-01,  9.2626e-02,  9.3374e-02, -1.7754e-01, -7.6657e-02,
          3.3342e-03, -1.7648e-01,  1.1501e-01,  1.8488e-01,  3.6102e-02,
         -1.5167e-01,  4.7599e-02,  7.4100e-02,  1.6163e-01, -1.0861e-01,
         -1.8288e-01,  8.9682e-02,  1.2708e-02, -6.6509e-02]], device='cuda:0',
       requires_grad=True) 

head.0.model.0.bias torch.Size([10])
Parameter containing:
tensor([-0.0855, -0.1052,  0.1652, -0.0352,  0.1472,  0.1822,  0.0259,  0.0435,
        -0.0139,  0.1402], device='cuda:0', requires_grad=True) 

head.1.model.0.weight torch.Size([10, 10])
Parameter containing:
tensor([[-0.2849,  0.1258, -0.0515,  0.1444, -0.0014, -0.1171, -0.0341,  0.1708,
         -0.2196, -0.1999],
        [-0.0708, -0.1147,  0.1242,  0.2128, -0.0339,  0.2990, -0.1321, -0.1775,
         -0.1416, -0.2179],
        [-0.2217, -0.2818, -0.2803,  0.0825,  0.1929,  0.2969,  0.2694, -0.0182,
          0.0614, -0.1892],
        [ 0.1222, -0.3032,  0.1492,  0.0580,  0.0972,  0.1158, -0.1452,  0.2714,
          0.1509,  0.2077],
        [ 0.0418,  0.1986,  0.2128,  0.1433,  0.2409, -0.0574,  0.2079,  0.0729,
          0.1903,  0.3080],
        [ 0.0716, -0.1174, -0.0315,  0.0890,  0.0533, -0.0864,  0.2478,  0.1900,
         -0.1964, -0.0258],
        [-0.0304, -0.1982,  0.0461, -0.0971, -0.1633, -0.1017, -0.1128,  0.3025,
          0.1213,  0.3112],
        [ 0.0867,  0.0716,  0.1300,  0.0543, -0.2482, -0.1870, -0.0766,  0.0048,
          0.1191,  0.1218],
        [ 0.2509,  0.0644, -0.1079, -0.2378, -0.2316, -0.1889,  0.0954,  0.1708,
          0.2767, -0.1000],
        [-0.0249, -0.0939, -0.0012,  0.1015, -0.0069,  0.0146,  0.0401,  0.1178,
         -0.0959, -0.1886]], device='cuda:0', requires_grad=True) 

head.1.model.0.bias torch.Size([10])
Parameter containing:
tensor([ 0.0746, -0.0374, -0.1433,  0.1328,  0.0029, -0.0460, -0.1531, -0.0416,
        -0.2689,  0.0719], device='cuda:0', requires_grad=True) 

head.2.model.0.weight torch.Size([1, 10])
Parameter containing:
tensor([[ 0.0047,  0.1919,  0.0204,  0.0253,  0.0861,  0.2406, -0.1494,  0.1888,
          0.0773, -0.2110]], device='cuda:0', requires_grad=True) 

head.2.model.0.bias torch.Size([1])
Parameter containing:
tensor([0.1101], device='cuda:0', requires_grad=True) 



#### TRAINING/VALIDATION ####
Epoch 2, loss = 0.4625
Mean test/val loss: 0.4687

Epoch 4, loss = 0.3782
Mean test/val loss: 0.3950

Epoch 6, loss = 0.3660
Mean test/val loss: 0.3842

Epoch 8, loss = 0.3588
Mean test/val loss: 0.3780

Epoch 10, loss = 0.3553
Mean test/val loss: 0.3748

Epoch 12, loss = 0.3524
Mean test/val loss: 0.3714

Epoch 14, loss = 0.3489
Mean test/val loss: 0.3673

Epoch 16, loss = 0.3435
Mean test/val loss: 0.3616

Epoch 18, loss = 0.3358
Mean test/val loss: 0.3507

Epoch 20, loss = 0.3268
Mean test/val loss: 0.3404

Epoch 22, loss = 0.3149
Mean test/val loss: 0.3252

Epoch 24, loss = 0.2999
Mean test/val loss: 0.3072

Epoch 26, loss = 0.2825
Mean test/val loss: 0.2873

Epoch 28, loss = 0.2664
Mean test/val loss: 0.2717

Epoch 30, loss = 0.2572
Mean test/val loss: 0.2625

Epoch 32, loss = 0.2514
Mean test/val loss: 0.2573

Epoch 34, loss = 0.2480
Mean test/val loss: 0.2544

Epoch 36, loss = 0.2457
Mean test/val loss: 0.2527

Epoch 38, loss = 0.2439
Mean test/val loss: 0.2510

Epoch 40, loss = 0.2425
Mean test/val loss: 0.2497

Epoch 42, loss = 0.2411
Mean test/val loss: 0.2493

Epoch 44, loss = 0.2401
Mean test/val loss: 0.2477

Epoch 46, loss = 0.2390
Mean test/val loss: 0.2465

Epoch 48, loss = 0.2379
Mean test/val loss: 0.2467

Epoch 50, loss = 0.2368
Mean test/val loss: 0.2452

Epoch 52, loss = 0.2360
Mean test/val loss: 0.2462

Epoch 54, loss = 0.2349
Mean test/val loss: 0.2434

Epoch 56, loss = 0.2340
Mean test/val loss: 0.2427

Epoch 58, loss = 0.2332
Mean test/val loss: 0.2426

Epoch 60, loss = 0.2325
Mean test/val loss: 0.2421

Epoch 62, loss = 0.2316
Mean test/val loss: 0.2433

Epoch 64, loss = 0.2309
Mean test/val loss: 0.2406

Epoch 66, loss = 0.2300
Mean test/val loss: 0.2394

Epoch 68, loss = 0.2294
Mean test/val loss: 0.2392

Epoch 70, loss = 0.2286
Mean test/val loss: 0.2386

Epoch 72, loss = 0.2278
Mean test/val loss: 0.2379

Epoch 74, loss = 0.2275
Mean test/val loss: 0.2371

Epoch 76, loss = 0.2263
Mean test/val loss: 0.2369

Epoch 78, loss = 0.2257
Mean test/val loss: 0.2355

Epoch 80, loss = 0.2251
Mean test/val loss: 0.2350

Epoch 82, loss = 0.2242
Mean test/val loss: 0.2346

Epoch 84, loss = 0.2236
Mean test/val loss: 0.2335

Epoch 86, loss = 0.2229
Mean test/val loss: 0.2334

Epoch 88, loss = 0.2220
Mean test/val loss: 0.2320

Epoch 90, loss = 0.2214
Mean test/val loss: 0.2317

Epoch 92, loss = 0.2206
Mean test/val loss: 0.2309

Epoch 94, loss = 0.2198
Mean test/val loss: 0.2298

Epoch 96, loss = 0.2191
Mean test/val loss: 0.2289

Epoch 98, loss = 0.2182
Mean test/val loss: 0.2279

Epoch 100, loss = 0.2176
Mean test/val loss: 0.2275

#### FINAL PARAMETERS ####
act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.3502], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.4386], device='cuda:0') 

inner_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.5275], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0755], device='cuda:0') 

out_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.6221], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0268], device='cuda:0') 

head_act.weight 1 torch.Size([1])
Parameter containing:
tensor([0.4122], device='cuda:0', requires_grad=True) 
grad:  tensor([0.0071], device='cuda:0') 

model.nns.0.lin_pos_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.0344, -0.3185, -0.2218],
        [-0.1185,  0.2659, -0.4451],
        [-0.2552, -0.3710,  0.1591],
        [-0.2262,  0.0359, -0.5607],
        [-0.4345, -0.1104, -0.1410],
        [-0.4079,  0.6723, -0.2065],
        [ 0.5399,  0.6553, -0.6268],
        [ 0.5012, -0.2943, -0.1546]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0203, -0.0033,  0.0176],
        [ 0.0062,  0.0022,  0.0030],
        [-0.0391, -0.0160, -0.0379],
        [ 0.0028, -0.0015,  0.0052],
        [ 0.0124, -0.0060,  0.0146],
        [ 0.0105, -0.0001,  0.0110],
        [ 0.0434,  0.0066,  0.0404],
        [-0.0372, -0.0086, -0.0310]], device='cuda:0') 

model.nns.0.lin_pos_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[-0.7405, -0.9436, -0.0682],
        [-0.2525,  0.3162, -0.7336],
        [ 0.4793, -0.9345, -0.0450],
        [ 0.1003,  0.1690,  0.3461],
        [ 0.4051, -0.8150,  0.0261],
        [-0.1464,  0.2785, -0.5719],
        [ 0.5102, -0.6343,  0.3274],
        [ 0.3756,  0.3425, -0.1785]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0101, -0.0105,  0.0090],
        [ 0.0067, -0.0032,  0.0031],
        [-0.0367, -0.0016, -0.0348],
        [ 0.0031,  0.0011,  0.0047],
        [ 0.0063,  0.0008,  0.0073],
        [ 0.0086, -0.0002,  0.0085],
        [ 0.0298,  0.0083,  0.0248],
        [-0.0263, -0.0019, -0.0188]], device='cuda:0') 

model.nns.0.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.6610,  0.2423,  0.1858, -0.5110,  0.3859, -0.0608, -0.1442,  0.4868],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0347,  0.0027, -0.0882,  0.0104,  0.0281,  0.0226,  0.0927, -0.0671],
       device='cuda:0') 

model.nns.0.lin_neg_l.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.1484, -0.2466, -0.4864],
        [-0.0360,  0.2147, -0.1835],
        [-0.3653, -0.3373, -0.5133],
        [ 0.3322,  0.9134, -0.5852],
        [ 0.0037, -0.0225,  0.0599],
        [-0.1467,  0.3444,  0.4406],
        [ 0.4707, -0.4384,  0.1748],
        [-0.0640, -0.2552, -0.2222]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 1.8775e-02,  9.0322e-03,  1.7730e-02],
        [ 6.7791e-03,  2.0679e-03,  7.1176e-03],
        [ 1.4169e-02,  4.9367e-03,  1.3670e-02],
        [-4.9492e-03, -1.7148e-03, -5.3536e-03],
        [ 4.1058e-03,  1.2638e-03,  4.1096e-03],
        [-3.0324e-02, -1.2104e-02, -2.9019e-02],
        [ 1.6406e-02,  1.4572e-02,  1.2268e-02],
        [ 1.0257e-03,  9.4024e-05,  9.9325e-04]], device='cuda:0') 

model.nns.0.lin_neg_r.weight 24 torch.Size([8, 3])
Parameter containing:
tensor([[ 0.7622,  0.2705,  0.5385],
        [-0.1544,  0.0095, -0.1750],
        [ 0.1430,  0.0803, -0.6120],
        [-0.0604, -0.0966,  0.4353],
        [-0.2383, -0.2631, -0.7190],
        [-0.5796, -0.0485,  0.1459],
        [ 0.3571,  1.3331, -0.6872],
        [-0.4811, -0.3313,  0.3067]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0079,  0.0007,  0.0103],
        [ 0.0071,  0.0012,  0.0082],
        [ 0.0127,  0.0037,  0.0148],
        [-0.0058, -0.0028, -0.0074],
        [ 0.0048,  0.0012,  0.0053],
        [-0.0229, -0.0057, -0.0281],
        [ 0.0201, -0.0064,  0.0227],
        [ 0.0013,  0.0011,  0.0015]], device='cuda:0') 

model.nns.0.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.0501, -0.1638,  0.2134, -0.2002, -0.4630,  0.4663, -0.1302, -0.1258],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0395,  0.0171,  0.0329, -0.0148,  0.0099, -0.0690,  0.0346,  0.0027],
       device='cuda:0') 

model.nns.2.lin_pos_l.weight 128 torch.Size([8, 16])
Parameter containing:
tensor([[ 0.3144,  0.0054,  0.3802,  0.0972,  0.1974,  0.1237, -0.0162, -0.1173,
         -0.1011,  0.2119, -0.0409, -0.4335, -0.1649, -0.0374, -0.9798,  0.0272],
        [ 0.7310, -0.2276,  0.9090,  0.1317,  0.4513, -0.1686,  0.3714, -0.1314,
         -0.3267, -0.1061,  0.2472, -0.7784,  0.2882,  0.1596, -0.7173,  0.2985],
        [-0.1880, -0.0349, -0.3318,  0.2617, -0.4779,  0.1527, -0.5487,  0.1488,
          0.2722,  0.0198,  0.2340,  0.2923,  0.1526, -0.3375,  0.2575,  0.0890],
        [ 0.3423,  0.1889,  0.0087,  0.2345,  0.1131, -0.0557, -0.2010, -0.0430,
          0.0544,  0.0817, -0.1486, -0.0562, -0.0151,  0.2308, -0.9485,  0.0463],
        [-0.1542, -0.0675,  0.2367,  0.2420,  0.2231,  0.2165,  0.1575,  0.1847,
          0.1225,  0.2065, -0.2158,  0.1086,  0.1638, -0.0794, -0.5372, -0.1730],
        [ 0.0960, -0.2735,  0.3367,  0.1240, -0.0290, -0.0344,  0.1536, -0.0129,
         -0.1035, -0.1910,  0.1667, -0.1198,  0.1633, -0.2222, -0.7042,  0.1170],
        [ 0.3301,  0.3790,  0.5000,  0.1378,  0.4363,  0.1996,  0.5515, -0.1083,
         -0.5318, -0.1328,  0.1841, -0.6485, -0.1714,  0.3616, -0.4994,  0.2395],
        [-0.3165, -0.1640, -0.0028,  0.2257,  0.0131,  0.0229,  0.1071,  0.3106,
         -0.1204, -0.1271,  0.0804,  0.1190, -0.1602,  0.1776, -0.1194,  0.1067]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-1.3518e-03,  3.4030e-03, -5.9538e-03,  6.8740e-03, -7.7690e-03,
          4.7918e-03, -1.4374e-02, -2.4057e-02, -1.6892e-02,  4.0513e-03,
          5.9789e-03, -5.9717e-03,  1.0447e-02, -1.4120e-02,  1.9413e-03,
          4.7495e-03],
        [-3.7792e-03,  2.1888e-03, -5.7052e-03,  1.3589e-03, -6.1204e-03,
          1.9378e-03, -3.9415e-03, -8.5444e-04, -4.2805e-04,  6.2075e-04,
          8.3326e-04,  1.0590e-03,  1.2549e-03, -3.5956e-03,  7.4203e-03,
          6.8692e-05],
        [ 1.3625e-03, -1.2372e-03,  2.1632e-03, -1.7436e-03,  2.5165e-03,
         -1.5385e-03,  2.0340e-03,  5.0083e-03,  3.2319e-03, -9.5136e-04,
         -1.1539e-03,  3.1179e-04, -2.3473e-03,  3.7732e-03, -1.2512e-03,
         -8.9861e-04],
        [ 3.8924e-03,  7.1940e-04, -1.0232e-04,  4.8279e-03, -1.5409e-03,
          2.1829e-03, -1.3372e-02, -2.2454e-02, -1.6839e-02,  3.1613e-03,
          5.5319e-03, -9.6254e-03,  8.8513e-03, -9.1922e-03, -1.4545e-03,
          4.3039e-03],
        [ 3.4678e-03, -2.1505e-03,  3.1346e-03, -2.2660e-03,  3.0725e-03,
         -2.6232e-03, -2.7610e-03,  4.6532e-03,  1.8594e-03, -1.1528e-03,
         -3.4781e-04, -4.0127e-03, -2.2265e-03,  4.7045e-03,  1.8090e-03,
         -8.2088e-04],
        [-4.0353e-03,  6.7840e-03, -9.8135e-03,  1.0942e-02, -1.1668e-02,
          9.0662e-03, -1.3603e-02, -3.5909e-02, -2.4195e-02,  6.4400e-03,
          7.8821e-03, -2.6950e-03,  1.5692e-02, -2.2132e-02, -1.8501e-03,
          6.9817e-03],
        [-1.6090e-03,  2.0423e-04, -2.5170e-03, -2.8697e-03, -2.1946e-03,
         -1.3347e-03, -8.4285e-04,  1.3514e-02,  8.7905e-03, -1.8484e-03,
         -1.7181e-03,  1.4221e-03, -4.7237e-03,  4.7940e-03,  9.2335e-03,
         -2.4700e-03],
        [ 6.9161e-03, -3.0905e-03,  6.0120e-03, -7.8384e-04,  5.6346e-03,
         -2.6097e-03, -5.9387e-03, -5.0506e-03, -4.9385e-03,  3.2563e-05,
          1.2952e-03, -6.6455e-03,  8.2109e-04,  2.8098e-03, -6.1267e-03,
          1.2751e-03]], device='cuda:0') 

model.nns.2.lin_pos_r.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[-0.4403, -0.2049,  0.4775, -0.1244,  0.0449, -0.1406, -0.4145,  0.4610],
        [-0.8528, -0.5757, -0.1926, -0.1159, -0.5918, -0.3767, -0.4051, -0.1247],
        [ 0.0479,  0.5877,  0.0722,  0.1068, -0.1597,  0.1059,  0.0618, -0.2068],
        [-0.4405, -0.0694,  0.2183,  0.0709,  0.1606, -0.2799,  0.0394,  0.1857],
        [-0.4438, -0.4311,  0.1874,  0.1617, -0.2274,  0.2149, -0.2865,  0.3419],
        [-0.2953, -0.4404,  0.1201, -0.1559, -0.4438, -0.2563, -0.6570,  0.3938],
        [-0.6747, -0.0830, -0.5508,  0.2572, -0.3960, -0.6176, -0.0745,  0.4728],
        [ 0.2130, -0.1438, -0.1999,  0.0998,  0.1063,  0.1872,  0.2137, -0.0056]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-1.8076e-02,  3.4786e-03, -1.2719e-02,  9.2906e-03, -1.2050e-02,
          5.4053e-03, -5.4153e-03, -2.1077e-02],
        [-7.7444e-03,  2.9291e-03, -6.7598e-03,  2.3505e-03, -5.1405e-03,
          3.0170e-03,  3.9436e-03, -2.3960e-03],
        [ 2.5090e-03, -1.2394e-03,  2.5658e-03, -1.9844e-03,  2.4642e-03,
         -1.6449e-03,  1.7096e-04,  5.3704e-03],
        [-8.9770e-03,  1.0762e-03, -6.8087e-03,  6.5509e-03, -7.0557e-03,
          2.5350e-03, -1.0494e-02, -1.8302e-02],
        [-5.7716e-03, -2.6554e-03,  2.6342e-04, -8.3515e-04,  1.0850e-03,
         -2.7940e-03,  4.8470e-04,  7.6963e-03],
        [-9.1358e-03,  6.7816e-03, -1.1373e-02,  1.1834e-02, -1.1771e-02,
          9.4609e-03, -7.7177e-03, -3.6416e-02],
        [-8.2649e-03,  1.1720e-03, -5.0156e-03, -1.5247e-03, -2.3866e-03,
         -1.1185e-05,  7.1333e-03,  1.3092e-02],
        [-3.6023e-04, -2.5169e-03,  1.5869e-03, -1.1847e-04,  9.2438e-04,
         -2.3478e-03, -8.9862e-03, -5.0889e-04]], device='cuda:0') 

model.nns.2.lin_pos_r.bias 8 torch.Size([8])
Parameter containing:
tensor([ 0.2335,  0.3177, -0.1410,  0.2254,  0.1867,  0.2430, -0.0568, -0.1635],
       device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0315, -0.0057,  0.0078, -0.0233,  0.0094, -0.0493,  0.0137,  0.0018],
       device='cuda:0') 

model.nns.2.lin_neg_l.weight 128 torch.Size([8, 16])
Parameter containing:
tensor([[-0.2228,  0.1483,  0.3637, -0.3850,  0.2837, -0.1969,  0.2958,  0.0451,
         -0.2621,  0.0415, -0.2311,  0.2506, -0.2186,  0.1446,  0.0491, -0.2409],
        [ 0.0857, -0.2770, -0.3266,  0.3057, -0.1349, -0.0137, -0.1611,  0.0407,
          0.1477,  0.1175,  0.2161, -0.1428, -0.1788,  0.0040, -0.0995,  0.1122],
        [ 0.1963, -0.0063,  0.0798, -0.1630,  0.0008, -0.1622,  0.2201, -0.0752,
         -0.3727,  0.1059,  0.0413,  0.0351, -0.2135, -0.3214, -0.4267,  0.2970],
        [-0.0914,  0.1680,  0.1871, -0.2704,  0.3063, -0.0888,  0.2725,  0.0403,
          0.1031,  0.2887, -0.0039,  0.2805,  0.1294,  0.3941,  0.1543, -0.1751],
        [-0.2962,  0.1353,  0.1922, -0.2543,  0.0769, -0.0888,  0.3854,  0.1129,
         -0.1675,  0.0397, -0.0821,  0.0150,  0.1808,  0.2278,  0.1845, -0.0703],
        [ 0.0605,  0.0911, -0.1114, -0.4875,  0.0152, -0.1994,  0.0228,  0.1291,
          0.1718,  0.1659,  0.1365, -0.0714, -0.0622,  0.1207, -0.0489, -0.0165],
        [-0.2940,  0.1595,  0.0506, -0.3520,  0.3569, -0.1821,  0.1136,  0.1267,
         -0.0765,  0.1292,  0.1885, -0.0171, -0.1798, -0.0022, -0.0258, -0.1815],
        [-0.1539,  0.2176,  0.1971,  0.5802, -0.1349, -0.0906, -0.0447, -0.1026,
         -0.1383,  0.3386, -0.1652, -0.1413, -0.1060,  0.3477,  0.2309, -0.1511]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 1.0297e-02, -2.8654e-03, -3.3095e-03,  2.7412e-04, -7.0686e-03,
          1.0581e-02, -2.2583e-03, -2.4895e-03,  2.3616e-03, -2.7485e-03,
          4.0336e-03, -5.2614e-03,  4.1849e-03, -4.0954e-03,  4.4079e-04,
          1.6371e-02],
        [-4.9037e-02,  1.3349e-02,  1.5021e-02, -5.6588e-04,  3.2326e-02,
         -4.6088e-02, -2.8164e-03,  1.3017e-02, -9.6528e-03,  1.4205e-02,
         -1.9905e-02,  2.3023e-02, -2.1888e-02,  1.9562e-02, -1.2759e-02,
         -7.4494e-02],
        [-3.2059e-02,  8.3909e-03,  9.4016e-03, -5.6806e-04,  1.9772e-02,
         -2.5747e-02, -1.6949e-02,  9.8664e-03, -1.9689e-03,  7.5732e-03,
         -8.7627e-03,  1.3514e-02, -1.0436e-02,  1.0920e-02, -1.3877e-02,
         -4.8414e-02],
        [ 1.1100e-02, -3.0099e-03, -3.4278e-03,  2.7099e-04, -7.2501e-03,
          1.0222e-02,  2.2362e-03, -3.1654e-03,  1.7281e-03, -2.8557e-03,
          3.7656e-03, -5.1858e-03,  4.2805e-03, -4.1294e-03,  3.4742e-03,
          1.7110e-02],
        [ 3.0903e-03, -9.2343e-04, -1.0218e-03, -8.4554e-06, -2.2884e-03,
          3.7128e-03, -1.2253e-03, -7.6495e-04,  1.2615e-03, -9.1867e-04,
          1.5314e-03, -1.7887e-03,  1.6713e-03, -1.3846e-03,  1.8332e-04,
          5.1324e-03],
        [ 9.9395e-03, -2.7622e-03, -3.1519e-03,  1.9373e-04, -6.7655e-03,
          1.0043e-02, -1.5774e-03, -2.5114e-03,  2.6642e-03, -3.1130e-03,
          4.6544e-03, -4.9224e-03,  5.0810e-03, -4.2158e-03,  2.3420e-03,
          1.5099e-02],
        [ 1.4186e-02, -3.8306e-03, -4.2798e-03,  1.2562e-04, -9.2194e-03,
          1.2901e-02,  2.3286e-03, -3.8761e-03,  2.3223e-03, -3.8678e-03,
          5.2701e-03, -6.5152e-03,  5.8478e-03, -5.4388e-03,  3.9122e-03,
          2.1653e-02],
        [ 1.8028e-03, -4.8372e-04, -5.4203e-04,  4.4747e-05, -1.1357e-03,
          1.5213e-03,  1.3694e-03, -6.1960e-04,  2.1151e-05, -2.6666e-04,
          2.0149e-04, -8.1871e-04,  2.9842e-04, -5.1799e-04,  6.8262e-04,
          2.9675e-03]], device='cuda:0') 

model.nns.2.lin_neg_r.weight 64 torch.Size([8, 8])
Parameter containing:
tensor([[ 0.3644,  0.2518,  0.3580, -0.3453, -0.1850, -0.3290,  0.3578,  0.0749],
        [-0.3509, -0.0106, -0.2912, -0.0229, -0.0905,  0.4092,  0.2331, -0.0942],
        [-0.4712,  0.0063,  0.0092,  0.1188,  0.1932,  0.0763,  0.0407,  0.0854],
        [-0.1752,  0.3183,  0.4973,  0.2517,  0.2259, -0.2537,  0.1874,  0.3598],
        [-0.5886,  0.0903,  0.0178, -0.3439,  0.3346, -0.1116, -0.0088,  0.2019],
        [-0.0539, -0.2843,  0.3350, -0.6706, -0.0230, -0.0251, -0.0284, -0.3662],
        [ 0.3392, -0.1576, -0.0712,  0.0923, -0.1811, -0.3538, -0.1217, -0.1190],
        [-0.0519, -0.0409,  0.2699, -0.0562, -0.1661, -0.0395,  0.1805,  0.1914]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0074, -0.0026, -0.0032,  0.0009, -0.0064,  0.0119, -0.0028, -0.0023],
        [-0.0351,  0.0122,  0.0136,  0.0002,  0.0290, -0.0512, -0.0131,  0.0134],
        [-0.0230,  0.0074,  0.0092, -0.0044,  0.0177, -0.0300, -0.0071,  0.0088],
        [ 0.0111, -0.0030, -0.0035,  0.0009, -0.0073,  0.0104,  0.0017, -0.0031],
        [ 0.0052, -0.0011, -0.0012, -0.0001, -0.0028,  0.0029,  0.0002, -0.0010],
        [ 0.0076, -0.0026, -0.0028, -0.0009, -0.0061,  0.0106,  0.0022, -0.0027],
        [ 0.0103, -0.0034, -0.0040,  0.0007, -0.0083,  0.0145,  0.0037, -0.0039],
        [ 0.0034, -0.0006, -0.0008,  0.0008, -0.0016,  0.0011, -0.0001, -0.0006]],
       device='cuda:0') 

model.nns.2.lin_neg_r.bias 8 torch.Size([8])
Parameter containing:
tensor([-0.3493,  0.1291,  0.1929,  0.0979, -0.3993, -0.1286, -0.3608, -0.2402],
       device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0223, -0.1016, -0.0613,  0.0228,  0.0076,  0.0215,  0.0289,  0.0036],
       device='cuda:0') 

model.nns.4.lin_pos_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 0.0689, -0.8289,  0.2700,  0.3641,  0.0540, -0.0268, -0.8797,  0.3468,
         -0.1205, -0.0467,  0.3296, -0.1925,  0.0529,  0.2913, -0.2455, -0.1921],
        [ 0.4252,  0.8023, -0.1705, -0.1903, -0.0584,  0.1173,  0.8387, -0.5903,
          0.0619,  0.0273, -0.4038,  0.1868, -0.0246,  0.0348, -0.1278,  0.0646]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0028,  0.0146,  0.0037, -0.0041, -0.0113,  0.0045,  0.0066, -0.0077,
          0.0092, -0.0096, -0.0086,  0.0067,  0.0119,  0.0050,  0.0072,  0.0058],
        [ 0.0044, -0.0051, -0.0054,  0.0063,  0.0101,  0.0011, -0.0016,  0.0044,
         -0.0087,  0.0113,  0.0048, -0.0069, -0.0109, -0.0032, -0.0071, -0.0053]],
       device='cuda:0') 

model.nns.4.lin_pos_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[ 0.7552,  0.6761, -0.4144,  0.6370,  0.2052,  0.2438,  0.7016,  0.1906],
        [-0.5621, -0.1230, -0.1389, -0.1166, -0.4680, -0.2210, -0.4492, -0.1310]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0079,  0.0113,  0.0077, -0.0088, -0.0119, -0.0005,  0.0092, -0.0092],
        [ 0.0076, -0.0041, -0.0068,  0.0055,  0.0083,  0.0035, -0.0041,  0.0051]],
       device='cuda:0') 

model.nns.4.lin_pos_r.bias 2 torch.Size([2])
Parameter containing:
tensor([-0.0660,  0.0627], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0300,  0.0267], device='cuda:0') 

model.nns.4.lin_neg_l.weight 32 torch.Size([2, 16])
Parameter containing:
tensor([[ 4.1573e-01,  3.9422e-02,  3.7700e-01,  2.1857e-01,  3.5306e-01,
          1.3172e-01,  9.6286e-02,  1.1253e-01, -4.0678e-01, -6.1117e-01,
          1.4238e-01, -1.2349e-01,  6.7469e-02, -2.1619e-01, -1.8897e-01,
          1.4334e-01],
        [-1.7908e-01,  2.5992e-01,  3.2158e-02, -3.1274e-01, -2.6300e-01,
         -2.7409e-01, -1.4610e-01, -1.0802e-01,  1.1788e-02,  6.2340e-02,
         -1.8213e-01, -1.0735e-01, -2.0737e-01,  3.1805e-01,  2.2914e-04,
         -2.8357e-01]], device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0059,  0.0075, -0.0004, -0.0040, -0.0061, -0.0008, -0.0039, -0.0030,
          0.0125,  0.0074, -0.0049,  0.0091,  0.0080,  0.0080,  0.0053, -0.0003],
        [ 0.0508, -0.0660, -0.0096,  0.0376,  0.0570,  0.0108,  0.0369,  0.0284,
         -0.0723, -0.0238,  0.0380, -0.0591, -0.0597, -0.0397, -0.0199, -0.0079]],
       device='cuda:0') 

model.nns.4.lin_neg_r.weight 16 torch.Size([2, 8])
Parameter containing:
tensor([[ 0.1587, -0.2318,  0.1982,  0.2449,  0.4158, -0.1543,  0.3704,  0.2854],
        [-0.2673,  0.4997,  0.3105, -0.0490,  0.1616, -0.2479, -0.3971,  0.1276]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-0.0047,  0.0080,  0.0027, -0.0036, -0.0061, -0.0010, -0.0038, -0.0031],
        [ 0.0541, -0.0820, -0.0287,  0.0346,  0.0499,  0.0101,  0.0432,  0.0283]],
       device='cuda:0') 

model.nns.4.lin_neg_r.bias 2 torch.Size([2])
Parameter containing:
tensor([ 0.0346, -0.2142], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0135, -0.1330], device='cuda:0') 

head.0.model.0.weight 240 torch.Size([10, 24])
Parameter containing:
tensor([[ 0.1551, -0.2217,  0.2276,  0.2282,  0.0578, -0.1157,  0.1375,  0.0305,
         -0.1026,  0.1441, -0.0627,  0.1846,  0.0166,  0.0282,  0.1594, -0.0399,
         -0.3176,  0.1417,  0.0133, -0.1019,  0.3477, -0.1251, -0.2186,  0.0606],
        [-0.0321,  0.0075, -0.0344, -0.1147, -0.1428,  0.1029, -0.1022,  0.1825,
         -0.2708,  0.2839, -0.0417, -0.0067,  0.2085,  0.0194, -0.1315, -0.1940,
         -0.1212,  0.3998, -0.0548, -0.0449,  0.1709, -0.3047, -0.0420,  0.1710],
        [ 0.0137,  0.0139, -0.1101,  0.1585,  0.2235,  0.0721,  0.0934,  0.0505,
         -0.2611, -0.0163, -0.2643,  0.1771, -0.1332,  0.1421,  0.3048, -0.4009,
         -0.1400,  0.2116,  0.1182,  0.1067,  0.3737, -0.1659,  0.1423,  0.2113],
        [-0.2570, -0.0950,  0.2223,  0.0243, -0.2144,  0.1098,  0.1728, -0.0619,
         -0.3605,  0.3243,  0.0704, -0.0118,  0.1627, -0.1778,  0.0782,  0.1073,
         -0.0148, -0.0375, -0.0207,  0.0239,  0.0228,  0.0105, -0.0442, -0.0226],
        [-0.0737,  0.0019,  0.0763, -0.0082, -0.1811, -0.1672,  0.1359,  0.1088,
         -0.3885,  0.2724, -0.4069,  0.2220,  0.3369, -0.0394,  0.0349,  0.0231,
         -0.1607,  0.1849,  0.1276, -0.0753,  0.1137, -0.1271,  0.0519,  0.0289],
        [-0.0130,  0.0263, -0.1662, -0.0006, -0.1253,  0.0316, -0.0150, -0.1775,
          0.3267, -0.1679,  0.1983, -0.2078, -0.2720,  0.2592, -0.0921,  0.1999,
         -0.0158, -0.1411, -0.0980,  0.0667, -0.1344,  0.1155, -0.1258, -0.2575],
        [ 0.2242,  0.1656,  0.0717,  0.1973, -0.0046, -0.2247,  0.1331,  0.0624,
          0.1452, -0.0306, -0.0817,  0.4145,  0.1110, -0.1335,  0.3225, -0.3898,
          0.0032,  0.0903, -0.2392,  0.0540,  0.1533, -0.2975, -0.0826,  0.0795],
        [ 0.1426,  0.0405, -0.1160,  0.1084,  0.1324,  0.0308, -0.3329, -0.0682,
          0.3019, -0.5144, -0.1115, -0.0915, -0.4165,  0.2050, -0.0610,  0.1103,
         -0.0088, -0.1148,  0.2453, -0.0893, -0.1510,  0.0575, -0.2452,  0.0546],
        [-0.0789,  0.0075, -0.0193,  0.1478,  0.0505,  0.1780, -0.0222, -0.1058,
         -0.0964, -0.0150, -0.2635,  0.2228,  0.0187, -0.1659,  0.3613, -0.1066,
         -0.1653,  0.3508, -0.1505, -0.0682,  0.3533, -0.0105, -0.2505,  0.1970],
        [-0.1627,  0.0323,  0.1121, -0.2235, -0.2879, -0.0613,  0.2373,  0.0075,
         -0.3695,  0.0418, -0.1222,  0.0304,  0.2109,  0.0972,  0.1159, -0.3082,
         -0.0728,  0.1465, -0.0094, -0.0437, -0.0440,  0.0169,  0.0942, -0.0857]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[-2.6421e-02,  1.0319e-03,  2.0653e-02, -2.5075e-02, -2.5545e-02,
          6.2329e-04,  2.0746e-02, -2.4618e-02, -2.5595e-02, -8.2091e-04,
          1.9745e-02, -2.2316e-02, -1.0563e-03,  3.0427e-03, -2.8499e-03,
          1.7135e-03,  2.0285e-02, -3.0668e-03, -1.2124e-02,  1.5835e-02,
         -2.2372e-02,  1.8741e-03,  1.5589e-02, -1.9476e-02],
        [-1.0624e-02,  1.0725e-03,  8.1701e-03, -1.0563e-02, -7.9783e-03,
         -1.1134e-03,  8.8916e-03, -1.0099e-02, -8.2271e-03,  2.4824e-04,
          6.0122e-03, -7.1687e-03, -1.7212e-03,  1.2954e-03, -1.9542e-04,
         -4.6851e-04,  8.6781e-03, -1.7046e-03, -5.0493e-03,  6.9619e-03,
         -8.7653e-03,  1.0835e-03,  6.1932e-03, -8.1592e-03],
        [-1.7363e-02,  1.6937e-04,  1.4669e-02, -1.7664e-02, -1.7130e-02,
          2.6938e-04,  1.4642e-02, -1.7389e-02, -1.6386e-02, -1.1733e-03,
          1.3652e-02, -1.5154e-02, -1.2025e-03,  2.4066e-03, -2.0315e-03,
          1.0723e-03,  1.3824e-02, -1.9766e-03, -8.5598e-03,  1.1186e-02,
         -1.4915e-02,  8.9030e-04,  1.1099e-02, -1.3781e-02],
        [-2.7489e-03, -2.8492e-05,  2.4923e-03, -3.0170e-03, -3.0188e-03,
          2.1234e-04,  2.4298e-03, -2.9813e-03, -2.9385e-03, -1.9457e-04,
          2.4863e-03, -2.8057e-03, -3.1460e-05,  4.1919e-04, -4.9875e-04,
          3.5163e-04,  2.2724e-03, -3.4636e-04, -1.4216e-03,  1.8967e-03,
         -2.5475e-03,  1.5406e-04,  1.9339e-03, -2.4255e-03],
        [-2.2260e-02,  2.2648e-05,  2.0233e-02, -2.4822e-02, -2.2438e-02,
          1.0309e-03,  1.9913e-02, -2.4498e-02, -1.8500e-02, -2.4631e-03,
          1.7726e-02, -1.9155e-02, -1.6779e-03,  3.3819e-03, -2.8599e-03,
          1.3499e-03,  1.7153e-02, -2.1436e-03, -1.1819e-02,  1.5498e-02,
         -1.8387e-02,  4.5032e-04,  1.5607e-02, -1.9449e-02],
        [ 1.9529e-02, -1.0030e-03, -1.4026e-02,  1.6858e-02,  1.8490e-02,
         -7.8442e-04, -1.4083e-02,  1.6988e-02,  2.1378e-02,  5.7753e-05,
         -1.4560e-02,  1.6467e-02, -3.8365e-05, -2.1790e-03,  2.5053e-03,
         -1.6927e-03, -1.5150e-02,  2.6150e-03,  7.9543e-03, -1.0549e-02,
          1.7544e-02, -1.8959e-03, -1.0655e-02,  1.3294e-02],
        [-9.8450e-03,  2.9652e-04,  7.3561e-03, -8.6939e-03, -1.0564e-02,
          1.0244e-03,  7.1765e-03, -8.7519e-03, -1.0678e-02,  7.6926e-06,
          7.5920e-03, -8.6825e-03,  4.1989e-04,  7.6987e-04, -1.2543e-03,
          1.1050e-03,  7.0747e-03, -8.2532e-04, -4.3306e-03,  5.3904e-03,
         -8.0984e-03,  5.1437e-04,  5.5816e-03, -6.7528e-03],
        [ 1.0339e-02,  2.1235e-04, -9.9422e-03,  1.2569e-02,  1.1680e-02,
         -8.4721e-04, -9.6811e-03,  1.2384e-02,  1.2304e-02,  9.0276e-04,
         -1.0354e-02,  1.2019e-02,  1.0616e-04, -2.1908e-03,  2.5715e-03,
         -1.7070e-03, -9.2955e-03,  1.8931e-03,  5.2821e-03, -7.7997e-03,
          1.0884e-02, -9.0191e-04, -7.9283e-03,  1.0422e-02],
        [-3.4691e-02,  1.9641e-03,  2.6173e-02, -3.2445e-02, -3.3850e-02,
          1.8781e-03,  2.6189e-02, -3.1979e-02, -3.2562e-02, -8.0760e-05,
          2.3920e-02, -2.7705e-02, -1.0916e-04,  2.8868e-03, -3.0814e-03,
          2.0321e-03,  2.4226e-02, -3.0247e-03, -1.5626e-02,  2.0145e-02,
         -2.7388e-02,  1.8246e-03,  1.9953e-02, -2.4921e-02],
        [-8.0178e-03,  6.8883e-05,  6.8992e-03, -8.3886e-03, -8.0047e-03,
          1.9114e-04,  6.8693e-03, -8.2657e-03, -7.9248e-03, -5.2692e-04,
          6.5160e-03, -7.3225e-03, -4.6778e-04,  1.2005e-03, -1.0943e-03,
          6.1096e-04,  6.5045e-03, -1.0154e-03, -3.9492e-03,  5.2897e-03,
         -7.1291e-03,  4.6585e-04,  5.2656e-03, -6.6203e-03]], device='cuda:0') 

head.0.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([-0.1606, -0.1531,  0.1194, -0.1656,  0.1215,  0.1101, -0.0742,  0.0481,
        -0.0771, -0.0125], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0291, -0.0122, -0.0206, -0.0033, -0.0298,  0.0195, -0.0106,  0.0126,
        -0.0401, -0.0096], device='cuda:0') 

head.1.model.0.weight 100 torch.Size([10, 10])
Parameter containing:
tensor([[-4.0502e-01, -4.4810e-02, -2.5999e-01, -2.6927e-02, -4.3275e-01,
          1.7080e-01, -5.6750e-02,  3.8649e-01, -3.8296e-01, -4.6911e-01],
        [-3.9495e-02, -9.3162e-02,  1.8585e-01,  2.9376e-01,  1.0743e-01,
          1.3139e-01, -1.4413e-01, -2.9117e-01, -1.9566e-02, -6.4739e-02],
        [-4.0690e-01, -2.0182e-01, -3.9175e-01,  1.4793e-01,  1.3115e-01,
          3.7049e-01,  1.4463e-01, -4.4425e-02, -1.1237e-02, -1.8223e-01],
        [-3.4150e-03, -2.9148e-01,  8.4733e-02,  1.5031e-01,  1.8937e-01,
          1.4375e-01, -2.2175e-01,  1.7931e-01,  1.3835e-01,  2.7486e-01],
        [ 1.4131e-01,  5.9805e-02,  3.2933e-01,  4.4170e-02,  3.7202e-01,
         -5.1731e-02,  2.9548e-01,  1.5084e-01,  3.0818e-01,  2.6233e-01],
        [ 1.3461e-01, -9.2974e-02,  2.8561e-02,  1.3105e-01,  2.0001e-01,
         -2.5008e-01,  2.6080e-01,  1.2956e-01, -4.9603e-02,  6.1963e-02],
        [-1.1593e-01, -4.3040e-01, -4.2394e-02, -2.7594e-01, -5.8037e-01,
          1.6700e-01, -9.9960e-02,  4.9992e-01, -4.1446e-02,  7.2664e-02],
        [ 1.4111e-01,  1.2336e-01,  2.0772e-01,  1.1105e-01,  4.1155e-05,
         -4.7438e-01, -1.0514e-01, -7.0798e-02,  3.0636e-01,  2.2318e-01],
        [ 3.7080e-01,  7.8180e-02,  2.7436e-02, -2.0541e-01, -1.9399e-03,
         -3.9105e-01,  1.4986e-01,  1.1688e-01,  4.9311e-01, -1.5657e-02],
        [-1.3433e-01, -3.0570e-01, -1.0670e-01, -3.1565e-02, -3.5479e-01,
          2.2952e-01,  2.8189e-02,  2.6882e-01, -2.6586e-01, -3.8131e-01]],
       device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0100,  0.0017,  0.0123, -0.0051,  0.0035, -0.0032,  0.0108,  0.0099,
          0.0112, -0.0046],
        [-0.0061, -0.0010, -0.0081,  0.0036, -0.0025,  0.0016, -0.0063, -0.0074,
         -0.0068,  0.0032],
        [ 0.0028,  0.0006,  0.0037, -0.0015,  0.0013, -0.0010,  0.0028,  0.0030,
          0.0032, -0.0014],
        [-0.0016, -0.0003, -0.0021,  0.0009, -0.0006,  0.0004, -0.0016, -0.0019,
         -0.0018,  0.0008],
        [-0.0107, -0.0016, -0.0143,  0.0066, -0.0041,  0.0024, -0.0111, -0.0139,
         -0.0119,  0.0060],
        [-0.0184, -0.0016, -0.0247,  0.0119, -0.0062,  0.0036, -0.0201, -0.0242,
         -0.0197,  0.0103],
        [ 0.0148,  0.0014,  0.0203, -0.0087,  0.0051, -0.0040,  0.0172,  0.0180,
          0.0169, -0.0076],
        [-0.0216, -0.0039, -0.0295,  0.0131, -0.0100,  0.0052, -0.0208, -0.0277,
         -0.0239,  0.0119],
        [-0.0233, -0.0028, -0.0311,  0.0149, -0.0083,  0.0046, -0.0245, -0.0308,
         -0.0249,  0.0132],
        [ 0.0177,  0.0022,  0.0244, -0.0106,  0.0065, -0.0048,  0.0198,  0.0223,
          0.0205, -0.0094]], device='cuda:0') 

head.1.model.0.bias 10 torch.Size([10])
Parameter containing:
tensor([ 0.0075, -0.1610, -0.1146,  0.2477, -0.0539, -0.2123, -0.0580, -0.1601,
        -0.3688,  0.1491], device='cuda:0', requires_grad=True) 
grad:  tensor([ 0.0090, -0.0075,  0.0032, -0.0020, -0.0137, -0.0228,  0.0159, -0.0307,
        -0.0307,  0.0210], device='cuda:0') 

head.2.model.0.weight 10 torch.Size([1, 10])
Parameter containing:
tensor([[-0.3987,  0.2908, -0.1349,  0.0314,  0.2106,  0.3694, -0.3790,  0.4878,
          0.4434, -0.4485]], device='cuda:0', requires_grad=True) 
grad:  tensor([[ 0.0205,  0.0139,  0.0222, -0.0162, -0.0684, -0.0150, -0.0019, -0.0128,
         -0.0518,  0.0019]], device='cuda:0') 

head.2.model.0.bias 1 torch.Size([1])
Parameter containing:
tensor([0.0077], device='cuda:0', requires_grad=True) 
grad:  tensor([-0.0629], device='cuda:0') 


Total parameters: 987
Total time: 28548.20821428299
Final val loss: 0.22750490248203278

#### Plotting Script ####
Prediction Results:
results/ContactGNNEnergy/30/sample1230
results/ContactGNNEnergy/30/sample1761
results/ContactGNNEnergy/30/sample40
results/ContactGNNEnergy/30/sample1751
results/ContactGNNEnergy/30/sample1718
Loss: 0.21015002131462096 +- 0.18801814300934105

