#### ARCHITECTURE ####
Node Encoder:
 None 

Linear:
 Linear(in_features=8, out_features=64, bias=True) 

Edge Encoder:
 None 

Model:
 Sequential(
  (0): WeightedGATv2Conv(64, 8, heads=8)
  (1): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (2): WeightedGATv2Conv(64, 8, heads=8)
  (3): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (4): WeightedGATv2Conv(64, 8, heads=8)
  (5): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
  (6): WeightedGATv2Conv(64, 8, heads=8)
  (7): MLP(
  (model): Sequential(
    (0): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=64, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (1): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=1000, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (2): LinearBlock(
      (model): Sequential(
        (0): Linear(in_features=1000, out_features=64, bias=True)
        (1): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
  )
)
) 

Head L:
 None 
 Bilinear 

Head D:
 None 
 Sequential(
  (0): MLP(
    (model): Sequential(
      (0): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=16896, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (1): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (2): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (3): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (4): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (5): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=1000, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
      (6): LinearBlock(
        (model): Sequential(
          (0): Linear(in_features=1000, out_features=512, bias=True)
          (1): LeakyReLU(negative_slope=0.2, inplace=True)
        )
      )
    )
  )
  (1): FillDiagonalsFromArray()
) 

Namespace(GNN_mode=True, transforms=[], pre_transforms=['ContactDistance', 'MeanContactDistance', 'MeanContactDistance_bonded', 'AdjPCs_8'], sparsify_threshold=None, sparsify_threshold_upper=None, top_k=None, use_node_features=False, use_edge_weights=False, use_edge_attr=True, keep_zero_edges=False, data_folder=['/project2/depablo/erschultz/dataset_04_28_23'], scratch='/scratch/midway3/erschultz', root_name='ContactGNNEnergy12', delete_root=False, toxx=False, toxx_mode='mean', y_preprocessing='sweeprand_log_inf', sweep_choices=[2, 3, 4, 5], y_zero_diag_count=0, log_preprocessing=None, output_preprocesing=None, kr=False, mean_filt=None, rescale=2, gated=False, preprocessing_norm='mean_fill', min_subtraction=True, x_reshape=True, ydtype=torch.float32, y_reshape=True, crop=None, classes=10, move_data_to_scratch=False, use_scratch_parallel=False, plaid_score_cutoff=None, split_percents=[0.9, 0.1, 0.0], split_sizes=None, random_split=True, shuffle=True, batch_size=1, num_workers=4, start_epoch=1, n_epochs=80, save_mod=5, print_mod=2, lr=0.0001, min_lr=1e-06, weight_decay=0.0, gpus=1, scheduler='MultiStepLR', milestones=[40], gamma=0.1, patience=10, loss='mse', w_reg=None, reg_lambda=0.1, autoencoder_mode=False, verbose=False, print_params=True, output_mode='energy_sym_diag', model_type='ContactGNNEnergy', id=464, pretrain_id=None, resume_training=False, k=8, m=512, seed=42, act='leaky', inner_act='leaky', out_act='leaky', training_norm=None, dropout=0.0, parameter_sharing=False, use_bias=True, input_L_to_D=True, input_L_to_D_mode='mean_dist', use_sign_net=False, use_sign_plus=True, message_passing='weighted_GAT', head_architecture='bilinear', head_architecture_2='fc-fill_512', head_hidden_sizes_list=[1000, 1000, 1000, 1000, 1000, 1000], encoder_hidden_sizes_list=None, inner_hidden_sizes_list=None, edge_encoder_hidden_sizes_list=None, update_hidden_sizes_list=[1000, 1000, 64], head_act='leaky', num_heads=8, concat_heads=True, max_diagonal=None, mlp_model_id=None, kernel_w_list=None, hidden_sizes_list=[8, 8, 8, 8], nf=None, dilation_list=None, dilation_list_trunk=None, bottleneck=None, dilation_list_head=None, down_sampling=None, plot=True, plot_predictions=True, bonded_path=None, ofile_folder='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/464', log_file_path='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/464/out.log', log_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/464/out.log' mode='a' encoding='UTF-8'>, param_file=<_io.TextIOWrapper name='/home/erschultz/sequences_to_contact_maps/results/ContactGNNEnergy/464/params.log' mode='a' encoding='UTF-8'>, split_neg_pos_edges=False, criterion=<function mse_loss at 0x7f0ca8821310>, channels=1, node_feature_size=0, input_m=256, edge_transforms=['ContactDistance(norm=False)', 'MeanContactDistance(norm=False)', 'MeanContactDistance(norm=False, bonded=True)'], node_transforms=['AdjPCs(k=8, normalize=False, sign_net=True)'], edge_dim=3, transforms_processed=None, diag=True, pre_transforms_processed=Compose([
  ContactDistance(norm=False),
  MeanContactDistance(norm=False),
  MeanContactDistance(norm=False, bonded=True),
  AdjPCs(k=8, normalize=False, sign_net=True)
]), cuda=True, use_parallel=False, device=device(type='cuda'))

Dataset construction time: 14.559 minutes
Number of samples: 5000
Average num edges per graph:  61627.9772
Mean degree: [245.68 254.88 219.23 ... 251.09 215.5  255.  ] +- [ 9.13  0.37 26.94 ...  4.77 29.22  0.  ]

split sizes: train=4500, val=500, test=0, N=5000
Optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0
)
Scheduler: <torch.optim.lr_scheduler.MultiStepLR object at 0x7f0c63524430>
#### TRAINING/VALIDATION ####
Epoch 2, loss = 16.2301
Mean test/val loss: 16.0449
[25, 50, 75] percentiles test/val loss: [ 8.6202 11.7802 18.6243]

Epoch 4, loss = 16.2475
Mean test/val loss: 19.7251
[25, 50, 75] percentiles test/val loss: [13.1442 16.8456 22.5439]

Epoch 6, loss = 127.6811
Mean test/val loss: 21.1699
[25, 50, 75] percentiles test/val loss: [11.9167 15.9433 21.9488]

Epoch 8, loss = 16.2334
Mean test/val loss: 16.5764
[25, 50, 75] percentiles test/val loss: [ 7.8072 12.2662 19.0803]

Epoch 10, loss = 43.0187
Mean test/val loss: 24.2475
[25, 50, 75] percentiles test/val loss: [12.7602 19.2925 29.5981]

Epoch 12, loss = 17.7272
Mean test/val loss: 16.7205
[25, 50, 75] percentiles test/val loss: [ 9.349  12.9233 19.5813]

Epoch 14, loss = 56.4501
Mean test/val loss: 16.1728
[25, 50, 75] percentiles test/val loss: [ 9.1123 12.4147 18.4999]

Epoch 16, loss = 16.2158
Mean test/val loss: 16.1097
[25, 50, 75] percentiles test/val loss: [ 8.4936 12.2281 18.5393]

Epoch 18, loss = 15.3546
Mean test/val loss: 15.3901
[25, 50, 75] percentiles test/val loss: [ 7.3744 11.1326 17.7735]

Epoch 20, loss = 1115.2345
Mean test/val loss: 78.7283
[25, 50, 75] percentiles test/val loss: [37.482  58.2001 96.1586]

Epoch 22, loss = 17.8229
Mean test/val loss: 16.6723
[25, 50, 75] percentiles test/val loss: [ 8.1669 12.172  18.6624]

Epoch 24, loss = 78.8724
Mean test/val loss: 15.7987
[25, 50, 75] percentiles test/val loss: [ 7.7023 11.512  18.0051]

Epoch 26, loss = 16.6396
Mean test/val loss: 17.7868
[25, 50, 75] percentiles test/val loss: [10.8748 14.5428 20.3803]

Epoch 28, loss = 121.5029
Mean test/val loss: 19.3141
[25, 50, 75] percentiles test/val loss: [ 8.6858 14.5034 22.4163]

Epoch 30, loss = 18.5492
Mean test/val loss: 15.7058
[25, 50, 75] percentiles test/val loss: [ 8.5444 12.0128 18.2132]

Epoch 32, loss = 516.0086
Mean test/val loss: 889.2574
[25, 50, 75] percentiles test/val loss: [ 495.1786  909.3755 1192.878 ]

Epoch 34, loss = 18.4161
Mean test/val loss: 17.2507
[25, 50, 75] percentiles test/val loss: [ 8.6339 12.8565 19.9496]

Epoch 36, loss = 54.2649
Mean test/val loss: 17.0567
[25, 50, 75] percentiles test/val loss: [ 9.4919 12.964  19.5947]

Epoch 38, loss = 15.8113
Mean test/val loss: 16.7404
[25, 50, 75] percentiles test/val loss: [ 9.9423 13.2373 19.2897]

Epoch 40, loss = 16.3966
Mean test/val loss: 15.4717
[25, 50, 75] percentiles test/val loss: [ 8.1229 11.0771 18.0891]

New lr: 1e-05
Epoch 42, loss = 14.3539
Mean test/val loss: 14.7308
[25, 50, 75] percentiles test/val loss: [ 7.4108 10.4455 17.2478]

Epoch 44, loss = 25.3161
Mean test/val loss: 21.3074
[25, 50, 75] percentiles test/val loss: [ 8.7485 15.8244 27.9171]

Epoch 46, loss = 17.2175
Mean test/val loss: 15.6393
[25, 50, 75] percentiles test/val loss: [ 7.7139 11.7555 18.1157]

Epoch 48, loss = 13.5663
Mean test/val loss: 14.0179
[25, 50, 75] percentiles test/val loss: [ 7.0734 10.1713 16.3964]

Epoch 50, loss = 13.2541
Mean test/val loss: 13.9538
[25, 50, 75] percentiles test/val loss: [ 6.99   10.2608 16.4119]

Epoch 52, loss = 16.8380
Mean test/val loss: 14.5291
[25, 50, 75] percentiles test/val loss: [ 7.5494 11.1004 17.0495]

Epoch 54, loss = 13.0848
Mean test/val loss: 13.6664
[25, 50, 75] percentiles test/val loss: [ 6.7042 10.1707 16.2346]

Epoch 56, loss = 12.5209
Mean test/val loss: 13.0192
[25, 50, 75] percentiles test/val loss: [ 6.3255  9.3157 15.5582]

Epoch 58, loss = 11.7328
Mean test/val loss: 12.1433
[25, 50, 75] percentiles test/val loss: [ 6.4245  8.8705 14.1639]

Epoch 60, loss = 11.2037
Mean test/val loss: 12.0370
[25, 50, 75] percentiles test/val loss: [ 6.7476  9.2022 13.9883]

Epoch 62, loss = 10.5220
Mean test/val loss: 11.0786
[25, 50, 75] percentiles test/val loss: [ 6.1013  8.6179 12.8581]

Epoch 64, loss = 25.3315
Mean test/val loss: 22.0926
[25, 50, 75] percentiles test/val loss: [10.788  17.078  26.6366]

Epoch 66, loss = 15.3369
Mean test/val loss: 14.0720
[25, 50, 75] percentiles test/val loss: [ 7.5303 10.7882 16.5396]

Epoch 68, loss = 26.4078
Mean test/val loss: 15.2628
[25, 50, 75] percentiles test/val loss: [ 7.9405 11.8543 18.5613]

Epoch 70, loss = 10.6627
Mean test/val loss: 10.5103
[25, 50, 75] percentiles test/val loss: [ 5.5128  8.1888 12.4389]

Epoch 72, loss = 14.6737
Mean test/val loss: 14.3064
[25, 50, 75] percentiles test/val loss: [ 7.471  10.5911 16.3313]

Epoch 74, loss = 28.5242
Mean test/val loss: 38.7350
[25, 50, 75] percentiles test/val loss: [10.8122 26.2637 57.5819]

Epoch 76, loss = 11.9329
Mean test/val loss: 12.3353
[25, 50, 75] percentiles test/val loss: [ 6.9854  9.7901 14.2135]

Epoch 78, loss = 17.1226
Mean test/val loss: 19.0952
[25, 50, 75] percentiles test/val loss: [ 7.5297 14.1897 26.7827]

Epoch 80, loss = 9.9796
Mean test/val loss: 10.5055
[25, 50, 75] percentiles test/val loss: [ 5.7549  8.2186 12.0501]


Total parameters: 26974000
Total training + validation time: 16.0 hours, 4.0 mins, and 20.400000000001455 secs
Final val loss: 10.505540889501571

split sizes: train=4500, val=500, test=0, N=5000
#### Plotting Script ####
Prediction Results:
dataset_04_28_23 sample981: 9.91512393951416
dataset_04_28_23 sample324: 13.105291366577148
dataset_04_28_23 sample3464: 12.03994369506836
dataset_04_28_23 sample2834: 7.018437385559082
dataset_04_28_23 sample1936: 11.068338394165039
MSE Loss: 10.629 +- 2.091

Downsampling (40%) Results:
dataset_04_28_23 sample1936-downsampling: 11.068336486816406
dataset_04_28_23 sample2834-downsampling: 7.0711669921875
dataset_04_28_23 sample324-downsampling: 13.460338592529297
dataset_04_28_23 sample3464-downsampling: 12.285634994506836
dataset_04_28_23 sample981-downsampling: 13.983415603637695
Loss: 11.574 +- 2.466

Removing /scratch/midway3/erschultz/ContactGNNEnergy12downsample
Original sampling (100%) Results:
dataset_04_28_23 sample1936-regular: 8.807866096496582
dataset_04_28_23 sample2834-regular: 7.162652969360352
dataset_04_28_23 sample324-regular: 12.99014663696289
dataset_04_28_23 sample3464-regular: 12.039944648742676
dataset_04_28_23 sample981-regular: 9.973123550415039
Loss: 10.195 +- 2.116

Removing /scratch/midway3/erschultz/ContactGNNEnergy12regsample
